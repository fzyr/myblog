<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>SHUNMIAN</title>
		<description>Stylish Jekyll Theme</description>
		<link>/</link>
		<atom:link href="/" rel="self" type="application/rss+xml" />
		
			<item>
				<title>CircleCI</title>
				<description>&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-circle-ci&quot; id=&quot;markdown-toc-1-circle-ci&quot;&gt;1. Circle CI&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11-what-is-circle-ci&quot; id=&quot;markdown-toc-11-what-is-circle-ci&quot;&gt;1.1 What is Circle CI&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#12-how-to-integrate-circle-ci-to-your-repository&quot; id=&quot;markdown-toc-12-how-to-integrate-circle-ci-to-your-repository&quot;&gt;1.2 How to integrate Circle CI to your repository&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-参考资料&quot; id=&quot;markdown-toc-2-参考资料&quot;&gt;2 参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-circle-ci&quot;&gt;1. Circle CI&lt;/h2&gt;

&lt;h3 id=&quot;11-what-is-circle-ci&quot;&gt;1.1 What is Circle CI&lt;/h3&gt;

&lt;p class=&quot;img_middle_lg&quot;&gt;&lt;img src=&quot;/assets/images/posts/-24 Continous Integartion/2018-05-16-CircleCI/What is CircleCI.png&quot; alt=&quot;Vim summary&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;12-how-to-integrate-circle-ci-to-your-repository&quot;&gt;1.2 How to integrate Circle CI to your repository&lt;/h3&gt;

&lt;p&gt;TBC.&lt;/p&gt;

&lt;h2 id=&quot;2-参考资料&quot;&gt;2 参考资料&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://circleci.com/docs/2.0/&quot;&gt;《CircleCI Documentation》&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Wed, 16 May 2018 00:00:00 +0800</pubDate>
				<link>/-24%20continous%20integration/2018/05/16/CircleCI.html</link>
				<guid isPermaLink="true">/-24%20continous%20integration/2018/05/16/CircleCI.html</guid>
			</item>
		
			<item>
				<title>Jest</title>
				<description>&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-test-框架原型&quot; id=&quot;markdown-toc-1-test-框架原型&quot;&gt;1. Test 框架原型&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11-基本数据结构测试&quot; id=&quot;markdown-toc-11-基本数据结构测试&quot;&gt;1.1 基本数据结构测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#12-异步测试&quot; id=&quot;markdown-toc-12-异步测试&quot;&gt;1.2 异步测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#13-group测试&quot; id=&quot;markdown-toc-13-group测试&quot;&gt;1.3 Group测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#14-mock测试&quot; id=&quot;markdown-toc-14-mock测试&quot;&gt;1.4 Mock测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#15-test-coveraage-report-intepration&quot; id=&quot;markdown-toc-15-test-coveraage-report-intepration&quot;&gt;1.5 Test Coveraage Report Intepration&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-参考资料&quot; id=&quot;markdown-toc-2-参考资料&quot;&gt;2 参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-test-框架原型&quot;&gt;1. Test 框架原型&lt;/h2&gt;

&lt;h3 id=&quot;11-基本数据结构测试&quot;&gt;1.1 基本数据结构测试&lt;/h3&gt;

&lt;h3 id=&quot;12-异步测试&quot;&gt;1.2 异步测试&lt;/h3&gt;

&lt;h3 id=&quot;13-group测试&quot;&gt;1.3 Group测试&lt;/h3&gt;

&lt;h3 id=&quot;14-mock测试&quot;&gt;1.4 Mock测试&lt;/h3&gt;

&lt;p&gt;TBC.&lt;/p&gt;

&lt;h3 id=&quot;15-test-coveraage-report-intepration&quot;&gt;1.5 Test Coveraage Report Intepration&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Statements:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Branches:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Functions:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Lines:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;2-参考资料&quot;&gt;2 参考资料&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/jest/docs/en/getting-started.html&quot;&gt;《Jest Documentation》&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Mon, 16 Apr 2018 00:00:00 +0800</pubDate>
				<link>/-23%20test/2018/04/16/Jest.html</link>
				<guid isPermaLink="true">/-23%20test/2018/04/16/Jest.html</guid>
			</item>
		
			<item>
				<title>Vim</title>
				<description>&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-vim-总结&quot; id=&quot;markdown-toc-1-vim-总结&quot;&gt;1. Vim 总结&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-参考资料&quot; id=&quot;markdown-toc-2-参考资料&quot;&gt;2 参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-vim-总结&quot;&gt;1. Vim 总结&lt;/h2&gt;

&lt;p class=&quot;img_middle_lg&quot;&gt;&lt;img src=&quot;/assets/images/posts/20_TextEditor/2017-10-01-Vim/vim-cheat-sheet-advanced.png&quot; alt=&quot;Vim summary&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-参考资料&quot;&gt;2 参考资料&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/vim-commands-cheat-sheet/&quot;&gt;《Vim Masterclass》&lt;/a&gt;;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Sun, 01 Oct 2017 00:00:00 +0800</pubDate>
				<link>/-20%20text%20editor/2017/10/01/Vim.html</link>
				<guid isPermaLink="true">/-20%20text%20editor/2017/10/01/Vim.html</guid>
			</item>
		
			<item>
				<title>iOS 2D Game - SpriteKit入门(一)</title>
				<description>&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-spritekit-概览&quot; id=&quot;markdown-toc-1-spritekit-概览&quot;&gt;1. SpriteKit 概览&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-sknodeskphysicsworld--skphysicsbodyskaction理解&quot; id=&quot;markdown-toc-2-sknodeskphysicsworld--skphysicsbodyskaction理解&quot;&gt;2. SKNode，SKPhysicsWorld &amp;amp; SKPhysicsBody，SKAction理解&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-sknode&quot; id=&quot;markdown-toc-21-sknode&quot;&gt;2.1 SKNode&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#211-skscene&quot; id=&quot;markdown-toc-211-skscene&quot;&gt;2.1.1 SKScene&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#212-skspritenode&quot; id=&quot;markdown-toc-212-skspritenode&quot;&gt;2.1.2 SKSpriteNode&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#213-sklabelnode&quot; id=&quot;markdown-toc-213-sklabelnode&quot;&gt;2.1.3 SKLabelNode&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#214-skemitternode&quot; id=&quot;markdown-toc-214-skemitternode&quot;&gt;2.1.4 SKEmitterNode&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-skphysicsworld--skphysicsbody&quot; id=&quot;markdown-toc-22-skphysicsworld--skphysicsbody&quot;&gt;2.2 SKPhysicsWorld &amp;amp; SKPhysicsBody&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#221-skphysicsworld&quot; id=&quot;markdown-toc-221-skphysicsworld&quot;&gt;2.2.1 SKPhysicsWorld&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#222-skphysicsbody&quot; id=&quot;markdown-toc-222-skphysicsbody&quot;&gt;2.2.2 SKPhysicsBody&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-skaction&quot; id=&quot;markdown-toc-23-skaction&quot;&gt;2.3. SKAction&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3其它类&quot; id=&quot;markdown-toc-3其它类&quot;&gt;3.其它类&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-总结&quot; id=&quot;markdown-toc-4-总结&quot;&gt;4 总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-spritekit-概览&quot;&gt;1. SpriteKit 概览&lt;/h2&gt;

&lt;p&gt;SpriteKit是Apple官方的2D游戏框架， 让开发者在iOS 和OS 平台上更高效的开发2D游戏。&lt;/p&gt;

&lt;p&gt;学习SpriteKit， 最权威的资料应该是苹果官方文档 -
&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/GraphicsAnimation/Conceptual/SpriteKit_PG/Introduction/Introduction.html&quot;&gt;SpriteKit Programming Guide&lt;/a&gt;。 该文档很全面但是不适合初学者。 对于初学者， 理解SpriteKit背后的设计rationale才能更好的应用它。 那么SpriteKit的设计rationale是什么呢？&lt;/p&gt;

&lt;p&gt;对于一个2D游戏来说， 设计应该分为三个部分(以超级马里奥为例):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;View: 即视图显示，用于展示各个Sprite(精灵)，例如马里奥图片和子弹图片;&lt;/li&gt;
  &lt;li&gt;Physics Model:即物理模型， 包括质量， 体积(2D游戏是面积)， 密度， 碰撞， 地球引力等， 例如超级马里奥碰到水管会弹回来， 往上跳会下落。&lt;/li&gt;
  &lt;li&gt;Action:即 物理模型受到的外部作用力。例如超级马里奥里的空中台阶自己来回移动(开发者给其施加一个永恒的来回运动的作用力)。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这三个方面分别对应SpriteKit里面的SKNode，SKPhysicsWorld &amp;amp; SKPhysicsBody，SKAction。&lt;/p&gt;

&lt;h2 id=&quot;2-sknodeskphysicsworld--skphysicsbodyskaction理解&quot;&gt;2. SKNode，SKPhysicsWorld &amp;amp; SKPhysicsBody，SKAction理解&lt;/h2&gt;
&lt;h3 id=&quot;21-sknode&quot;&gt;2.1 SKNode&lt;/h3&gt;

&lt;p&gt;SKNode 是 SpriteKit 显示视图的Building Block。它能提供一个游戏视图的基本属性和方法:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKNode Class

属性:
.zPosition              // 视图的z方向的距离，用于标定重叠视图的显示顺序;
.xScale                 // x方向的视图放大倍数;
.yScale                 // y方向的视图放大倍数;
.alpha                  // 视图的alpha值;
.hidden                 // 视图是否隐藏;

方法:
-addChild:              // 增加子SKNode，与UIView 的 -addSubView: 类似;
-removeFromParent:      // 从父SKNode移除，与 UIView的removeFromSuperview 类似;
-runAction:             // 运行一个SKAction;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;我们一般不直接用它，它下面有几个子类，其中最常见的是以下4个:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SKEffectNode: 用于缓存，渲染，加滤镜于图片。它的子类SKScene 用于展示所有的SKNode，是游戏场景;&lt;/li&gt;
  &lt;li&gt;SKSpriteNode: 用于展示精灵，如超级马里奥图片;&lt;/li&gt;
  &lt;li&gt;SKLabelNode: 用于展示单行文本，如游戏时间;&lt;/li&gt;
  &lt;li&gt;SKEmitterNode: 用于展示粒子，例如喷射火焰的岩浆;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面我们就这四个类做一个简单的介绍。&lt;/p&gt;

&lt;h4 id=&quot;211-skscene&quot;&gt;2.1.1 SKScene&lt;/h4&gt;
&lt;p&gt;SKScene 是游戏关口(level)，游戏中的一个场景，例如马里奥的第一关和第二关分别是两个SKCene实例。在这个场景中，包含了所有其他SKNode(或者其子类)，比如马里奥(SKSpriteNode)，游戏时间(SKLabelNode)，喷射火焰的岩浆(SKEmitterNode)。它的主要属性和方法有:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKScene Class

属性:
.view                   // 关口的父视图，是一个SKView，用来展示各个SKScene关口;
.physicsWorld           // 世界的物理模型，是一个SKPhysicsWorld实例，这个后面会介绍;

方法:
-initWithSize:          // 初始化方法;
+SceneWithSize:         // 初始化类工厂方法;
-didMoveToView:         // 当SKScene实例被SKView展示时调用，类似UIView的-didMoveToSuperview;
-addChild:              // 增加子SKNode，如马里奥(SKSpriteNode);&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;212-skspritenode&quot;&gt;2.1.2 SKSpriteNode&lt;/h4&gt;
&lt;p&gt;SKSpriteNode是用来展示sprite，那么何为sprite呢，sprite有什么作用呢? Wiki中是这样定义的。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sprite: two-dimensional image or animation that is integrated into a larger scene.Initially including just graphical objects handled &lt;strong&gt;separately&lt;/strong&gt; from the memory bitmap of a video display，this now includes various manners of graphical overlays.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;sprite是从整个display独立出来渲染的2D图片。如何理解这句话呢，在sprite出现之前，2D游戏要渲染一帧图片(比如马里奥在一个蓝天白云的背景前)，需要把整个图片(马里奥+背景)计算完后再渲染，其中背景的渲染在每一帧中都重复。sprite的出现正是为了避免这一重复。马里奥是一个sprite，他在一个固定的背景前跳跃，只需要将马里奥的每一帧渲染出来叠在背景(背景不需要重复计算渲染)即可，这就是为什么sprite被称为从整个display独立出来渲染的2D图片。sprite的思想在几十年前就已经有了，SpriteKit只是沿袭了2D游戏设计中运用sprite这一思想，用SKSpriteNode来表示sprite类。我们来看下SKSpriteNode的属性和方法&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKSpriteNode Class

属性:
.size                       // 大小;
.physicsBody                // 物体的物理模型，是一个SKPhysicsBody实例，这个后面会介绍;

方法:
+spriteNodeWithImageNamed:  // 类工厂方法，用图片创建sprite;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;213-sklabelnode&quot;&gt;2.1.3 SKLabelNode&lt;/h4&gt;
&lt;p&gt;SKLabelNode是SpriteKit用来展示text，它的方法和属性如下。有一点需要注意的是它只能显示单行文本。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKLabelNode Class

属性:
.fontSize               // 字体大小;
.color                  // 字体颜色;
.fontName               // 字体名字;

方法:
-initWithFontNamed:     // 通过字体名字初始化方法;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;214-skemitternode&quot;&gt;2.1.4 SKEmitterNode&lt;/h4&gt;
&lt;p&gt;SKEmitterNode是SpriteKit用来展示粒子系统的，下面介绍下它的常见使用方法。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;subclass一个SpriteKit Particles Files ( ctrl + N –&amp;gt; iOS，Resources，SpriteKit Particles Files –&amp;gt; choose 1 of the eight template –&amp;gt; save，你会得到一个.sks 和.png 文件，点击.sks文件:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/images/posts/2016-02-20/SKEmitterNode_1.png&quot; alt=&quot;SKEmitterNode_1&quot; /&gt;
 &lt;img src=&quot;/assets/images/posts/2016-02-20/SKEmitterNode_2.png&quot; alt=&quot;SKEmitterNode_2&quot; /&gt;
 &lt;img src=&quot;/assets/images/posts/2016-02-20/SKEmitterNode_3.png&quot; alt=&quot;SKEmitterNode_3&quot; /&gt;
 &lt;img src=&quot;/assets/images/posts/2016-02-20/SKEmitterNode_4.png&quot; alt=&quot;SKEmitterNode_4&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;在.sks文件右侧调整各参数，例如有粒子平均产生率(BirthRate) 单位是个/秒。右边的range是一个分布，在平均产生率上 ±  range/2 分布。particle texture 是粒子的纹路，你可以选择自己加入的图片文件。&lt;/li&gt;
  &lt;li&gt;调整完成后如何在code中调用.sks文件呢:&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;SKEmitterParticle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fireParticles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSKeyedUnarchiver&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;unarchiveObjectWithFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSBundle&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mainBundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pathForResource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;FireParticle&quot;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ofType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;sks&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fireParticles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;particleBirthRate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fireParticles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CGPointMake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 用NSBundle读取.sks 文件，然后可以进一步修改其属性。这样就完成了SpriteKit Particles Files 的子类化和应用。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;22-skphysicsworld--skphysicsbody&quot;&gt;2.2 SKPhysicsWorld &amp;amp; SKPhysicsBody&lt;/h3&gt;
&lt;p&gt;SpriteKit 里表示物理模型的有两个类，SKPhysicsWorld &amp;amp; SKPhysicsBody，前者属于SKScene，后者属于SKNode其他子类。SKPhysicsWorld 和 SKPhysicsBody 都继承与NSObject。我们先来看看SKPhysicsWorld。&lt;/p&gt;

&lt;h4 id=&quot;221-skphysicsworld&quot;&gt;2.2.1 SKPhysicsWorld&lt;/h4&gt;
&lt;p&gt;对于一个物理世界来说，例如我们的地球，有一些属性决定了我们日常生活的基础，如重力加速度。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKPhysicsWorld Class

属性:
.gravity:                   // 重力加速度了， 通过CGVectorMaker(0，-9.8)获得现实生活一个重力加速度。第一个参数是x轴，向右为正，第二个参数是y轴，向上为正;
.contactDelegate            // SKPhyicsContactDelegate 实例;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;又比如物体碰撞后的处理者，可以理解为物体碰撞后有一个裁判需要对此进行处理，在SpriteKit中是SKPhyicsContactDelegate。而SKPhysicsWorld 的contactDelegate属性就指向这样一个delegate，也就是说由物理世界充当裁判的角色。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKPhysicsContactDelegate Class

方法:
-didBeginContact:       // 碰撞开始;
-didEndContact:         // 碰撞结束;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;对于SKPhysicsContactDelegate两个方法的使用我们后面介绍。&lt;/p&gt;

&lt;h4 id=&quot;222-skphysicsbody&quot;&gt;2.2.2 SKPhysicsBody&lt;/h4&gt;
&lt;p&gt;SKPhysicsBody代表物理模型里的物体，它有质量，体积(2D 游戏里是面积)，密度，线速度，角速度，自旋速度等。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKPhysicsBody Class

属性:
.mass                       // 质量，单位kg;
.area                       // 面积，单位m*m;
.density                    // 密度，单位kg/m*m;
.friction                   // 表面粗糙度，0.0-1.0;
.restitution                // 碰撞时，反射速度/入射速度，0.0-1.0;
.linearDamping              // 物体线速度受液体或者气体(空气)摩擦的影响， 0.0-1.0;
.dynamic                    // YES，动态; NO，静态，与SKPhysicsWorld相连，不受碰撞影响;
.categoryBitMask            // 自身的contact &amp;amp; collision ID;
.contactTestBitMask         // 外界contact测试的ID集合;
.collisionBitMask           // 外界collision的ID集合;

方法:
+bodyWithRectangleOfSize:   // 创建Volume-physicsBody的一种类工厂方法;
+bodyWithEdgeLoopFromRect:  // 创建Edge-physicsBody的一种类工厂方法;
-applyImpulse:              // 被施加外部瞬时力;
-applyForce:                // 被施加外部永恒力;
-runAction:                 // 运行一个SKAction实例;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;.dynamics 是一个BOOL，设置为NO时，静止(可以理解为与SKPhyisicsWorld相连)，位置不受碰撞前后影响， 例如马里奥里的乌龟壳，碰到水管后反弹，水管静止，这里水管的dynamic就是NO， 乌龟壳的dynmaics就是YES。&lt;/p&gt;

&lt;p&gt;要创建一个在框里永远碰撞而不停下的ball，应设置如下friction，restituition， linearDamping:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;ball&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;friction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ball&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;restitution&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ball&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linearDamping&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;SKPhysicsBody的创建分为两种，一种是Volume-physicsBody，就是有体积(2D里是面积)的物体，有体积意味着有质量，受牛顿定律影响;另一种是只有边缘没有体积的Edge-physicsBody，如上面那个装永动球的箱子，我们只关心箱子的边框，用 +bodyWithEdgeLoopFromRect: 创建它并设置其dynamics = NO 即可。&lt;/p&gt;

&lt;p&gt;下面重点要介绍的是接触和碰撞。
SpriteKit为每个物体在接触和碰撞时设定了一个身份证——categoryBitMask，该属性唯一标定了接触和碰撞时每个物体的身份，是一个32 bit的数，我们下面先看code再解释:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MariaCategory&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TortoiseCategory&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BulletCategory&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;我们设置了3种uint32_t的静态常量，分别代表马里奥，子弹，乌龟。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objec&quot; data-lang=&quot;objec&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;maria.categoryBitMask = MariaCategory;
tortoise.categoryBitMask = TortoiseCategory;
bullet.categoryBitMask = BulletCategory;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;然后分别给maria，tortoise以及bullte的categoryBitMask设置为相应值。同时我们需要在以下情形中判断contact发生并作出相应，如马里奥碰到乌龟，马里奥die;子弹碰到乌龟，乌龟die:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;maria&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contactTestBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TortoiseCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tortoise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contactTestBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BulletCategory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MariaCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bullet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contactTestBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TortoiseCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;上面将maria感兴趣的contact ID集设置为乌龟，乌龟设置为子弹和马里奥，子弹设置为乌龟。用32位非常便于取或操作，同时也限定了一个游戏场景里的碰撞接触的身份证只能有32个。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GameScene&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SKScene&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKPhysicsContactDelegate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moveToParent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;physicsWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contactDelegate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;didBeginContact&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKPhysicsContact&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//我们来简单举一个子弹打到乌龟，乌龟die的contact测试。
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;SKPhysicsBody&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tortoise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categoryBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BulletCategory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categoryBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TortoiseCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tortoise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categoryBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BulletCategory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categoryBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TortoiseCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tortoise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;tortoise die: %@&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tortoise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这样当子弹打到乌龟，GameScene 作为SKPhysicsContactDelegate就会响应-didBeginContact: 方法，然后判断情形，如果是，则打印出来”tortoise die:tortoise的object信息”。&lt;/p&gt;

&lt;p&gt;了解了categoryBitMask 和contactTestBitMask， 我们再来看collisionBitMask就简单了，它表示物体之间会不会intersect，也是32位数。默认是32个1，表示与任何物体碰撞都不会穿过那个物体。如果你需要将某个物体穿过另一个物体，比如子弹打到马里奥，直接穿过(当然游戏中不可能发生):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objec&quot; data-lang=&quot;objec&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;maria.collisionBitMask = ~BulletCategory;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;最后力的施加我们在SKAction里介绍。&lt;/p&gt;

&lt;h3 id=&quot;23-skaction&quot;&gt;2.3. SKAction&lt;/h3&gt;
&lt;p&gt;SKAction表示一个动作，由SKNode得 -runAction: 方法执行，它有几十个方法。下面列出几个比较典型的， 它的实例化大部分都是类工厂方法:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKAction Class

初始化方法:
+moveByX:y:duration:                    // 移动一个SKNode;
+rotationByAngule:duration:             // 转动一个SKNode;
+hide                                   // 隐藏一个SKNode， 对应的还有 +unhide;
+applyForce:duration:                   // 施加力;
+playSoundFileNamed:waitForCompletion:  // 播放音频文件;
+removeFromParent                       // 将SKNode从父node里移除;
+waitForDuration:                       // 等待的动作，在SKAction group和sequence里用到;

+group:                                 // 组合几个SKAction，从时间起点，这几个SKAction同时开始;
+sequence:                              // 串联几个SKAction，从时间起始点，下一个的开始在上一个结束后才执行;
+repeatActionForever:                   // 永远重复SKAction;
-reversedAction:                        // 逆向一个SKAction，如原来从左到右2秒，现在从右到左两秒;

+runBlock:queque:                       // 在队列里执行SKAction;
+customActionWithDuration:actionBlock:  // 定制SKAction;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;例如马里奥中需要一个空中台阶，“”从左到右2秒，等待0.5秒，从右到左2秒，等待0.5秒 ”的sequence永远运行下去，code如下:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moveToRight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;moveByX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moveToLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moveToRight&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;reversedAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;waitForDuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moveToRightAndLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sequence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:@[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moveToRight&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moveToLeft&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moveToRightAndLeftForever&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;repeatActionForever&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moveToRightAndLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;platform&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;runAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moveToRightAndLeftForever&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;3其它类&quot;&gt;3.其它类&lt;/h2&gt;
&lt;p&gt;在SKView中，场景的不同切换要用到SKTransition，self指一个scene:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;SKTransition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doorOpenTransition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKTransition&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doorsOpenHorizontalWithDuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;presentScene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;winScene&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doorOpenTransition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;4-总结&quot;&gt;4 总结&lt;/h2&gt;
&lt;p&gt;以上对于SKSpriteKit里的大部分常用类及其用法做了介绍，相信读者能够自己画出SKSpriteKit的类图关系，再回过头来跟着online的SKSpriteKit的tutorial做一遍的时候，自然就了然于心。后面还有一篇从各个小topic来看SKSpriteKit。&lt;/p&gt;
</description>
				<pubDate>Fri, 30 Dec 2016 00:00:00 +0800</pubDate>
				<link>/01%20objective-c/2016/12/30/SpriteKit.html</link>
				<guid isPermaLink="true">/01%20objective-c/2016/12/30/SpriteKit.html</guid>
			</item>
		
			<item>
				<title>Spring Framework</title>
				<description>&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-summary&quot; id=&quot;markdown-toc-1-summary&quot;&gt;1 Summary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-参考资料&quot; id=&quot;markdown-toc-2-参考资料&quot;&gt;2 参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-summary&quot;&gt;1 Summary&lt;/h2&gt;

&lt;p class=&quot;img_middle_hg&quot;&gt;&lt;img src=&quot;/assets/images/posts/03 Java/2016-11-11-Spring Framework/Spring Summary.png&quot; alt=&quot;Spring Summary.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-参考资料&quot;&gt;2 参考资料&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://book.douban.com/subject/3897837/&quot;&gt;Spring 揭秘&lt;/a&gt;;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Fri, 11 Nov 2016 00:00:00 +0800</pubDate>
				<link>/03%20java/2016/11/11/Spring-Framework.html</link>
				<guid isPermaLink="true">/03%20java/2016/11/11/Spring-Framework.html</guid>
			</item>
		
			<item>
				<title>Effective Java</title>
				<description>&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-content&quot; id=&quot;markdown-toc-1-content&quot;&gt;1 Content&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#chapter-2-creating-and-destroying-objects&quot; id=&quot;markdown-toc-chapter-2-creating-and-destroying-objects&quot;&gt;Chapter 2: Creating and Destroying Objects&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#item-1-consider-static-factory-methods-instead-of-constructors&quot; id=&quot;markdown-toc-item-1-consider-static-factory-methods-instead-of-constructors&quot;&gt;Item 1: Consider static factory methods instead of constructors&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-2-consider-a-builder-when-faced-with-many-constructor-parameters&quot; id=&quot;markdown-toc-item-2-consider-a-builder-when-faced-with-many-constructor-parameters&quot;&gt;Item 2: Consider a builder when faced with many constructor parameters&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-3-enforce-the-singleton-property-with-a-private-constructor-or-an-enum-type&quot; id=&quot;markdown-toc-item-3-enforce-the-singleton-property-with-a-private-constructor-or-an-enum-type&quot;&gt;Item 3: Enforce the singleton property with a private constructor or an enum type&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-4-enforce-noninstantiability-with-a-private-constructor&quot; id=&quot;markdown-toc-item-4-enforce-noninstantiability-with-a-private-constructor&quot;&gt;Item 4: Enforce noninstantiability with a private constructor&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-5-prefer-dependency-injection-to-hardwiring-resources&quot; id=&quot;markdown-toc-item-5-prefer-dependency-injection-to-hardwiring-resources&quot;&gt;Item 5: Prefer dependency injection to hardwiring resources&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-6-avoid-creating-unnecessary-objects&quot; id=&quot;markdown-toc-item-6-avoid-creating-unnecessary-objects&quot;&gt;Item 6: Avoid creating unnecessary objects&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-7-eliminate-obsolete-object-references&quot; id=&quot;markdown-toc-item-7-eliminate-obsolete-object-references&quot;&gt;Item 7: Eliminate obsolete object references&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-8-avoid-finalizers-and-cleaners&quot; id=&quot;markdown-toc-item-8-avoid-finalizers-and-cleaners&quot;&gt;Item 8: Avoid finalizers and cleaners&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-9-prefer-try-with-resources-to-try-finally&quot; id=&quot;markdown-toc-item-9-prefer-try-with-resources-to-try-finally&quot;&gt;Item 9: Prefer &lt;code class=&quot;highlighter-rouge&quot;&gt;try-with-resources&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;try-finally&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#chapter-3-methods-common-to-all-objects&quot; id=&quot;markdown-toc-chapter-3-methods-common-to-all-objects&quot;&gt;Chapter 3: Methods Common to All Objects&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#item-10-obey-the-general-contract-when-overriding-equals&quot; id=&quot;markdown-toc-item-10-obey-the-general-contract-when-overriding-equals&quot;&gt;Item 10: Obey the general contract when overriding &lt;code class=&quot;highlighter-rouge&quot;&gt;equals&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-11-always-overrride-hashcode-when-you-override-equals&quot; id=&quot;markdown-toc-item-11-always-overrride-hashcode-when-you-override-equals&quot;&gt;Item 11: Always overrride &lt;code class=&quot;highlighter-rouge&quot;&gt;hashCode&lt;/code&gt; when you override &lt;code class=&quot;highlighter-rouge&quot;&gt;equals&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-12-always-overrride-tostring&quot; id=&quot;markdown-toc-item-12-always-overrride-tostring&quot;&gt;Item 12: Always overrride &lt;code class=&quot;highlighter-rouge&quot;&gt;toString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-13-override-clone-judiciously&quot; id=&quot;markdown-toc-item-13-override-clone-judiciously&quot;&gt;Item 13: Override &lt;code class=&quot;highlighter-rouge&quot;&gt;clone&lt;/code&gt; judiciously&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-14-consider-implementing-comparable&quot; id=&quot;markdown-toc-item-14-consider-implementing-comparable&quot;&gt;Item 14: Consider implementing &lt;code class=&quot;highlighter-rouge&quot;&gt;Comparable&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#chapter-4-classes-and-interfaces&quot; id=&quot;markdown-toc-chapter-4-classes-and-interfaces&quot;&gt;Chapter 4: Classes and Interfaces&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#item-15-minimize-the-accessibility-of-classes-and-members&quot; id=&quot;markdown-toc-item-15-minimize-the-accessibility-of-classes-and-members&quot;&gt;Item 15: Minimize the accessibility of classes and members&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-16-in-public-classes-use-accessor-methods-not-public-fields&quot; id=&quot;markdown-toc-item-16-in-public-classes-use-accessor-methods-not-public-fields&quot;&gt;Item 16: In public classes, use accessor methods, not public fields&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-17-minimize-mutability&quot; id=&quot;markdown-toc-item-17-minimize-mutability&quot;&gt;Item 17: Minimize mutability&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-18-favor-composition-over-inheritance&quot; id=&quot;markdown-toc-item-18-favor-composition-over-inheritance&quot;&gt;Item 18: Favor composition over inheritance&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-19-design-and-document-for-inheritance-or-else-prohibit-it&quot; id=&quot;markdown-toc-item-19-design-and-document-for-inheritance-or-else-prohibit-it&quot;&gt;Item 19: Design and document for inheritance or else prohibit it&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-20-prefer-interfaces-to-abstrace-classes&quot; id=&quot;markdown-toc-item-20-prefer-interfaces-to-abstrace-classes&quot;&gt;Item 20: Prefer interfaces to abstrace classes&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-21-design-interfaces-for-posterity&quot; id=&quot;markdown-toc-item-21-design-interfaces-for-posterity&quot;&gt;Item 21: Design interfaces for posterity&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-22-use-interfaces-only-to-define-types&quot; id=&quot;markdown-toc-item-22-use-interfaces-only-to-define-types&quot;&gt;Item 22: Use interfaces only to define types&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-23-prefer-class-hierarchies-to-tagged-classes&quot; id=&quot;markdown-toc-item-23-prefer-class-hierarchies-to-tagged-classes&quot;&gt;Item 23: Prefer class hierarchies to tagged classes&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-24-favor-static-member-classes-over-nonstatic&quot; id=&quot;markdown-toc-item-24-favor-static-member-classes-over-nonstatic&quot;&gt;Item 24: Favor static member classes over nonstatic&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-25-limit-source-files-to-a-single-top-level-class&quot; id=&quot;markdown-toc-item-25-limit-source-files-to-a-single-top-level-class&quot;&gt;Item 25: Limit source files to a single top-level class&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#chapter-5-generics&quot; id=&quot;markdown-toc-chapter-5-generics&quot;&gt;Chapter 5: Generics&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#item-26-dont-use-raw-types&quot; id=&quot;markdown-toc-item-26-dont-use-raw-types&quot;&gt;Item 26: Don’t use raw types&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-27-eliminate-unchecked-warnings&quot; id=&quot;markdown-toc-item-27-eliminate-unchecked-warnings&quot;&gt;Item 27: Eliminate unchecked warnings&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-28-prefer-lists-to-arrays&quot; id=&quot;markdown-toc-item-28-prefer-lists-to-arrays&quot;&gt;Item 28: Prefer lists to arrays&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-29-favor-generic-types&quot; id=&quot;markdown-toc-item-29-favor-generic-types&quot;&gt;Item 29: Favor generic types&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-30-favor-generic-methods&quot; id=&quot;markdown-toc-item-30-favor-generic-methods&quot;&gt;Item 30: Favor generic methods&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-31-use-bounded-wildcards-to-increase-api-flexibility&quot; id=&quot;markdown-toc-item-31-use-bounded-wildcards-to-increase-api-flexibility&quot;&gt;Item 31: Use bounded wildcards to increase API flexibility&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-32-combine-generics-and-varargs-judiciously&quot; id=&quot;markdown-toc-item-32-combine-generics-and-varargs-judiciously&quot;&gt;Item 32: Combine generics and varargs judiciously&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-33-consider-typesafe-heterogeneous-containers&quot; id=&quot;markdown-toc-item-33-consider-typesafe-heterogeneous-containers&quot;&gt;Item 33: Consider typesafe heterogeneous containers&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#chapter-6-enums-and-annotations&quot; id=&quot;markdown-toc-chapter-6-enums-and-annotations&quot;&gt;Chapter 6: Enums and Annotations&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#item-34-use-enums-instead-of-int-constants&quot; id=&quot;markdown-toc-item-34-use-enums-instead-of-int-constants&quot;&gt;Item 34: Use enums instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt; constants&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-35-use-instance-fields-instead-of-ordinals&quot; id=&quot;markdown-toc-item-35-use-instance-fields-instead-of-ordinals&quot;&gt;Item 35: Use instance fields instead of ordinals&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-36-use-enumset-instead-of-bit-fields&quot; id=&quot;markdown-toc-item-36-use-enumset-instead-of-bit-fields&quot;&gt;Item 36: Use &lt;code class=&quot;highlighter-rouge&quot;&gt;EnumSet&lt;/code&gt; instead of bit fields&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-37-use-enummap-instead-of-ordinal-indexing&quot; id=&quot;markdown-toc-item-37-use-enummap-instead-of-ordinal-indexing&quot;&gt;Item 37: Use &lt;code class=&quot;highlighter-rouge&quot;&gt;EnumMap&lt;/code&gt; instead of ordinal indexing&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-38-emulate-extensible-enums-with-interfaces&quot; id=&quot;markdown-toc-item-38-emulate-extensible-enums-with-interfaces&quot;&gt;Item 38: Emulate extensible enums with interfaces&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-39-prefer-annotations-to-naming-patterns&quot; id=&quot;markdown-toc-item-39-prefer-annotations-to-naming-patterns&quot;&gt;Item 39: Prefer annotations to naming patterns&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-40-consistently-use-the-override-annotation&quot; id=&quot;markdown-toc-item-40-consistently-use-the-override-annotation&quot;&gt;Item 40: Consistently use the &lt;code class=&quot;highlighter-rouge&quot;&gt;Override&lt;/code&gt; annotation&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-41-use-marker-interfaces-to-define-types&quot; id=&quot;markdown-toc-item-41-use-marker-interfaces-to-define-types&quot;&gt;Item 41: Use marker interfaces to define types&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#chapter-7-lambdas-and-streams&quot; id=&quot;markdown-toc-chapter-7-lambdas-and-streams&quot;&gt;Chapter 7: Lambdas and Streams&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#item-42-prefer-lambdas-to-anonymous-classes&quot; id=&quot;markdown-toc-item-42-prefer-lambdas-to-anonymous-classes&quot;&gt;Item 42: Prefer lambdas to anonymous classes&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-43-prefer-method-references-to-lambdas&quot; id=&quot;markdown-toc-item-43-prefer-method-references-to-lambdas&quot;&gt;Item 43: Prefer method references to lambdas&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-44-favor-the-use-of-standard-functional-interfaces&quot; id=&quot;markdown-toc-item-44-favor-the-use-of-standard-functional-interfaces&quot;&gt;Item 44: Favor the use of standard functional interfaces&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-45-use-streams-judiciously&quot; id=&quot;markdown-toc-item-45-use-streams-judiciously&quot;&gt;Item 45: Use streams judiciously&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-46-prefer-side-effect-free-functions-in-streams&quot; id=&quot;markdown-toc-item-46-prefer-side-effect-free-functions-in-streams&quot;&gt;Item 46: Prefer side-effect-free functions in streams&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-47-prefer-collection-to-stream-as-a-return-type&quot; id=&quot;markdown-toc-item-47-prefer-collection-to-stream-as-a-return-type&quot;&gt;Item 47: Prefer Collection to Stream as a return type&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-48-use-cautio-when-making-streams-parallel&quot; id=&quot;markdown-toc-item-48-use-cautio-when-making-streams-parallel&quot;&gt;Item 48: Use cautio when making streams parallel&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#chapter-8-methods&quot; id=&quot;markdown-toc-chapter-8-methods&quot;&gt;Chapter 8: Methods&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#item-49-check-parameters-for-validity&quot; id=&quot;markdown-toc-item-49-check-parameters-for-validity&quot;&gt;Item 49: Check Parameters for validity&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-50-make-defensive-copies-when-needed&quot; id=&quot;markdown-toc-item-50-make-defensive-copies-when-needed&quot;&gt;Item 50: Make defensive copies when needed&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-51-design-method-signatures-carefully&quot; id=&quot;markdown-toc-item-51-design-method-signatures-carefully&quot;&gt;Item 51: Design method signatures carefully&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-52-use-overloading-judiciously&quot; id=&quot;markdown-toc-item-52-use-overloading-judiciously&quot;&gt;Item 52: Use overloading judiciously&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-53-use-varargs-judiciously&quot; id=&quot;markdown-toc-item-53-use-varargs-judiciously&quot;&gt;Item 53: Use varargs judiciously&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-54-return-empty-collections-or-arrays-not-nulls&quot; id=&quot;markdown-toc-item-54-return-empty-collections-or-arrays-not-nulls&quot;&gt;Item 54: Return empty collections or arrays, not nulls&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-55-return-optionals-judiciously&quot; id=&quot;markdown-toc-item-55-return-optionals-judiciously&quot;&gt;Item 55: Return optionals judiciously&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-56-write-code-comments-for-all-exposed-api-elements&quot; id=&quot;markdown-toc-item-56-write-code-comments-for-all-exposed-api-elements&quot;&gt;Item 56: Write code comments for all exposed API elements&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#chapter-9-general-programmming&quot; id=&quot;markdown-toc-chapter-9-general-programmming&quot;&gt;Chapter 9: General Programmming&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#item-57-minimize-the-scope-of-local-variables&quot; id=&quot;markdown-toc-item-57-minimize-the-scope-of-local-variables&quot;&gt;Item 57: Minimize the scope of local variables&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-58-prefer-for-each-loops-to-traditional-for-loops&quot; id=&quot;markdown-toc-item-58-prefer-for-each-loops-to-traditional-for-loops&quot;&gt;Item 58: Prefer for-each loops to traditional for loops&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-59-know-and-use-the-libraries&quot; id=&quot;markdown-toc-item-59-know-and-use-the-libraries&quot;&gt;Item 59: Know and use the libraries&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-60-avoid-float-and-double-if-exact-answers-are-required&quot; id=&quot;markdown-toc-item-60-avoid-float-and-double-if-exact-answers-are-required&quot;&gt;Item 60: Avoid &lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;double&lt;/code&gt; if exact answers are required&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-61-prefer-primitive-types-to-boxed-primitives&quot; id=&quot;markdown-toc-item-61-prefer-primitive-types-to-boxed-primitives&quot;&gt;Item 61: Prefer primitive types to boxed primitives&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-62-avoid-strings-where-other-types-are-more-appropriate&quot; id=&quot;markdown-toc-item-62-avoid-strings-where-other-types-are-more-appropriate&quot;&gt;Item 62: Avoid strings where other types are more appropriate&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-63-beware-the-performance-of-string-concatenation&quot; id=&quot;markdown-toc-item-63-beware-the-performance-of-string-concatenation&quot;&gt;Item 63: Beware the performance of string concatenation&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-64-refer-to-objects-by-their-interfaces&quot; id=&quot;markdown-toc-item-64-refer-to-objects-by-their-interfaces&quot;&gt;Item 64: Refer to objects by their interfaces&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-65-prefer-interfaces-to-reflection&quot; id=&quot;markdown-toc-item-65-prefer-interfaces-to-reflection&quot;&gt;Item 65: Prefer interfaces to reflection&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-66-use-native-methods-judiciously&quot; id=&quot;markdown-toc-item-66-use-native-methods-judiciously&quot;&gt;Item 66: Use native methods judiciously&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-67-optimize-judicously&quot; id=&quot;markdown-toc-item-67-optimize-judicously&quot;&gt;Item 67: Optimize judicously&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-68-adhere-to-generally-accepted-naming-conventions&quot; id=&quot;markdown-toc-item-68-adhere-to-generally-accepted-naming-conventions&quot;&gt;Item 68: Adhere to generally accepted naming conventions&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#chapter-10-exceptions&quot; id=&quot;markdown-toc-chapter-10-exceptions&quot;&gt;Chapter 10: Exceptions&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#item-69-use-exceptions-only-for-exceptional-conditions&quot; id=&quot;markdown-toc-item-69-use-exceptions-only-for-exceptional-conditions&quot;&gt;Item 69: Use exceptions only for exceptional conditions&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-70-use-checked-exceptions-for-recoverable-conditions-and-runtime-exceptions-for-programming-errors&quot; id=&quot;markdown-toc-item-70-use-checked-exceptions-for-recoverable-conditions-and-runtime-exceptions-for-programming-errors&quot;&gt;Item 70: Use checked exceptions for recoverable conditions and runtime exceptions for programming errors&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-71-avoid-unnecessary-use-of-checked-exceptions&quot; id=&quot;markdown-toc-item-71-avoid-unnecessary-use-of-checked-exceptions&quot;&gt;Item 71: Avoid unnecessary use of checked exceptions&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-72-favor-the-use-of-standard-exceptions&quot; id=&quot;markdown-toc-item-72-favor-the-use-of-standard-exceptions&quot;&gt;Item 72: Favor the use of standard exceptions&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-73-throw-exceptions-appropriate-to-the-abstraction&quot; id=&quot;markdown-toc-item-73-throw-exceptions-appropriate-to-the-abstraction&quot;&gt;Item 73: Throw exceptions appropriate to the abstraction&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-74-document-all-exceptions-thrown-by-each-method&quot; id=&quot;markdown-toc-item-74-document-all-exceptions-thrown-by-each-method&quot;&gt;Item 74: Document all exceptions thrown by each method&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-75-include-failure-capture-information-in-detail-messages&quot; id=&quot;markdown-toc-item-75-include-failure-capture-information-in-detail-messages&quot;&gt;Item 75: Include failure-capture information in detail messages&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-76-strive-for-failure-atomicity&quot; id=&quot;markdown-toc-item-76-strive-for-failure-atomicity&quot;&gt;Item 76: Strive for failure atomicity&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-77-dont-ignore-exceptions&quot; id=&quot;markdown-toc-item-77-dont-ignore-exceptions&quot;&gt;Item 77: Don’t ignore exceptions&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#chapter-11-concurrency&quot; id=&quot;markdown-toc-chapter-11-concurrency&quot;&gt;Chapter 11: Concurrency&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#item-78-synchronize-access-to-shared-mutable-data&quot; id=&quot;markdown-toc-item-78-synchronize-access-to-shared-mutable-data&quot;&gt;Item 78: Synchronize access to shared mutable data&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-79-avoid-excessive-synchronization&quot; id=&quot;markdown-toc-item-79-avoid-excessive-synchronization&quot;&gt;Item 79: Avoid excessive synchronization&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-80-prefer-executors-tasks-and-streams-to-threads&quot; id=&quot;markdown-toc-item-80-prefer-executors-tasks-and-streams-to-threads&quot;&gt;Item 80: Prefer executors, tasks, and streams to threads&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-81-prefer-concurrency-utilities-to-wait-and-notify&quot; id=&quot;markdown-toc-item-81-prefer-concurrency-utilities-to-wait-and-notify&quot;&gt;Item 81: Prefer concurrency utilities to &lt;code class=&quot;highlighter-rouge&quot;&gt;wait&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;notify&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-82-document-thread-safety&quot; id=&quot;markdown-toc-item-82-document-thread-safety&quot;&gt;Item 82: Document thread safety&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-83-use-lazy-initialization-judicously&quot; id=&quot;markdown-toc-item-83-use-lazy-initialization-judicously&quot;&gt;Item 83: Use lazy initialization judicously&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-84-dont-depend-on-the-thread-scheduler&quot; id=&quot;markdown-toc-item-84-dont-depend-on-the-thread-scheduler&quot;&gt;Item 84: Don’t depend on the thread scheduler&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#chapter-12-serialization&quot; id=&quot;markdown-toc-chapter-12-serialization&quot;&gt;Chapter 12: Serialization&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#item-85-prefer-alternatives-to-java-serialization&quot; id=&quot;markdown-toc-item-85-prefer-alternatives-to-java-serialization&quot;&gt;Item 85: Prefer alternatives to Java serialization&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-86-implement-serializable-with-great-caution&quot; id=&quot;markdown-toc-item-86-implement-serializable-with-great-caution&quot;&gt;Item 86: Implement &lt;code class=&quot;highlighter-rouge&quot;&gt;Serializable&lt;/code&gt; with great caution&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-87-consider-using-a-custom-serialized-form&quot; id=&quot;markdown-toc-item-87-consider-using-a-custom-serialized-form&quot;&gt;Item 87: Consider using a custom serialized form&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-88-write-readobject-methods-defensively&quot; id=&quot;markdown-toc-item-88-write-readobject-methods-defensively&quot;&gt;Item 88: Write &lt;code class=&quot;highlighter-rouge&quot;&gt;readObject&lt;/code&gt; methods defensively&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-89-for-instance-control-prefer-enum-types-to-readresolve&quot; id=&quot;markdown-toc-item-89-for-instance-control-prefer-enum-types-to-readresolve&quot;&gt;Item 89: For instance control, prefer enum types to &lt;code class=&quot;highlighter-rouge&quot;&gt;readResolve&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#item-90-consider-serialization-proxies-instead-of-serialized-instances&quot; id=&quot;markdown-toc-item-90-consider-serialization-proxies-instead-of-serialized-instances&quot;&gt;Item 90: Consider serialization proxies instead of serialized instances&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-content&quot;&gt;1 Content&lt;/h2&gt;

&lt;h3 id=&quot;chapter-2-creating-and-destroying-objects&quot;&gt;Chapter 2: Creating and Destroying Objects&lt;/h3&gt;

&lt;h4 id=&quot;item-1-consider-static-factory-methods-instead-of-constructors&quot;&gt;Item 1: Consider static factory methods instead of constructors&lt;/h4&gt;

&lt;h4 id=&quot;item-2-consider-a-builder-when-faced-with-many-constructor-parameters&quot;&gt;Item 2: Consider a builder when faced with many constructor parameters&lt;/h4&gt;

&lt;h4 id=&quot;item-3-enforce-the-singleton-property-with-a-private-constructor-or-an-enum-type&quot;&gt;Item 3: Enforce the singleton property with a private constructor or an enum type&lt;/h4&gt;

&lt;h4 id=&quot;item-4-enforce-noninstantiability-with-a-private-constructor&quot;&gt;Item 4: Enforce noninstantiability with a private constructor&lt;/h4&gt;

&lt;h4 id=&quot;item-5-prefer-dependency-injection-to-hardwiring-resources&quot;&gt;Item 5: Prefer dependency injection to hardwiring resources&lt;/h4&gt;

&lt;h4 id=&quot;item-6-avoid-creating-unnecessary-objects&quot;&gt;Item 6: Avoid creating unnecessary objects&lt;/h4&gt;

&lt;h4 id=&quot;item-7-eliminate-obsolete-object-references&quot;&gt;Item 7: Eliminate obsolete object references&lt;/h4&gt;

&lt;h4 id=&quot;item-8-avoid-finalizers-and-cleaners&quot;&gt;Item 8: Avoid finalizers and cleaners&lt;/h4&gt;

&lt;h4 id=&quot;item-9-prefer-try-with-resources-to-try-finally&quot;&gt;Item 9: Prefer &lt;code class=&quot;highlighter-rouge&quot;&gt;try-with-resources&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;try-finally&lt;/code&gt;&lt;/h4&gt;

&lt;h3 id=&quot;chapter-3-methods-common-to-all-objects&quot;&gt;Chapter 3: Methods Common to All Objects&lt;/h3&gt;

&lt;h4 id=&quot;item-10-obey-the-general-contract-when-overriding-equals&quot;&gt;Item 10: Obey the general contract when overriding &lt;code class=&quot;highlighter-rouge&quot;&gt;equals&lt;/code&gt;&lt;/h4&gt;

&lt;h4 id=&quot;item-11-always-overrride-hashcode-when-you-override-equals&quot;&gt;Item 11: Always overrride &lt;code class=&quot;highlighter-rouge&quot;&gt;hashCode&lt;/code&gt; when you override &lt;code class=&quot;highlighter-rouge&quot;&gt;equals&lt;/code&gt;&lt;/h4&gt;

&lt;h4 id=&quot;item-12-always-overrride-tostring&quot;&gt;Item 12: Always overrride &lt;code class=&quot;highlighter-rouge&quot;&gt;toString&lt;/code&gt;&lt;/h4&gt;

&lt;h4 id=&quot;item-13-override-clone-judiciously&quot;&gt;Item 13: Override &lt;code class=&quot;highlighter-rouge&quot;&gt;clone&lt;/code&gt; judiciously&lt;/h4&gt;

&lt;h4 id=&quot;item-14-consider-implementing-comparable&quot;&gt;Item 14: Consider implementing &lt;code class=&quot;highlighter-rouge&quot;&gt;Comparable&lt;/code&gt;&lt;/h4&gt;

&lt;h3 id=&quot;chapter-4-classes-and-interfaces&quot;&gt;Chapter 4: Classes and Interfaces&lt;/h3&gt;

&lt;h4 id=&quot;item-15-minimize-the-accessibility-of-classes-and-members&quot;&gt;Item 15: Minimize the accessibility of classes and members&lt;/h4&gt;

&lt;h4 id=&quot;item-16-in-public-classes-use-accessor-methods-not-public-fields&quot;&gt;Item 16: In public classes, use accessor methods, not public fields&lt;/h4&gt;

&lt;h4 id=&quot;item-17-minimize-mutability&quot;&gt;Item 17: Minimize mutability&lt;/h4&gt;

&lt;h4 id=&quot;item-18-favor-composition-over-inheritance&quot;&gt;Item 18: Favor composition over inheritance&lt;/h4&gt;

&lt;h4 id=&quot;item-19-design-and-document-for-inheritance-or-else-prohibit-it&quot;&gt;Item 19: Design and document for inheritance or else prohibit it&lt;/h4&gt;

&lt;h4 id=&quot;item-20-prefer-interfaces-to-abstrace-classes&quot;&gt;Item 20: Prefer interfaces to abstrace classes&lt;/h4&gt;

&lt;h4 id=&quot;item-21-design-interfaces-for-posterity&quot;&gt;Item 21: Design interfaces for posterity&lt;/h4&gt;

&lt;h4 id=&quot;item-22-use-interfaces-only-to-define-types&quot;&gt;Item 22: Use interfaces only to define types&lt;/h4&gt;

&lt;h4 id=&quot;item-23-prefer-class-hierarchies-to-tagged-classes&quot;&gt;Item 23: Prefer class hierarchies to tagged classes&lt;/h4&gt;

&lt;h4 id=&quot;item-24-favor-static-member-classes-over-nonstatic&quot;&gt;Item 24: Favor static member classes over nonstatic&lt;/h4&gt;

&lt;h4 id=&quot;item-25-limit-source-files-to-a-single-top-level-class&quot;&gt;Item 25: Limit source files to a single top-level class&lt;/h4&gt;

&lt;h3 id=&quot;chapter-5-generics&quot;&gt;Chapter 5: Generics&lt;/h3&gt;

&lt;h4 id=&quot;item-26-dont-use-raw-types&quot;&gt;Item 26: Don’t use raw types&lt;/h4&gt;

&lt;h4 id=&quot;item-27-eliminate-unchecked-warnings&quot;&gt;Item 27: Eliminate unchecked warnings&lt;/h4&gt;

&lt;h4 id=&quot;item-28-prefer-lists-to-arrays&quot;&gt;Item 28: Prefer lists to arrays&lt;/h4&gt;

&lt;h4 id=&quot;item-29-favor-generic-types&quot;&gt;Item 29: Favor generic types&lt;/h4&gt;

&lt;h4 id=&quot;item-30-favor-generic-methods&quot;&gt;Item 30: Favor generic methods&lt;/h4&gt;

&lt;h4 id=&quot;item-31-use-bounded-wildcards-to-increase-api-flexibility&quot;&gt;Item 31: Use bounded wildcards to increase API flexibility&lt;/h4&gt;

&lt;h4 id=&quot;item-32-combine-generics-and-varargs-judiciously&quot;&gt;Item 32: Combine generics and varargs judiciously&lt;/h4&gt;

&lt;h4 id=&quot;item-33-consider-typesafe-heterogeneous-containers&quot;&gt;Item 33: Consider typesafe heterogeneous containers&lt;/h4&gt;

&lt;h3 id=&quot;chapter-6-enums-and-annotations&quot;&gt;Chapter 6: Enums and Annotations&lt;/h3&gt;

&lt;h4 id=&quot;item-34-use-enums-instead-of-int-constants&quot;&gt;Item 34: Use enums instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt; constants&lt;/h4&gt;

&lt;h4 id=&quot;item-35-use-instance-fields-instead-of-ordinals&quot;&gt;Item 35: Use instance fields instead of ordinals&lt;/h4&gt;

&lt;h4 id=&quot;item-36-use-enumset-instead-of-bit-fields&quot;&gt;Item 36: Use &lt;code class=&quot;highlighter-rouge&quot;&gt;EnumSet&lt;/code&gt; instead of bit fields&lt;/h4&gt;

&lt;h4 id=&quot;item-37-use-enummap-instead-of-ordinal-indexing&quot;&gt;Item 37: Use &lt;code class=&quot;highlighter-rouge&quot;&gt;EnumMap&lt;/code&gt; instead of ordinal indexing&lt;/h4&gt;

&lt;h4 id=&quot;item-38-emulate-extensible-enums-with-interfaces&quot;&gt;Item 38: Emulate extensible enums with interfaces&lt;/h4&gt;

&lt;h4 id=&quot;item-39-prefer-annotations-to-naming-patterns&quot;&gt;Item 39: Prefer annotations to naming patterns&lt;/h4&gt;

&lt;h4 id=&quot;item-40-consistently-use-the-override-annotation&quot;&gt;Item 40: Consistently use the &lt;code class=&quot;highlighter-rouge&quot;&gt;Override&lt;/code&gt; annotation&lt;/h4&gt;

&lt;h4 id=&quot;item-41-use-marker-interfaces-to-define-types&quot;&gt;Item 41: Use marker interfaces to define types&lt;/h4&gt;

&lt;h3 id=&quot;chapter-7-lambdas-and-streams&quot;&gt;Chapter 7: Lambdas and Streams&lt;/h3&gt;

&lt;h4 id=&quot;item-42-prefer-lambdas-to-anonymous-classes&quot;&gt;Item 42: Prefer lambdas to anonymous classes&lt;/h4&gt;

&lt;h4 id=&quot;item-43-prefer-method-references-to-lambdas&quot;&gt;Item 43: Prefer method references to lambdas&lt;/h4&gt;

&lt;h4 id=&quot;item-44-favor-the-use-of-standard-functional-interfaces&quot;&gt;Item 44: Favor the use of standard functional interfaces&lt;/h4&gt;

&lt;h4 id=&quot;item-45-use-streams-judiciously&quot;&gt;Item 45: Use streams judiciously&lt;/h4&gt;

&lt;h4 id=&quot;item-46-prefer-side-effect-free-functions-in-streams&quot;&gt;Item 46: Prefer side-effect-free functions in streams&lt;/h4&gt;

&lt;h4 id=&quot;item-47-prefer-collection-to-stream-as-a-return-type&quot;&gt;Item 47: Prefer Collection to Stream as a return type&lt;/h4&gt;

&lt;h4 id=&quot;item-48-use-cautio-when-making-streams-parallel&quot;&gt;Item 48: Use cautio when making streams parallel&lt;/h4&gt;

&lt;h3 id=&quot;chapter-8-methods&quot;&gt;Chapter 8: Methods&lt;/h3&gt;

&lt;h4 id=&quot;item-49-check-parameters-for-validity&quot;&gt;Item 49: Check Parameters for validity&lt;/h4&gt;

&lt;h4 id=&quot;item-50-make-defensive-copies-when-needed&quot;&gt;Item 50: Make defensive copies when needed&lt;/h4&gt;

&lt;h4 id=&quot;item-51-design-method-signatures-carefully&quot;&gt;Item 51: Design method signatures carefully&lt;/h4&gt;

&lt;h4 id=&quot;item-52-use-overloading-judiciously&quot;&gt;Item 52: Use overloading judiciously&lt;/h4&gt;

&lt;h4 id=&quot;item-53-use-varargs-judiciously&quot;&gt;Item 53: Use varargs judiciously&lt;/h4&gt;

&lt;h4 id=&quot;item-54-return-empty-collections-or-arrays-not-nulls&quot;&gt;Item 54: Return empty collections or arrays, not nulls&lt;/h4&gt;

&lt;h4 id=&quot;item-55-return-optionals-judiciously&quot;&gt;Item 55: Return optionals judiciously&lt;/h4&gt;

&lt;h4 id=&quot;item-56-write-code-comments-for-all-exposed-api-elements&quot;&gt;Item 56: Write code comments for all exposed API elements&lt;/h4&gt;

&lt;h3 id=&quot;chapter-9-general-programmming&quot;&gt;Chapter 9: General Programmming&lt;/h3&gt;

&lt;h4 id=&quot;item-57-minimize-the-scope-of-local-variables&quot;&gt;Item 57: Minimize the scope of local variables&lt;/h4&gt;

&lt;h4 id=&quot;item-58-prefer-for-each-loops-to-traditional-for-loops&quot;&gt;Item 58: Prefer for-each loops to traditional for loops&lt;/h4&gt;

&lt;h4 id=&quot;item-59-know-and-use-the-libraries&quot;&gt;Item 59: Know and use the libraries&lt;/h4&gt;

&lt;h4 id=&quot;item-60-avoid-float-and-double-if-exact-answers-are-required&quot;&gt;Item 60: Avoid &lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;double&lt;/code&gt; if exact answers are required&lt;/h4&gt;

&lt;h4 id=&quot;item-61-prefer-primitive-types-to-boxed-primitives&quot;&gt;Item 61: Prefer primitive types to boxed primitives&lt;/h4&gt;

&lt;h4 id=&quot;item-62-avoid-strings-where-other-types-are-more-appropriate&quot;&gt;Item 62: Avoid strings where other types are more appropriate&lt;/h4&gt;

&lt;h4 id=&quot;item-63-beware-the-performance-of-string-concatenation&quot;&gt;Item 63: Beware the performance of string concatenation&lt;/h4&gt;

&lt;h4 id=&quot;item-64-refer-to-objects-by-their-interfaces&quot;&gt;Item 64: Refer to objects by their interfaces&lt;/h4&gt;

&lt;h4 id=&quot;item-65-prefer-interfaces-to-reflection&quot;&gt;Item 65: Prefer interfaces to reflection&lt;/h4&gt;

&lt;h4 id=&quot;item-66-use-native-methods-judiciously&quot;&gt;Item 66: Use native methods judiciously&lt;/h4&gt;

&lt;h4 id=&quot;item-67-optimize-judicously&quot;&gt;Item 67: Optimize judicously&lt;/h4&gt;

&lt;h4 id=&quot;item-68-adhere-to-generally-accepted-naming-conventions&quot;&gt;Item 68: Adhere to generally accepted naming conventions&lt;/h4&gt;

&lt;h3 id=&quot;chapter-10-exceptions&quot;&gt;Chapter 10: Exceptions&lt;/h3&gt;

&lt;h4 id=&quot;item-69-use-exceptions-only-for-exceptional-conditions&quot;&gt;Item 69: Use exceptions only for exceptional conditions&lt;/h4&gt;

&lt;h4 id=&quot;item-70-use-checked-exceptions-for-recoverable-conditions-and-runtime-exceptions-for-programming-errors&quot;&gt;Item 70: Use checked exceptions for recoverable conditions and runtime exceptions for programming errors&lt;/h4&gt;

&lt;h4 id=&quot;item-71-avoid-unnecessary-use-of-checked-exceptions&quot;&gt;Item 71: Avoid unnecessary use of checked exceptions&lt;/h4&gt;

&lt;h4 id=&quot;item-72-favor-the-use-of-standard-exceptions&quot;&gt;Item 72: Favor the use of standard exceptions&lt;/h4&gt;

&lt;h4 id=&quot;item-73-throw-exceptions-appropriate-to-the-abstraction&quot;&gt;Item 73: Throw exceptions appropriate to the abstraction&lt;/h4&gt;

&lt;h4 id=&quot;item-74-document-all-exceptions-thrown-by-each-method&quot;&gt;Item 74: Document all exceptions thrown by each method&lt;/h4&gt;

&lt;h4 id=&quot;item-75-include-failure-capture-information-in-detail-messages&quot;&gt;Item 75: Include failure-capture information in detail messages&lt;/h4&gt;

&lt;h4 id=&quot;item-76-strive-for-failure-atomicity&quot;&gt;Item 76: Strive for failure atomicity&lt;/h4&gt;

&lt;h4 id=&quot;item-77-dont-ignore-exceptions&quot;&gt;Item 77: Don’t ignore exceptions&lt;/h4&gt;

&lt;h3 id=&quot;chapter-11-concurrency&quot;&gt;Chapter 11: Concurrency&lt;/h3&gt;

&lt;h4 id=&quot;item-78-synchronize-access-to-shared-mutable-data&quot;&gt;Item 78: Synchronize access to shared mutable data&lt;/h4&gt;

&lt;h4 id=&quot;item-79-avoid-excessive-synchronization&quot;&gt;Item 79: Avoid excessive synchronization&lt;/h4&gt;

&lt;h4 id=&quot;item-80-prefer-executors-tasks-and-streams-to-threads&quot;&gt;Item 80: Prefer executors, tasks, and streams to threads&lt;/h4&gt;

&lt;h4 id=&quot;item-81-prefer-concurrency-utilities-to-wait-and-notify&quot;&gt;Item 81: Prefer concurrency utilities to &lt;code class=&quot;highlighter-rouge&quot;&gt;wait&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;notify&lt;/code&gt;&lt;/h4&gt;

&lt;h4 id=&quot;item-82-document-thread-safety&quot;&gt;Item 82: Document thread safety&lt;/h4&gt;

&lt;h4 id=&quot;item-83-use-lazy-initialization-judicously&quot;&gt;Item 83: Use lazy initialization judicously&lt;/h4&gt;

&lt;h4 id=&quot;item-84-dont-depend-on-the-thread-scheduler&quot;&gt;Item 84: Don’t depend on the thread scheduler&lt;/h4&gt;

&lt;h3 id=&quot;chapter-12-serialization&quot;&gt;Chapter 12: Serialization&lt;/h3&gt;

&lt;h4 id=&quot;item-85-prefer-alternatives-to-java-serialization&quot;&gt;Item 85: Prefer alternatives to Java serialization&lt;/h4&gt;

&lt;h4 id=&quot;item-86-implement-serializable-with-great-caution&quot;&gt;Item 86: Implement &lt;code class=&quot;highlighter-rouge&quot;&gt;Serializable&lt;/code&gt; with great caution&lt;/h4&gt;

&lt;h4 id=&quot;item-87-consider-using-a-custom-serialized-form&quot;&gt;Item 87: Consider using a custom serialized form&lt;/h4&gt;

&lt;h4 id=&quot;item-88-write-readobject-methods-defensively&quot;&gt;Item 88: Write &lt;code class=&quot;highlighter-rouge&quot;&gt;readObject&lt;/code&gt; methods defensively&lt;/h4&gt;

&lt;h4 id=&quot;item-89-for-instance-control-prefer-enum-types-to-readresolve&quot;&gt;Item 89: For instance control, prefer enum types to &lt;code class=&quot;highlighter-rouge&quot;&gt;readResolve&lt;/code&gt;&lt;/h4&gt;

&lt;h4 id=&quot;item-90-consider-serialization-proxies-instead-of-serialized-instances&quot;&gt;Item 90: Consider serialization proxies instead of serialized instances&lt;/h4&gt;

&lt;p&gt;## 2 参考资料 ##&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;React&lt;/a&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Learning-React-Kirupa-Chinnathambi/dp/0134546318&quot;&gt;Learning React&lt;/a&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@franleplant/react-higher-order-components-in-depth-cf9032ee6c3e&quot;&gt;React Higher Order Components in depth&lt;/a&gt;;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Fri, 04 Nov 2016 00:00:00 +0800</pubDate>
				<link>/03%20java/2016/11/04/Effective-Java.html</link>
				<guid isPermaLink="true">/03%20java/2016/11/04/Effective-Java.html</guid>
			</item>
		
			<item>
				<title>Core Java (Volume 1)</title>
				<description>&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-content&quot; id=&quot;markdown-toc-1-content&quot;&gt;1 Content&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#chapter-4-object-and-class&quot; id=&quot;markdown-toc-chapter-4-object-and-class&quot;&gt;Chapter 4: Object and Class&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#40-javac-and-java-command&quot; id=&quot;markdown-toc-40-javac-and-java-command&quot;&gt;4.0 &lt;code class=&quot;highlighter-rouge&quot;&gt;javac&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;java&lt;/code&gt; command&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#41-encapsulation-instance-field-polymorphism-instance-method-inheritance&quot; id=&quot;markdown-toc-41-encapsulation-instance-field-polymorphism-instance-method-inheritance&quot;&gt;4.1 Encapsulation (instance field), Polymorphism (instance method), Inheritance&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#42-relationship-between-classed&quot; id=&quot;markdown-toc-42-relationship-between-classed&quot;&gt;4.2 Relationship between classed&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#47-packages&quot; id=&quot;markdown-toc-47-packages&quot;&gt;4.7 Packages&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#48-the-class-path&quot; id=&quot;markdown-toc-48-the-class-path&quot;&gt;4.8 The Class Path&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#49-documentation-comments&quot; id=&quot;markdown-toc-49-documentation-comments&quot;&gt;4.9 Documentation Comments&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5-inheritance&quot; id=&quot;markdown-toc-5-inheritance&quot;&gt;5 Inheritance&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#57-reflection&quot; id=&quot;markdown-toc-57-reflection&quot;&gt;5.7 Reflection&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#6-interface-lambda-inner-class-proxy&quot; id=&quot;markdown-toc-6-interface-lambda-inner-class-proxy&quot;&gt;6 Interface, Lambda, Inner Class, Proxy&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#61-interface-vs-abstract-class&quot; id=&quot;markdown-toc-61-interface-vs-abstract-class&quot;&gt;6.1 Interface vs Abstract Class&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#62-lambda&quot; id=&quot;markdown-toc-62-lambda&quot;&gt;6.2 Lambda&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#7-exceptions-assertions-logging&quot; id=&quot;markdown-toc-7-exceptions-assertions-logging&quot;&gt;7 Exceptions, Assertions, Logging&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#73-logging&quot; id=&quot;markdown-toc-73-logging&quot;&gt;7.3 Logging&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#8-generic-programming&quot; id=&quot;markdown-toc-8-generic-programming&quot;&gt;8 Generic Programming&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#9-collections&quot; id=&quot;markdown-toc-9-collections&quot;&gt;9 Collections&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#10-graphics-programming&quot; id=&quot;markdown-toc-10-graphics-programming&quot;&gt;10 Graphics Programming&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#11-event-handling&quot; id=&quot;markdown-toc-11-event-handling&quot;&gt;11 Event Handling&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#12-user-interface-component-with-swing&quot; id=&quot;markdown-toc-12-user-interface-component-with-swing&quot;&gt;12 User Interface Component with Swing&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#13-deploying-java-application&quot; id=&quot;markdown-toc-13-deploying-java-application&quot;&gt;13 Deploying Java Application&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#14-concurrency&quot; id=&quot;markdown-toc-14-concurrency&quot;&gt;14 Concurrency&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-others&quot; id=&quot;markdown-toc-2-others&quot;&gt;2 others&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-content&quot;&gt;1 Content&lt;/h2&gt;

&lt;h3 id=&quot;chapter-4-object-and-class&quot;&gt;Chapter 4: Object and Class&lt;/h3&gt;

&lt;h4 id=&quot;40-javac-and-java-command&quot;&gt;4.0 &lt;code class=&quot;highlighter-rouge&quot;&gt;javac&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;java&lt;/code&gt; command&lt;/h4&gt;

&lt;p&gt;In project root directory, run &lt;code class=&quot;highlighter-rouge&quot;&gt;javac MyClass.java&lt;/code&gt; to compile &lt;code class=&quot;highlighter-rouge&quot;&gt;Myclass.java&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;Myclass.class&lt;/code&gt; java bytecode, and then &lt;code class=&quot;highlighter-rouge&quot;&gt;java MyClass&lt;/code&gt; to run  &lt;code class=&quot;highlighter-rouge&quot;&gt;Myclass.class&lt;/code&gt; on jvm.&lt;/p&gt;

&lt;h4 id=&quot;41-encapsulation-instance-field-polymorphism-instance-method-inheritance&quot;&gt;4.1 Encapsulation (instance field), Polymorphism (instance method), Inheritance&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Encapsulation (Information Hiding)&lt;/strong&gt;: instance field is the &lt;strong&gt;state&lt;/strong&gt; of an instance, which should be only accessed (read write) via instance method. If any instance field is changed from outside without calling the instance method, encapsulation is broken.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p class=&quot;img_middle_hg&quot;&gt;&lt;img src=&quot;/assets/images/posts/04 Web/JS/2016-10-03-React入门/JS React Summary.png&quot; alt=&quot;JS React Summary&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;42-relationship-between-classed&quot;&gt;4.2 Relationship between classed&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Dependence (“uses-a”);&lt;/li&gt;
  &lt;li&gt;Aggregation (“has-a”);&lt;/li&gt;
  &lt;li&gt;Inheritance (“is-a”);&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;47-packages&quot;&gt;4.7 Packages&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;you can only import &lt;code class=&quot;highlighter-rouge&quot;&gt;java.time.*&lt;/code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;java.time&lt;/code&gt; is a single package rather than import &lt;code class=&quot;highlighter-rouge&quot;&gt;java.*&lt;/code&gt;,which means multiple package. In other words, a package is the largest unit for import.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;import with &lt;code class=&quot;highlighter-rouge&quot;&gt;static&lt;/code&gt; key word: &lt;code class=&quot;highlighter-rouge&quot;&gt;import static java.lang.System.*&lt;/code&gt; allow you to call &lt;code class=&quot;highlighter-rouge&quot;&gt;out.println()&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;System.out.println()&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;to export a class in a package, use &lt;code class=&quot;highlighter-rouge&quot;&gt;package com.mycompany&lt;/code&gt;(the package name) before declaring the class.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;48-the-class-path&quot;&gt;4.8 The Class Path&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;classdir&lt;/code&gt; TBC&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;49-documentation-comments&quot;&gt;4.9 Documentation Comments&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;javadoc&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;5-inheritance&quot;&gt;5 Inheritance&lt;/h3&gt;

&lt;h4 id=&quot;57-reflection&quot;&gt;5.7 Reflection&lt;/h4&gt;

&lt;p&gt;More like &lt;code class=&quot;highlighter-rouge&quot;&gt;Objc&lt;/code&gt; &lt;strong&gt;Meta Class&lt;/strong&gt;, see &lt;a href=&quot;/01%20objective-c/2016/03/05/OC-Runtime(一)_Object-Model-Part-I_Object-Hierarchy.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;6-interface-lambda-inner-class-proxy&quot;&gt;6 Interface, Lambda, Inner Class, Proxy&lt;/h3&gt;

&lt;h4 id=&quot;61-interface-vs-abstract-class&quot;&gt;6.1 Interface vs Abstract Class&lt;/h4&gt;

&lt;p&gt;One class cannot inheritant from multiple &lt;strong&gt;Abstract Class&lt;/strong&gt;, but can implement multiple &lt;strong&gt;Interface&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Interface can have &lt;strong&gt;static&lt;/strong&gt; and &lt;strong&gt;default&lt;/strong&gt; method.&lt;/p&gt;

&lt;h4 id=&quot;62-lambda&quot;&gt;6.2 Lambda&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Function Interface&lt;/strong&gt;: an interface with just one function declaration. One can create an instance by &lt;code class=&quot;highlighter-rouge&quot;&gt;Runnable r = () -&amp;gt; { task code }&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;7-exceptions-assertions-logging&quot;&gt;7 Exceptions, Assertions, Logging&lt;/h3&gt;

&lt;h4 id=&quot;73-logging&quot;&gt;7.3 Logging&lt;/h4&gt;

&lt;p&gt;7 Logging Levels:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SEVERE&lt;/li&gt;
  &lt;li&gt;WARNING&lt;/li&gt;
  &lt;li&gt;INFO&lt;/li&gt;
  &lt;li&gt;CONFIG&lt;/li&gt;
  &lt;li&gt;FINE&lt;/li&gt;
  &lt;li&gt;FINER&lt;/li&gt;
  &lt;li&gt;FINEST&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;8-generic-programming&quot;&gt;8 Generic Programming&lt;/h3&gt;

&lt;h3 id=&quot;9-collections&quot;&gt;9 Collections&lt;/h3&gt;

&lt;p&gt;List, Set, Queue, Map&lt;/p&gt;

&lt;h3 id=&quot;10-graphics-programming&quot;&gt;10 Graphics Programming&lt;/h3&gt;

&lt;h3 id=&quot;11-event-handling&quot;&gt;11 Event Handling&lt;/h3&gt;

&lt;h3 id=&quot;12-user-interface-component-with-swing&quot;&gt;12 User Interface Component with Swing&lt;/h3&gt;

&lt;h3 id=&quot;13-deploying-java-application&quot;&gt;13 Deploying Java Application&lt;/h3&gt;

&lt;h3 id=&quot;14-concurrency&quot;&gt;14 Concurrency&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread&lt;/code&gt; class, &lt;code class=&quot;highlighter-rouge&quot;&gt;Runnable&lt;/code&gt; interface.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;Runnable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STEPS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ball&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;comp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;comp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;repaint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DELAY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;2-others&quot;&gt;2 others&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Java native method ?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Factory method vs constructor: factory method can have different name while constructor must use the same name as class name; factory method can also return a subclass while constructor can only return that class.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;## 2 参考资料 ##&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;React&lt;/a&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Learning-React-Kirupa-Chinnathambi/dp/0134546318&quot;&gt;Learning React&lt;/a&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@franleplant/react-higher-order-components-in-depth-cf9032ee6c3e&quot;&gt;React Higher Order Components in depth&lt;/a&gt;;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Tue, 01 Nov 2016 00:00:00 +0800</pubDate>
				<link>/03%20java/2016/11/01/Core-Java-(Volume-1).html</link>
				<guid isPermaLink="true">/03%20java/2016/11/01/Core-Java-(Volume-1).html</guid>
			</item>
		
			<item>
				<title>Redux-Saga Part I：Basics</title>
				<description>&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-basic&quot; id=&quot;markdown-toc-1-basic&quot;&gt;1 Basic&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11-using-saga-helpers&quot; id=&quot;markdown-toc-11-using-saga-helpers&quot;&gt;1.1 Using Saga Helpers&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#12-declarative-effects&quot; id=&quot;markdown-toc-12-declarative-effects&quot;&gt;1.2 Declarative Effects&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#13-dispatching-actions&quot; id=&quot;markdown-toc-13-dispatching-actions&quot;&gt;1.3 Dispatching Actions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#14-error-handling&quot; id=&quot;markdown-toc-14-error-handling&quot;&gt;1.4 Error Handling&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#15-a-common-abstraction-effect&quot; id=&quot;markdown-toc-15-a-common-abstraction-effect&quot;&gt;1.5 A Common Abstraction: Effect&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-advanced&quot; id=&quot;markdown-toc-2-advanced&quot;&gt;2 Advanced&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-pulling-future-actions&quot; id=&quot;markdown-toc-21-pulling-future-actions&quot;&gt;2.1 Pulling future actions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-non-blocking-calls&quot; id=&quot;markdown-toc-22-non-blocking-calls&quot;&gt;2.2 Non-blocking calls&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-running-tasks-in-parallel&quot; id=&quot;markdown-toc-23-running-tasks-in-parallel&quot;&gt;2.3 Running tasks in parallel&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#24-starting-a-race-between-multiple-effects&quot; id=&quot;markdown-toc-24-starting-a-race-between-multiple-effects&quot;&gt;2.4 Starting a race between multiple Effects&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#25-sequencing-sagas-using-yield&quot; id=&quot;markdown-toc-25-sequencing-sagas-using-yield&quot;&gt;2.5 Sequencing Sagas using yield*&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#26-composing-sagas&quot; id=&quot;markdown-toc-26-composing-sagas&quot;&gt;2.6 Composing Sagas&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#27-task-cancellation&quot; id=&quot;markdown-toc-27-task-cancellation&quot;&gt;2.7 Task cancellation&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#28-redux-sagas-fork-model&quot; id=&quot;markdown-toc-28-redux-sagas-fork-model&quot;&gt;2.8 Redux-saga’s fork model&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#29-common-concurrency-patterns&quot; id=&quot;markdown-toc-29-common-concurrency-patterns&quot;&gt;2.9 Common Concurrency Patterns&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#210-examples-of-testing-sagas&quot; id=&quot;markdown-toc-210-examples-of-testing-sagas&quot;&gt;2.10 Examples of Testing Sagas&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#211-connecting-sagas-to-external-inputoutput&quot; id=&quot;markdown-toc-211-connecting-sagas-to-external-inputoutput&quot;&gt;2.11 Connecting Sagas to external Input/Output&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#212-using-channels&quot; id=&quot;markdown-toc-212-using-channels&quot;&gt;2.12 Using Channels&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-参考资料&quot; id=&quot;markdown-toc-2-参考资料&quot;&gt;2 参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-basic&quot;&gt;1 Basic&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;A Saga&lt;/strong&gt; is a Long Lived Transaction that can be written as a sequence of sub-transactions T1,T2,Tn. The sub-transactions has a compensating Transaction C1,C2,Cn. Ci semantically undoes Ti. Saga Gurantee either T1,T2,..Tn or T1,T2 … Tj, Cj, … C2, C1. Saga is a failure management pattern.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Generator&lt;/strong&gt;: 函数声明和执行。函数声明两个关键字，&lt;code class=&quot;highlighter-rouge&quot;&gt;function*&lt;/code&gt;表示返回值是&lt;code class=&quot;highlighter-rouge&quot;&gt;generator&lt;/code&gt;, yield表示该地方分段执行；函数执行1个关键字，&lt;code class=&quot;highlighter-rouge&quot;&gt;next&lt;/code&gt;，表示执行到声明时yield的地方。生成器对象是由一个&lt;code class=&quot;highlighter-rouge&quot;&gt;Generator Function&lt;/code&gt;(迭代器工厂) 返回的,并且它符合&lt;strong&gt;可迭代协议&lt;/strong&gt;(继承链上有1个对象必须实现迭代器协议)和&lt;strong&gt;迭代器协议(实现&lt;code class=&quot;highlighter-rouge&quot;&gt;next&lt;/code&gt;函数，该函数返回&lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;done&lt;/code&gt;属性)&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Iterator(迭代器)&lt;/strong&gt;： 1个符合&lt;strong&gt;迭代器协议&lt;/strong&gt;的对象，即有&lt;code class=&quot;highlighter-rouge&quot;&gt;next()&lt;/code&gt;方法，该方法返回两个属性&lt;code class=&quot;highlighter-rouge&quot;&gt;done&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makeIterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nextIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nextIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;
               &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nextIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
               &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makeIterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'yo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ya'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 'yo'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 'ya'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;11-using-saga-helpers&quot;&gt;1.1 Using Saga Helpers&lt;/h3&gt;

&lt;h3 id=&quot;12-declarative-effects&quot;&gt;1.2 Declarative Effects&lt;/h3&gt;

&lt;h3 id=&quot;13-dispatching-actions&quot;&gt;1.3 Dispatching Actions&lt;/h3&gt;

&lt;h3 id=&quot;14-error-handling&quot;&gt;1.4 Error Handling&lt;/h3&gt;

&lt;h3 id=&quot;15-a-common-abstraction-effect&quot;&gt;1.5 A Common Abstraction: Effect&lt;/h3&gt;

&lt;p&gt;Effect vs Promise&lt;/p&gt;

&lt;p&gt;Effect creation (description) vs Effect execution&lt;/p&gt;

&lt;p&gt;put({type: ‘INCREMENT’}) // =&amp;gt; { PUT: {type: ‘INCREMENT’} }			creation(description)
call(delay, 1000)        // =&amp;gt; { CALL: {fn: delay, args: [1000]}}  creation(description)&lt;/p&gt;

&lt;p&gt;saga-middleware&lt;/p&gt;

&lt;p&gt;the above effect execution&lt;/p&gt;

&lt;p&gt;Effect creation (description, command object) makes effect testable&lt;/p&gt;

&lt;h2 id=&quot;2-advanced&quot;&gt;2 Advanced&lt;/h2&gt;

&lt;h3 id=&quot;21-pulling-future-actions&quot;&gt;2.1 Pulling future actions&lt;/h3&gt;

&lt;p&gt;takeEvery vs take&lt;/p&gt;

&lt;p&gt;takeEvery, action is pushed into saga. takeEvery can only allow you to write the handler when certain action is happen&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;takeEvery&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redux-saga/effects'&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;watchAndLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;takeEvery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'action'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'state after'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;take action is pulled by saga. take allow you to write when the action is happen and also handler.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;take&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redux-saga/effects'&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;watchAndLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;take&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'action'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'state after'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;22-non-blocking-calls&quot;&gt;2.2 Non-blocking calls&lt;/h3&gt;

&lt;h3 id=&quot;23-running-tasks-in-parallel&quot;&gt;2.3 Running tasks in parallel&lt;/h3&gt;

&lt;h3 id=&quot;24-starting-a-race-between-multiple-effects&quot;&gt;2.4 Starting a race between multiple Effects&lt;/h3&gt;

&lt;h3 id=&quot;25-sequencing-sagas-using-yield&quot;&gt;2.5 Sequencing Sagas using yield*&lt;/h3&gt;

&lt;h3 id=&quot;26-composing-sagas&quot;&gt;2.6 Composing Sagas&lt;/h3&gt;

&lt;h3 id=&quot;27-task-cancellation&quot;&gt;2.7 Task cancellation&lt;/h3&gt;

&lt;h3 id=&quot;28-redux-sagas-fork-model&quot;&gt;2.8 Redux-saga’s fork model&lt;/h3&gt;

&lt;h3 id=&quot;29-common-concurrency-patterns&quot;&gt;2.9 Common Concurrency Patterns&lt;/h3&gt;

&lt;h3 id=&quot;210-examples-of-testing-sagas&quot;&gt;2.10 Examples of Testing Sagas&lt;/h3&gt;

&lt;h3 id=&quot;211-connecting-sagas-to-external-inputoutput&quot;&gt;2.11 Connecting Sagas to external Input/Output&lt;/h3&gt;

&lt;h3 id=&quot;212-using-channels&quot;&gt;2.12 Using Channels&lt;/h3&gt;

&lt;p class=&quot;img_middle_hg&quot;&gt;&lt;img src=&quot;/assets/images/posts/04 Web/JS/2016-10-03-React入门/JS React Summary.png&quot; alt=&quot;JS React Summary&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-参考资料&quot;&gt;2 参考资料&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://redux-saga.js.org/&quot;&gt;Redux-Saga&lt;/a&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=xDuwrtwYHu8&quot;&gt;Applying the Saga Pattern&lt;/a&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cs.cornell.edu/andru/cs711/2002fa/reading/sagas.pdf&quot;&gt;Original Paper&lt;/a&gt;;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/jj591569.aspx&quot;&gt;A Saga on Sagas&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://python.jobbole.com/86258/&quot;&gt;可迭代对象 vs 迭代器 vs 生成器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Wed, 26 Oct 2016 00:00:00 +0800</pubDate>
				<link>/04%20web%20development/2016/10/26/Redux-Saga-Part-I-Basics.html</link>
				<guid isPermaLink="true">/04%20web%20development/2016/10/26/Redux-Saga-Part-I-Basics.html</guid>
			</item>
		
			<item>
				<title>Redux Part V：Other</title>
				<description>&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-other&quot; id=&quot;markdown-toc-1-other&quot;&gt;1 Other&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11-glossary&quot; id=&quot;markdown-toc-11-glossary&quot;&gt;1.1 Glossary&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#111-state&quot; id=&quot;markdown-toc-111-state&quot;&gt;1.1.1 State&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#112-action&quot; id=&quot;markdown-toc-112-action&quot;&gt;1.1.2 Action&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#113-reducer&quot; id=&quot;markdown-toc-113-reducer&quot;&gt;1.1.3 Reducer&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#114-dispatching-function&quot; id=&quot;markdown-toc-114-dispatching-function&quot;&gt;1.1.4 Dispatching Function&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#115-action-creator&quot; id=&quot;markdown-toc-115-action-creator&quot;&gt;1.1.5 Action Creator&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#116-async-action&quot; id=&quot;markdown-toc-116-async-action&quot;&gt;1.1.6 Async Action&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#117-middleware&quot; id=&quot;markdown-toc-117-middleware&quot;&gt;1.1.7 Middleware&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#118-store&quot; id=&quot;markdown-toc-118-store&quot;&gt;1.1.8 Store&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#119-store-creator&quot; id=&quot;markdown-toc-119-store-creator&quot;&gt;1.1.9 Store creator&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#1110-store-enhancer&quot; id=&quot;markdown-toc-1110-store-enhancer&quot;&gt;1.1.10 Store enhancer&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#12-api-reference&quot; id=&quot;markdown-toc-12-api-reference&quot;&gt;1.2 API Reference&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#121-createstorereducer-preloadedstateenhancer&quot; id=&quot;markdown-toc-121-createstorereducer-preloadedstateenhancer&quot;&gt;1.2.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;CreateStore(reducer, [preloadedState],[enhancer])&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#122-store&quot; id=&quot;markdown-toc-122-store&quot;&gt;1.2.2 Store&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#1221-getstate&quot; id=&quot;markdown-toc-1221-getstate&quot;&gt;1.2.2.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;getState()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#1222-dispatchaction&quot; id=&quot;markdown-toc-1222-dispatchaction&quot;&gt;1.2.2.2 &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch(action)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#1223-subscribelistener&quot; id=&quot;markdown-toc-1223-subscribelistener&quot;&gt;1.2.2.3 &lt;code class=&quot;highlighter-rouge&quot;&gt;subscribe(listener)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href=&quot;#1224-replacereducernextreducer&quot; id=&quot;markdown-toc-1224-replacereducernextreducer&quot;&gt;1.2.2.4 &lt;code class=&quot;highlighter-rouge&quot;&gt;replaceReducer(nextReducer)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#123-combinereducersreducers&quot; id=&quot;markdown-toc-123-combinereducersreducers&quot;&gt;1.2.3 &lt;code class=&quot;highlighter-rouge&quot;&gt;combineReducers(reducers)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#124-applymiddlewaremiddlewares&quot; id=&quot;markdown-toc-124-applymiddlewaremiddlewares&quot;&gt;1.2.4 &lt;code class=&quot;highlighter-rouge&quot;&gt;applyMiddleware(...middlewares)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#125-bindactioncreatorsactioncreators-dispatch&quot; id=&quot;markdown-toc-125-bindactioncreatorsactioncreators-dispatch&quot;&gt;1.2.5 &lt;code class=&quot;highlighter-rouge&quot;&gt;bindActionCreators(actionCreators, dispatch)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#126-composefunctions&quot; id=&quot;markdown-toc-126-composefunctions&quot;&gt;1.2.6 &lt;code class=&quot;highlighter-rouge&quot;&gt;compose(...functions)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#13-change-log&quot; id=&quot;markdown-toc-13-change-log&quot;&gt;1.3 Change Log&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#14-patrons&quot; id=&quot;markdown-toc-14-patrons&quot;&gt;1.4 Patrons&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#15-feedback&quot; id=&quot;markdown-toc-15-feedback&quot;&gt;1.5 Feedback&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-参考资料&quot; id=&quot;markdown-toc-5-参考资料&quot;&gt;5 参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-other&quot;&gt;1 Other&lt;/h2&gt;

&lt;h3 id=&quot;11-glossary&quot;&gt;1.1 Glossary&lt;/h3&gt;

&lt;p&gt;This a glossary of the core terms in Redux, along with their type signatures. The typs are documented using &lt;a href=&quot;http://flowtype.org/docs/quick-reference.html&quot;&gt;Flow notation&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;111-state&quot;&gt;1.1.1 State&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;State&lt;/strong&gt; (also called the state tree) is a broad term, but in the Redux API it usually refers to the single state value that is managed by the store and returned &lt;code class=&quot;highlighter-rouge&quot;&gt;getState()&lt;/code&gt;. It represents the entire state of a Redux application, which is often a deeply nested object.&lt;/p&gt;

&lt;p&gt;By convention, the top-level state is an object or some other key-value collection like a Map, but technically it can be any types. Still, you should do your best to keep the state serializable. Don’t put anything inside it that you can’t easily turn into JSON.&lt;/p&gt;

&lt;h4 id=&quot;112-action&quot;&gt;1.1.2 Action&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;An action is a plain object that represents in intention to change the state. Actions are the only way to get data into the store. Any data, whether from UI events, network callbacks, or other sources such as WebSockets needs to eventually de dispatched as actions.&lt;/p&gt;

&lt;p&gt;Actions must have a &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; field that indicates the type of action being performed. Types can be defined as constants and imported from another module. It’s better to use strings for &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; than &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Symbol&quot;&gt;Symbols&lt;/a&gt; becuase strings are &lt;strong&gt;serializable&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Other than &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt;, the structure of an action is really up to you. If you’re interested, check out &lt;a href=&quot;https://github.com/acdlite/flux-standard-action&quot;&gt;Flux Standard Action&lt;/a&gt; for recommendations on how actions should be constructed.&lt;/p&gt;

&lt;p&gt;See also &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#async-action&quot;&gt;async action&lt;/a&gt; below.&lt;/p&gt;

&lt;h4 id=&quot;113-reducer&quot;&gt;1.1.3 Reducer&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Reducer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A &lt;strong&gt;reducer&lt;/strong&gt; (also called a reducing function) is a function that accepts an accumulation and a value and returns a new accumulation. They are used to reduce a collection of values down to a single value.&lt;/p&gt;

&lt;p&gt;Reducers are not unique to Redux-they are a fundamental concept in functional programming. Even most non-functional languages, like JavaScript, have a built-in API for reducing. In JavaScript, it’s &lt;code class=&quot;highlighter-rouge&quot;&gt;Array.prototype.reducer()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In Redux, the accumulated state is the state object, and the values being accumulated are actions. Reducers calculate a new state given the previous state and an action. They must be pure functions – functions that return the exact same output for given inputs. They should also be free of side-ffects. This is what enables exciting features like hot reloading and time travel.&lt;/p&gt;

&lt;p&gt;Reducers are the mot important concept in Redux.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do not put PAI calls into reducers&lt;/strong&gt;.&lt;/p&gt;

&lt;h4 id=&quot;114-dispatching-function&quot;&gt;1.1.4 Dispatching Function&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Dispatch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Action&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Dispatch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AsyncAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A &lt;strong&gt;dispatching function&lt;/strong&gt; (or simply dispatch function) is a function that accepts an action or an &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#async-action&quot;&gt;async action&lt;/a&gt;; it then may or may not dispatch one or more actions to the store.&lt;/p&gt;

&lt;p&gt;We must distinguish between dispatching functions in general and the base &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; function provided by the store instance without any middleware.&lt;/p&gt;

&lt;p&gt;The base dispatch function always synchronously sends an aciton to the store’s reducer, along with the previous state returned by the store to calculate a new state. It expects action to be plain objects ready to be consumed by the reducer.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://redux.js.org/docs/Glossary.html#middleware&quot;&gt;Middlware&lt;/a&gt; wraps the base dispatch function. It allows the dispatch function to handle &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#async-action&quot;&gt;async actions&lt;/a&gt; in addition to actions. Middleware may transform, delay, ignore, or otherwise interpret actions or async actions before passing them to the next middleware. See below for more information.&lt;/p&gt;

&lt;h4 id=&quot;115-action-creator&quot;&gt;1.1.5 Action Creator&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ActionCreator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AsyncAction&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;An &lt;strong&gt;action creator&lt;/strong&gt; is, quite simply, a funciton that creates an action. Do not confuse the two terms –  again, an action is a payload of information and an action creator is a &lt;strong&gt;factory&lt;/strong&gt; that creats an action&lt;/p&gt;

&lt;p&gt;Calling an action creator only produces an action, but does not dispatch it. You need to call the store’s &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; function to actually cause the mutation. Sometimes we say &lt;strong&gt;bound action&lt;/strong&gt; creators to mean functions that call an action creator and immeidately dispatch its result to a specific store instance.&lt;/p&gt;

&lt;p&gt;If an action creator needs to read the current state, perform an API call, or cause a side effect, like a routing transition, it should return an &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#async-action&quot;&gt;async action&lt;/a&gt; instead of an action.&lt;/p&gt;

&lt;h4 id=&quot;116-async-action&quot;&gt;1.1.6 Async Action&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AsyncAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;An async action is a value that is sent to dispatching funciton, but is not yet ready for consumption by the reducer. It will be transformed by &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#middleware&quot;&gt;middleware&lt;/a&gt; into an action (or a series of actions) before being sent to the base &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch()&lt;/code&gt; funciton. Async actions may have different types, depending ont he midddlware you use. They are often asynchronous primitives, like a Promise or a thunk, which are not passed to the reducer immediately, but trigger action dispatches once an operation has completed.&lt;/p&gt;

&lt;h4 id=&quot;117-middleware&quot;&gt;1.1.7 Middleware&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MiddlewareAPI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;geState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Middleware&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MiddlewareAPI&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Dispatch&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A &lt;strong&gt;middleware&lt;/strong&gt; is a higher-order function that composes a &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#dispatching-function&quot;&gt;disaptch function&lt;/a&gt; to return a new dispatch function. It often turns &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#async-action&quot;&gt;aysnc actions&lt;/a&gt; into actions.&lt;/p&gt;

&lt;p&gt;Middleware is composable using funciton composition. It is useful for logging actions, performing side effects like routing, or turning an asynchronous API call into a seris of synchronous actions.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;http://redux.js.org/docs/api/applyMiddleware.html&quot;&gt;applyMiddleware(…middlewares)&lt;/a&gt; for a detailed look at middleware&lt;/p&gt;

&lt;h4 id=&quot;118-store&quot;&gt;1.1.8 Store&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Dispatch&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;getState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;listener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;replaceReducer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reducer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Reducer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A &lt;strong&gt;store&lt;/strong&gt; is an object that holds the application’s state tree. There should only be a single store in Redux app, as the composition happens on the reducer level.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://redux.js.org/docs/api/Store.html#dispatch&quot;&gt;dispatch(action)&lt;/a&gt;  is the base dispatch function described above.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://redux.js.org/docs/api/Store.html#getState&quot;&gt;getState()&lt;/a&gt; returns the current state of the store.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://redux.js.org/docs/api/Store.html#subscribe&quot;&gt;subscribe(listener)&lt;/a&gt; registers a function to be called on state changes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://redux.js.org/docs/api/Store.html#replaceReducer&quot;&gt;replaceReducer(nextReducer)&lt;/a&gt; can be used to implement hot reloading and code splitting. Most likely you won’t use it.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See the complete &lt;a href=&quot;http://redux.js.org/docs/api/Store.html#dispatch&quot;&gt;store API reference&lt;/a&gt; for more details.&lt;/p&gt;

&lt;h4 id=&quot;119-store-creator&quot;&gt;1.1.9 Store creator&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StoreCreator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reducer&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Reducer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;preloadedState&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A store creator is a funciton that creates a Redux store. Like with dispatching funciton, we must distinguish the base store creator, &lt;a href=&quot;http://redux.js.org/docs/api/createStore.html&quot;&gt;createStore(reducer, preloadedState)&lt;/a&gt; exported from the Redux package, from store creators that returned from the store enhancers.&lt;/p&gt;

&lt;h4 id=&quot;1110-store-enhancer&quot;&gt;1.1.10 Store enhancer&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StoreEnhancer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StoreCreator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StoreCreator&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A store enhancer is a higher-order function that composes a store creator to return a new, enhanced store creator. This is similar to middleware in that it allows you to alter the store interface in a composable way.&lt;/p&gt;

&lt;p&gt;Store enhancers are much the same concept as higher-order componenets in React, which are also occaasionally called “component enhancers”.&lt;/p&gt;

&lt;p&gt;Because a store is not an instace, but rather a plain-object collection of functions, copies can be easily created and modified without mutating the original store. There is an example in &lt;a href=&quot;http://redux.js.org/docs/api/compose.html&quot;&gt;compose&lt;/a&gt; documentation demonstrating that.&lt;/p&gt;

&lt;p&gt;Most likely you’ll never write a store enhancer, but you may the the one provided by the &lt;a href=&quot;https://github.com/gaearon/redux-devtools&quot;&gt;developer tools&lt;/a&gt;. It is what makes time travel possible without the app being aware it is happening. Amusingly, the &lt;a href=&quot;http://redux.js.org/docs/api/applyMiddleware.html&quot;&gt;Redux middleware implementation&lt;/a&gt; is itself a store enhancer.&lt;/p&gt;

&lt;h3 id=&quot;12-api-reference&quot;&gt;1.2 API Reference&lt;/h3&gt;

&lt;p&gt;The Redux API surface is tiny. Redux defines a set of contracts for you to implement (such as &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#reducer&quot;&gt;reducers&lt;/a&gt;) and provides a few helper functions to tie these contracts together.&lt;/p&gt;

&lt;p&gt;This section documents the complete Redux API. Keep in mind that Redux is only concerned with managing the state. In a real app, you’ll also want to use UI bindings like &lt;a href=&quot;https://github.com/gaearon/react-redux&quot;&gt;react-redux&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;121-createstorereducer-preloadedstateenhancer&quot;&gt;1.2.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;CreateStore(reducer, [preloadedState],[enhancer])&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Create a Redux &lt;a href=&quot;http://redux.js.org/docs/api/Store.html&quot;&gt;store&lt;/a&gt; that holds the complete state tree of your app. These should only be a single store in your app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Arguments&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;reducer&lt;/code&gt; (Function): A &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#reducer&quot;&gt;reducer function&lt;/a&gt; that returns the next &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#state&quot;&gt;state tree&lt;/a&gt;, given the current state tree and an &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#action&quot;&gt;action&lt;/a&gt; to handle&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[preloadedState]&lt;/code&gt; (any): The initial state. You may optionally specify it to hydrate the state from the server in universal apps, or to restore a previously serialized user session. If you produced &lt;code class=&quot;highlighter-rouge&quot;&gt;reducer&lt;/code&gt; with &lt;a href=&quot;http://redux.js.org/docs/api/combineReducers.html&quot;&gt;combineReducers&lt;/a&gt;, this must ba a plain object with the same shape as the keys passed to it. Otherwise, you are free to pass anything that your &lt;code class=&quot;highlighter-rouge&quot;&gt;reducer&lt;/code&gt; can understand.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[enhancer]&lt;/code&gt; (Function): The store enhancer. You may optionally specify it to enhance the store with third-party capabilities such as middleware, time travel, persistence, etc. The only store enahncer that ships with Redux is &lt;a href=&quot;http://redux.js.org/docs/api/applyMiddleware.html&quot;&gt;applyMiddleware()&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;http://redux.js.org/docs/api/Store.html&quot;&gt;Store&lt;/a&gt;): An objects that holds the complete state of your app. The only way to change its state is by &lt;a href=&quot;http://redux.js.org/docs/api/Store.html#dispatch&quot;&gt;dispatching actions&lt;/a&gt;. You may also &lt;a href=&quot;http://redux.js.org/docs/api/Store.html#subscribe&quot;&gt;subscribe&lt;/a&gt; to the changes to the state to update the UI.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redux'&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ADD_TODO'&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Use Redux'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ADD_TODO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Read the docs'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// [ 'Use Redux', 'Read the docs' ]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Tips&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Don’t create more than one store in an application! Instead, use &lt;a href=&quot;http://redux.js.org/docs/api/combineReducers.html&quot;&gt;combineReducers&lt;/a&gt; to create a single root reducer out of many.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It is up to you to choose the state format. You can use plain objects or something like &lt;a href=&quot;http://facebook.github.io/immutable-js/&quot;&gt;Immutable&lt;/a&gt;. If you’re not sure, start with plain objects.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If your state is a plain object, make sure you never mutate it! For example, instead of returning something like &lt;code class=&quot;highlighter-rouge&quot;&gt;Object.assign(state, newData)&lt;/code&gt; from your reducers, return &lt;code class=&quot;highlighter-rouge&quot;&gt;Object.assign({},state, newData)&lt;/code&gt;. This way you don’t override the previous &lt;code class=&quot;highlighter-rouge&quot;&gt;state&lt;/code&gt;. You can also write &lt;code class=&quot;highlighter-rouge&quot;&gt;return {...state,...newData}&lt;/code&gt; if you enable the &lt;a href=&quot;http://redux.js.org/docs/recipes/UsingObjectSpreadOperator.html&quot;&gt;object spread operator proposal&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For universal apps that run on the server, create a store intance with every request so that they are isolated. Dispatch a few data fetching actions to a store instance and wait for them to complete before rendering the app on the server.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When a store is created, Redux dispatches a dummy action to your reducer to populate the store with the initial state. You are not meant to handle the dummy action directly. Just remember that your reducer should return some kind of initial state if the state given to it as the first argument is &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt;, and you’re all set.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To apply multiple store enhancers, you may use &lt;a href=&quot;http://redux.js.org/docs/api/compose.html&quot;&gt;compose()&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;122-store&quot;&gt;1.2.2 Store&lt;/h4&gt;

&lt;p&gt;A store holds the whole &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#state&quot;&gt;state tree&lt;/a&gt; of your application. The only way to change the state inside it is to dispatch an &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#action&quot;&gt;action&lt;/a&gt; on it.&lt;/p&gt;

&lt;p&gt;A store is not a class. It’s just an object with a few methods on it. To create it, pass your root &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#reducer&quot;&gt;reducing function&lt;/a&gt; to &lt;a href=&quot;http://redux.js.org/docs/api/createStore.html&quot;&gt;createStore&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;A Note for Flux Users&lt;/strong&gt;: If you’re coming from Flux, there is a single important difference you need to understand. Redux doesn’t have a Dispatcher or support many stores. &lt;strong&gt;Instead, there is just a single store with a single root reducing function&lt;/strong&gt;. As your app grows, instead of adding stores, you split the root reducer into smaller reducers independently operating on the different parts of the state tree. You can use a helper like &lt;a href=&quot;http://redux.js.org/docs/api/combineReducers.html&quot;&gt;combinReducers&lt;/a&gt; to combine them. This is similar to how there is just one root component in a React app, but it is composed out of many small components.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;1221-getstate&quot;&gt;1.2.2.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;getState()&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;Returns the current state tree of your application. It is equal to the last value returned by the store’s reducer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(any): The current state tree of your application.&lt;/p&gt;

&lt;h5 id=&quot;1222-dispatchaction&quot;&gt;1.2.2.2 &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch(action)&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;Dispatches an action. This is the only way to trigger a state change.&lt;/p&gt;

&lt;p&gt;The store’s reducing function will be called with the current &lt;code class=&quot;highlighter-rouge&quot;&gt;getState()&lt;/code&gt; result and the given &lt;code class=&quot;highlighter-rouge&quot;&gt;action&lt;/code&gt; synchronously. Its return value will be considered the next state. It will be returned form &lt;code class=&quot;highlighter-rouge&quot;&gt;getState()&lt;/code&gt; from now on, and the change listeners will immediately be notified.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;A Note for Flux Users&lt;/strong&gt;: If you attempt to call &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; from inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;reducer&lt;/code&gt;, it will throw with an error saying “Reducers may not dispatch actions.” This is similar to “Cannot dispatch in a middle of diaptch” error in Flux, but doesn’t cause the problems associated with it. In Flux, a dispatch is forbidden while Stores are handling the action and emitting udpates. This is unfortunate because it makes it impossible to dispatc actions from component lifecycle hooks or other benign places. In Redux, subscriptions are called after the root reducer has returned the new state, so you may dispatch in the subscription listeners. You are only disallowed to dispatch inside the reducers because they must have no side effects. If you want to cause a side effect in response to an action, the right place to do this is in the potentially aysnc &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#action-creator&quot;&gt;action creator&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Arguments&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;action&lt;/code&gt; (Object): a plain object describing the change that makes sense for your application. Actions are the only way to get data ino the store, so any data, whether from the UI events, network callbacks, or other sources such as WebSockets needs to eventually be dispatched as actions. Actions must have a &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; field that indicates the type of action being performed. Types can be defined as constants and imported from another module. It’s better to use strings for &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; than &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Symbol&quot;&gt;Symbols&lt;/a&gt; because strings are serializable. Other than &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt;, the structure of an action object is really up to you. if you’re interested, check out &lt;a href=&quot;https://github.com/acdlite/flux-standard-action&quot;&gt;Flux Standard Action&lt;/a&gt; for recommendations on how actions could be constructed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(Object): The dispatched action. The “vanilla” store implementation you get be calling &lt;code class=&quot;highlighter-rouge&quot;&gt;createStore&lt;/code&gt; only supports plain object actions and hands them immediately to the reducer. Howevver, if you wrap &lt;code class=&quot;highlighter-rouge&quot;&gt;createStore&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;applyMiddleware&lt;/code&gt;, the middleware can interpret actions differently, and provide support for dispatching &lt;code class=&quot;highlighter-rouge&quot;&gt;async actions&lt;/code&gt;. Async actions are usually aysnchronous primitives like Promises, Obervables, or thunks.&lt;/p&gt;

&lt;p&gt;Middleware is created by the community and does not ship with Redux by default. You need to explicitly install packages like &lt;a href=&quot;https://github.com/gaearon/redux-thunk&quot;&gt;redux-thunk&lt;/a&gt; or &lt;a href=&quot;https://github.com/acdlite/redux-promise&quot;&gt;redux-promise&lt;/a&gt; to use it. You may also create your own middleware.&lt;/p&gt;

&lt;p&gt;To learn how to describe asynchronous API calls, read the current state inside action creators, perform side effects, or chain them to execute in a sequence, see the examples for &lt;a href=&quot;http://redux.js.org/docs/api/applyMiddleware.html&quot;&gt;applyMiddleware&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redux'&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Use Redux'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addTodo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ADD_TODO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTodo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Read the docs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTodo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Read about the middleware'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h5 id=&quot;1223-subscribelistener&quot;&gt;1.2.2.3 &lt;code class=&quot;highlighter-rouge&quot;&gt;subscribe(listener)&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;Adds a change listener. It will be called any time an action is dispatched, and some part of the state tree may potentially have changed. You may then call &lt;code class=&quot;highlighter-rouge&quot;&gt;getState()&lt;/code&gt; to read the current state tree inside the callback.&lt;/p&gt;

&lt;p&gt;You may call &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch()&lt;/code&gt; from a change listener, with the following caveats:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The listener should only call &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch()&lt;/code&gt; either in response to user actions or under specific condictions (e.g. dispatching an action when the store has specific field). Calling &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch()&lt;/code&gt; without any conditions is technically possible, however it lead to an infinite loop as every &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch()&lt;/code&gt; call usually triggers the listener again.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The subscriptions are snapshotted just before every &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch()&lt;/code&gt; call. If you subscribe or unsubsribe while the listeners are being invoked, this will n ot have any effect on the &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch()&lt;/code&gt; that is currently in progress. However, the next &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch()&lt;/code&gt; call, whether nested or not, will use a more recent snapshot of the subscritpion list.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The listener should not expect to see all state changes, as the state might have been udpated multiple times during a nested &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch()&lt;/code&gt; before the listener is called. It is however guaranteed that all subscribers registered before the &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch()&lt;/code&gt; started will be called with the latest state by the time it exits.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It is a low-level API. Most likely, instead of using it directly, you’ll use React (or other) bindings. If you commonly use the callback as a hook to react to state changes, you might want to &lt;a href=&quot;https://github.com/reactjs/redux/issues/303#issuecomment-125184409&quot;&gt;write a custom &lt;code class=&quot;highlighter-rouge&quot;&gt;observeStore&lt;/code&gt; utility&lt;/a&gt;. The &lt;code class=&quot;highlighter-rouge&quot;&gt;store&lt;/code&gt; is also an &lt;code class=&quot;highlighter-rouge&quot;&gt;Observable&lt;/code&gt;, so you can &lt;code class=&quot;highlighter-rouge&quot;&gt;subscribe&lt;/code&gt; to changes with libraries like &lt;a href=&quot;https://github.com/ReactiveX/RxJS&quot;&gt;RxJS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To unsubscribe the change listener, invoke the function returned by &lt;code class=&quot;highlighter-rouge&quot;&gt;subscribe&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Arguments&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;listener&lt;/code&gt; (Function): The callback to be invoked any time an action has been dispatched, and the state tree might have changed. You may call &lt;code class=&quot;highlighter-rouge&quot;&gt;getState()&lt;/code&gt; inside the callback to read the current state tree. It is resonable to expect that the store’s reducer is a pure function, so you may compare references to some deep path in the state tree to learn whether its value has changed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt;
(Function): Afunction that unsubscribes the change listener.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;property&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentValue&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;previousValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentValue&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;currentValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;previousValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;'Some deep nested property changed from'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;previousValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;'to'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;currentValue&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unsubscribe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;unsubscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h5 id=&quot;1224-replacereducernextreducer&quot;&gt;1.2.2.4 &lt;code class=&quot;highlighter-rouge&quot;&gt;replaceReducer(nextReducer)&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;Replaces the reducer currently used by the store to calculate the state. It is an advanced API. You might need this ifyour app implements code splitting, and you want to load some of the reducers dynamically. You might also need this if you implement a hot reloading mechanis, for Redux.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Arguments&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nextReducer&lt;/code&gt; (Function) The next reducer for the store to use.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;123-combinereducersreducers&quot;&gt;1.2.3 &lt;code class=&quot;highlighter-rouge&quot;&gt;combineReducers(reducers)&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;As yuor app grows more complex, you’ll want to split your &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#reducer&quot;&gt;reducing function&lt;/a&gt; into separate functions, each managing independent parts of the &lt;code class=&quot;highlighter-rouge&quot;&gt;state&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;combineReducers&lt;/code&gt; helper function turns an object whose values are different reducing functions into a single reducing function you can pass to &lt;code class=&quot;highlighter-rouge&quot;&gt;craeteStore&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The resulting reducer calls every child reducer, and gathers their results into a single state object. &lt;strong&gt;The shape of the state object matches the keys of the passed &lt;code class=&quot;highlighter-rouge&quot;&gt;reducers&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Consequently, the state object will look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;reducer1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;reducer2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can control state key names by using different keys for the reducers in the passed object. For example, you may call &lt;code class=&quot;highlighter-rouge&quot;&gt;combineReducers({ todos: myTodosReducer, counter: myCounterReducer })&lt;/code&gt; for the state shape to be &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;todos,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A popular convention is to name reducers after the state slices they manage, so you can use ES6 property shorthand notation: &lt;code class=&quot;highlighter-rouge&quot;&gt;combineReducers({ counter, todos })&lt;/code&gt;. This is equivalent to writing &lt;code class=&quot;highlighter-rouge&quot;&gt;combineReducers({ counter: counter, todos: todos })&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;A Note for Flux Users&lt;/strong&gt;: This function helps you organize your reducers to manage their own slices of state, similar to how you would have idfferent Flux Stores to manaeg different state. With Redux, there is just one store, but &lt;code class=&quot;highlighter-rouge&quot;&gt;combineReducers&lt;/code&gt; helps you keep the same logical division between reducers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Arguments&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;reducers&lt;/code&gt; (Object): An object whose values correspond to different reducing functions that need to be combined into one. See the notes below for some rulse every passed reducer must follow.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Earlier documentation suggested the use of the ES6 &lt;code class=&quot;highlighter-rouge&quot;&gt;import * as reducers&lt;/code&gt; syntax to obtain the reducers object. This was the source of a lot of confusion, which is why we now recommend exporting a single reducer obtained using &lt;code class=&quot;highlighter-rouge&quot;&gt;combineReducers()&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;reducers/index.js&lt;/code&gt; instead. An exmaple is included below.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt;
(Function): A reducer that invokes every reducer inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;reducers&lt;/code&gt; object, and constructs a state object with the same shape.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;
This function is mildly opinionated and is skewed towards helping beginners avoid common pitfalls. This is why it attempts to enforce some rules that you don’t have to follow if you write the root reducer manually.&lt;/p&gt;

&lt;p&gt;Any reducer passed to &lt;code class=&quot;highlighter-rouge&quot;&gt;combineReducers&lt;/code&gt; must satisfy these rules:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;For any action that is not recognized, it must return the &lt;code class=&quot;highlighter-rouge&quot;&gt;state&lt;/code&gt; given to it as the first argument.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It must never return &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt;. It is too easy to do this by mistake via en early &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; statement, so &lt;code class=&quot;highlighter-rouge&quot;&gt;combineReducers&lt;/code&gt; throws if you do that instead of letting the error manifest itself somewhere else.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If the &lt;code class=&quot;highlighter-rouge&quot;&gt;state&lt;/code&gt; given to it is &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt;, it must return the initial state for this specific reducer. According to the previous rule, the initial state must not be &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt; either. It is handy to specify it with ES6 optional arguments syntax, but you can also explicitly check the first argument for being &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While &lt;code class=&quot;highlighter-rouge&quot;&gt;combineReducers&lt;/code&gt; attempts to check that your reducers conform to some of these rules, you should remember them, and do your best to folow them. &lt;code class=&quot;highlighter-rouge&quot;&gt;combineReducers&lt;/code&gt; will check your reducers by passing &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt; to them; this is done even if you specify initial state to &lt;code class=&quot;highlighter-rouge&quot;&gt;Redux.createStore(combineReducers(...), initialState)&lt;/code&gt;. Therefore, you &lt;strong&gt;must&lt;/strong&gt; ensure your reducers work properly when receiving &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt; as state, even if you never intend for them to actually receive &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt; in your own code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// reducers/todos.js&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ADD_TODO'&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//  reducers/counter.js&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'INCREMENT'&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'DECREMENT'&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// reducers/index.js&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;combineReducers&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redux'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./todos'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./counter'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;combineReducers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// App.js&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redux'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reducer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./reducers/index'&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reducer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// {&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//   counter: 0,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//   todos: []&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// }&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ADD_TODO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Use Redux'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// {&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//   counter: 0,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//   todos: [ 'Use Redux' ]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// }&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Tips&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;This helper is just a convenience! You can write your own &lt;code class=&quot;highlighter-rouge&quot;&gt;combineReducers&lt;/code&gt; that &lt;a href=&quot;https://github.com/acdlite/reduce-reducers&quot;&gt;works differently&lt;/a&gt; or even assmble the state object from the child reducers manually and write a root reducing funciton explicitly, like you would write any other function.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You may call &lt;code class=&quot;highlighter-rouge&quot;&gt;combineReducers&lt;/code&gt; at any level of the reducer hierarchy. It doesn’t have to happen at the top. In fact you may use it again to split the child reducers that get too complicated into independent grandchildren, and so on.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;124-applymiddlewaremiddlewares&quot;&gt;1.2.4 &lt;code class=&quot;highlighter-rouge&quot;&gt;applyMiddleware(...middlewares)&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Middleware is the suggested way to extend Redux with custom functionality. Middleware lets you wrap the store’s &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; method for fun and profit. The key feature of middleware is that it is composable. Multiple middlewre can be combined together, where each middleware requires no knowledge of what comes before or after in the chain. The most common use case for middleware is to support asynchronous actions without much boilerplate code of a dependency on a library like &lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS&quot;&gt;Rx&lt;/a&gt;. It does so be letting you dispatch &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#async-action&quot;&gt;async actions&lt;/a&gt; in addition to normal actions.&lt;/p&gt;

&lt;p&gt;For example, &lt;a href=&quot;https://github.com/gaearon/redux-thunk&quot;&gt;redux-thunk&lt;/a&gt; lets the action creators invert control by dispatching functions. They would receive &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; as an argument and may call it asynchronously. Such functions are called thunks. Another exmaple of middleware is &lt;a href=&quot;https://github.com/acdlite/redux-promise&quot;&gt;redux-promise&lt;/a&gt;. It lets you dispatch a &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise&lt;/code&gt; async action, and dispatches a normal action when the Promise resovles.&lt;/p&gt;

&lt;p&gt;Middleware is not baked into &lt;code class=&quot;highlighter-rouge&quot;&gt;createStore&lt;/code&gt; and is not a fundamental part of the Redux architecture, but we consider it useful enough to be supported right in the core. This way, there is asingle standard way to extend &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; in the ecosystem, and different middleware may compete in the expressibeness and utility.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Arguments&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;...middleware&lt;/code&gt; (arguments): Functions that conform to the Redux middlware API. Each middleware receives &lt;code class=&quot;highlighter-rouge&quot;&gt;store&lt;/code&gt;’s &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; and 	&lt;code class=&quot;highlighter-rouge&quot;&gt;getState&lt;/code&gt; functions as named arguments, and returns a function. That function will be given the &lt;code class=&quot;highlighter-rouge&quot;&gt;next&lt;/code&gt; middleware’s dispatch method, and is expected to return a function of &lt;code class=&quot;highlighter-rouge&quot;&gt;action&lt;/code&gt; calling &lt;code class=&quot;highlighter-rouge&quot;&gt;next(action)&lt;/code&gt; with a potentially differnt argument, or at a differnt time, or maybe not calling it at all. The last middleware in the cahin will receive the real store’s &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; methid as the &lt;code class=&quot;highlighter-rouge&quot;&gt;next&lt;/code&gt; parameter, thus endig the chain. So, the middleware signature is &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(getState,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;dispatch)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;action&lt;/span&gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt;
(Function) A store enhancer that applies the given middleware. The store enahncer signature is &lt;code class=&quot;highlighter-rouge&quot;&gt;createStore =&amp;gt; createStore&lt;/code&gt; but he easiest way to apply it is to pass it to &lt;code class=&quot;highlighter-rouge&quot;&gt;createStore()&lt;/code&gt; as the last &lt;code class=&quot;highlighter-rouge&quot;&gt;enhancer&lt;/code&gt; argument.&lt;/p&gt;

&lt;p&gt;TBC&lt;/p&gt;

&lt;h4 id=&quot;125-bindactioncreatorsactioncreators-dispatch&quot;&gt;1.2.5 &lt;code class=&quot;highlighter-rouge&quot;&gt;bindActionCreators(actionCreators, dispatch)&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Turns an object whose values are &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#action-creator&quot;&gt;action creators&lt;/a&gt; into an object with the same keys, but with every action creator wrapped into a &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; call so they may be invoked directly.&lt;/p&gt;

&lt;p&gt;Normally you should just call &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; directly on your &lt;code class=&quot;highlighter-rouge&quot;&gt;store&lt;/code&gt; instance. If you use Redux with React, &lt;code class=&quot;highlighter-rouge&quot;&gt;react-redux&lt;/code&gt; will provide you with the &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; function so you can call it directly, too.&lt;/p&gt;

&lt;p&gt;The olly use case for &lt;code class=&quot;highlighter-rouge&quot;&gt;bindActionCreators&lt;/code&gt; is  when you want to pass some action creators down to a component that isn’t aware of Redux, and you don’t want to pass &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; or the Redux store to it.&lt;/p&gt;

&lt;p&gt;For convenience, you can also pass a single function as the first argument, and get a function in return.&lt;/p&gt;

&lt;p&gt;TBC&lt;/p&gt;

&lt;h4 id=&quot;126-composefunctions&quot;&gt;1.2.6 &lt;code class=&quot;highlighter-rouge&quot;&gt;compose(...functions)&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Compose function from right to left.&lt;/p&gt;

&lt;p&gt;This is a functional programming utility and is included in Redux as a convenience. You might want to use it to apply several &lt;a href=&quot;http://redux.js.org/docs/Glossary.html#action-creator&quot;&gt;store enhancers&lt;/a&gt; in a row.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Arguments&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;(arguments): The functions to compose. Each function is expected to accept a single parameter. Its return value will be provided as an argument to the function standing to the left, and so on. The exception is the right-most argument which can accpet multiple parameters, as it will provide the signature for thre resulting composed function.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(Function): The final function obtained by composing the given functions from right to left.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This example demonstrates how to use &lt;code class=&quot;highlighter-rouge&quot;&gt;compose&lt;/code&gt; to enhance a &lt;code class=&quot;highlighter-rouge&quot;&gt;store&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;applyMiddleware&lt;/code&gt; and a few developer tools from the &lt;code class=&quot;highlighter-rouge&quot;&gt;redu-devtools&lt;/code&gt; package.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;applyMiddleware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;compose&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redux'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;thunk&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redux-thunk'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DevTools&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./containers/DevTools'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reducer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../reducers/index'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;reducer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;compose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;applyMiddleware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;thunk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;DevTools&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;instrument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Tips&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;All &lt;code class=&quot;highlighter-rouge&quot;&gt;compose&lt;/code&gt; does is let you write deeply nested function transformations without the rightward drift of the code. Don’t give it too much credit!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;13-change-log&quot;&gt;1.3 Change Log&lt;/h3&gt;

&lt;p&gt;This project adheres to &lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Every release, along with the migration instructions, is documented on the Github &lt;a href=&quot;https://github.com/reactjs/redux/releases&quot;&gt;Releases&lt;/a&gt; page.&lt;/p&gt;

&lt;h3 id=&quot;14-patrons&quot;&gt;1.4 Patrons&lt;/h3&gt;

&lt;p&gt;The work on Redux was &lt;a href=&quot;https://www.patreon.com/reactdx&quot;&gt;funded by the community&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Meet some of the outstanding companies and individuals that made it possible:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/webflow&quot;&gt;Webflow&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.ximedes.com/&quot;&gt;Ximedes&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://hautelook.github.io/&quot;&gt;HauteLook&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://kenwheeler.github.io/&quot;&gt;Ken Wheeler&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.facebook.com/prototocal.lee&quot;&gt;Chung Yen Li&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/threepointone&quot;&gt;Sunil Pai&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/ccheever&quot;&gt;Charlie Cheever&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/e1g&quot;&gt;Eugene G&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/mattapperson&quot;&gt;Matt Apperson&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/jedwatson&quot;&gt;Jed Watson&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/xander76&quot;&gt;Sasha Aickin&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/whobubble&quot;&gt;Stefan Tennighkeit&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/samvincent&quot;&gt;Sam Vincent&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Olegzandr Denman&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;15-feedback&quot;&gt;1.5 Feedback&lt;/h3&gt;

&lt;p&gt;We appreciate feedback from the community. You can post feature requests and bug reports on &lt;a href=&quot;https://productpains.com/product/redux&quot;&gt;Product Pains&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;5-参考资料&quot;&gt;5 参考资料&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/reactjs/redux&quot;&gt;Redux&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://egghead.io/courses/getting-started-with-redux&quot;&gt;Get Started with Redux&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/tayiorbeii/egghead.io_redux_course_notes&quot;&gt;Note: Get Started with Redux&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/shunmian/4.1.1_redux-part-one&quot;&gt;React Code&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Mon, 24 Oct 2016 00:00:00 +0800</pubDate>
				<link>/04%20web%20development/2016/10/24/Redux-Part-V_Other.html</link>
				<guid isPermaLink="true">/04%20web%20development/2016/10/24/Redux-Part-V_Other.html</guid>
			</item>
		
			<item>
				<title>Redux Part IV：Debugging</title>
				<description>&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-debugging&quot; id=&quot;markdown-toc-1-debugging&quot;&gt;1 Debugging&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#10-redux-devtools&quot; id=&quot;markdown-toc-10-redux-devtools&quot;&gt;1.0 &lt;code class=&quot;highlighter-rouge&quot;&gt;redux-devtools&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#11-nothing-happens-when-i-dispatch-an-action&quot; id=&quot;markdown-toc-11-nothing-happens-when-i-dispatch-an-action&quot;&gt;1.1 Nothing happens when I dispatch an action&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#111-never-mutate-reducer-arguments&quot; id=&quot;markdown-toc-111-never-mutate-reducer-arguments&quot;&gt;1.1.1 Never mutate reducer arguments&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#112-dont-forget-to-call-dispatchaction&quot; id=&quot;markdown-toc-112-dont-forget-to-call-dispatchaction&quot;&gt;1.1.2 Don’t forget to call &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch(action)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#113-make-sure-mapstatetoprops-is-correct&quot; id=&quot;markdown-toc-113-make-sure-mapstatetoprops-is-correct&quot;&gt;1.1.3 Make sure &lt;code class=&quot;highlighter-rouge&quot;&gt;mapStateToProps&lt;/code&gt; is correct&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#12-something-else-doesnt-work&quot; id=&quot;markdown-toc-12-something-else-doesnt-work&quot;&gt;1.2 Something else doesn’t work&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-参考资料&quot; id=&quot;markdown-toc-5-参考资料&quot;&gt;5 参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-debugging&quot;&gt;1 Debugging&lt;/h2&gt;

&lt;h3 id=&quot;10-redux-devtools&quot;&gt;1.0 &lt;code class=&quot;highlighter-rouge&quot;&gt;redux-devtools&lt;/code&gt;&lt;/h3&gt;

&lt;h3 id=&quot;11-nothing-happens-when-i-dispatch-an-action&quot;&gt;1.1 Nothing happens when I dispatch an action&lt;/h3&gt;

&lt;p&gt;Sometimes, you are trying to dispatch an action,but your view does not update. Why does this ahppen? There may be several reasons for this.&lt;/p&gt;

&lt;h4 id=&quot;111-never-mutate-reducer-arguments&quot;&gt;1.1.1 Never mutate reducer arguments&lt;/h4&gt;

&lt;p&gt;It is tempting to modify the &lt;code class=&quot;highlighter-rouge&quot;&gt;state&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;action&lt;/code&gt; passed to you by Redux. Don’t do this!&lt;/p&gt;

&lt;p&gt;Redux assumes that you never mutate the objects it gives to you in the reducer. &lt;strong&gt;Every single time, you must return the new state object.&lt;/strong&gt; Even if you don’t use a library like &lt;a href=&quot;https://facebook.github.io/immutable-js/&quot;&gt;Immutable.JS&lt;/a&gt;, you need to completely avoid mutation.&lt;/p&gt;

&lt;p&gt;Immutability is what lets &lt;a href=&quot;https://github.com/gaearon/react-redux&quot;&gt;react-redux&lt;/a&gt; efficiently subscribe to fine-grained updates of your state. It also enables great developer experience featuers such as time travel with &lt;a href=&quot;http://github.com/gaearon/redux-devtools&quot;&gt;redux-devtools&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example, a reducer like this is wrong because it mutates the state:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ADD_TODO'&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// Wrong! This mutates state&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'COMPLETE_TODO'&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// Wrong! This mutates state[action.index].&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;completed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It needs to be rewritten like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ADD_TODO'&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// Return a new array&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'COMPLETE_TODO'&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// Return a new array&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// Copy the object before mutating&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It’s more code, but it’s exactly what makes Redux predictable and efficient. If you want to have less code, you can use a helper like &lt;a href=&quot;https://facebook.github.io/react/docs/update.html&quot;&gt;React.addons.update&lt;/a&gt; to write immutable transformations with a terse syntax&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// Before:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// After&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;$set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finally, to update objects, you’ll need something like &lt;code class=&quot;highlighter-rouge&quot;&gt;_.extend&lt;/code&gt; from Underscore, or better, an &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;Object.assign&lt;/a&gt; polyfill.&lt;/p&gt;

&lt;p&gt;Make sure that you use &lt;code class=&quot;highlighter-rouge&quot;&gt;Object.assign&lt;/code&gt; correctly. For example, instead of returning something like &lt;code class=&quot;highlighter-rouge&quot;&gt;Object.assign(state, newData)&lt;/code&gt; from your reducers, return &lt;code class=&quot;highlighter-rouge&quot;&gt;Object.assign({}, state, newData)&lt;/code&gt;. This way you don’t override the previous &lt;code class=&quot;highlighter-rouge&quot;&gt;state&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can also enable the &lt;a href=&quot;http://redux.js.org/docs/recipes/UsingObjectSpreadOperator.html&quot;&gt;Object spread operator proposal&lt;/a&gt; for a more succinct syntax:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// Before:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// After:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note that experimental language features are subject to change.&lt;/p&gt;

&lt;p&gt;Also keep an eye out for nested state objects that need to be deeply copied. Both &lt;code class=&quot;highlighter-rouge&quot;&gt;_.extend&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Object.assign&lt;/code&gt; make a shallow copy of the state. See &lt;a href=&quot;http://redux.js.org/docs/recipes/reducers/ImmutableUpdatePatterns.html#updating-nested-objects&quot;&gt;Updateing Nested Objects&lt;/a&gt; for suggestions on how to deal with nested state objects.&lt;/p&gt;

&lt;h4 id=&quot;112-dont-forget-to-call-dispatchaction&quot;&gt;1.1.2 Don’t forget to call &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch(action)&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;If you define an action creator, calling it will not automatically dispatch an action. For example, this code will do nothing:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;//TodoActions.js&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addTodo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ADD_TODO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//AddTodo.js&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addTodo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./TodoActions'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AddTodo&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Won't work!&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;addTodo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Fix the issue'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Add&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/button&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It doesn’t work because your action creator is just a function that returns an action. It is up to you to actually dispatch it. We can’t bind your action creators to a particular Store instance during the definition because apps that render on the server need a separate Redux store for every request.&lt;/p&gt;

&lt;p&gt;The fix is to call &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch()&lt;/code&gt; method on the &lt;code class=&quot;highlighter-rouge&quot;&gt;store&lt;/code&gt; instance:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Works! (but you need to grab store somehow)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTodo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Fix the issue'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you’re somewhere deep in the component hierarchy, it is cumbersome to pass the store down manually. This is why &lt;a href=&quot;https://github.com/gaearon/react-redux&quot;&gt;react-redux&lt;/a&gt; lets you use a &lt;code class=&quot;highlighter-rouge&quot;&gt;connect&lt;/code&gt; &lt;a href=&quot;https://medium.com/@dan_abramov/mixins-are-dead-long-live-higher-order-components-94a0d2f9e750&quot;&gt;higher-order component&lt;/a&gt; that will, apart from subscribing you to a Redux store, inject &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; into your component’s props.&lt;/p&gt;

&lt;p&gt;The fixed code looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;//AddTodo.js&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-redux'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addTodo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./TodoActions'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AddTodo&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Works!&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTodo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Fix the issue'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Add&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/button&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// In addition to the state, `connect` puts `dispatch` in our props.&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AddTodo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can then pass &lt;code class=&quot;highlighter-rouge&quot;&gt;dispatch&lt;/code&gt; down to other components manually, if you want to.&lt;/p&gt;

&lt;h4 id=&quot;113-make-sure-mapstatetoprops-is-correct&quot;&gt;1.1.3 Make sure &lt;code class=&quot;highlighter-rouge&quot;&gt;mapStateToProps&lt;/code&gt; is correct&lt;/h4&gt;

&lt;p&gt;It’s possible you’re correctly dispatching an action and applying your reducer but the corresponding state is not being correctly translated into props.&lt;/p&gt;

&lt;h3 id=&quot;12-something-else-doesnt-work&quot;&gt;1.2 Something else doesn’t work&lt;/h3&gt;

&lt;p&gt;Ask around on the &lt;strong&gt;#redux&lt;/strong&gt; &lt;a href=&quot;http://reactiflux.com/&quot;&gt;Reactiflux&lt;/a&gt; Discord channel, or &lt;a href=&quot;https://github.com/reactjs/redux/issues&quot;&gt;create an issue&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you figure it out, &lt;a href=&quot;https://github.com/reactjs/redux/edit/master/docs/Troubleshooting.md&quot;&gt;edit this doecument&lt;/a&gt; as a courtesy to the next eprson having the same problem.&lt;/p&gt;

&lt;h2 id=&quot;5-参考资料&quot;&gt;5 参考资料&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/reactjs/redux&quot;&gt;Redux&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://egghead.io/courses/getting-started-with-redux&quot;&gt;Get Started with Redux&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/tayiorbeii/egghead.io_redux_course_notes&quot;&gt;Note: Get Started with Redux&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/shunmian/4.1.1_redux-part-one&quot;&gt;React Code&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Sun, 23 Oct 2016 00:00:00 +0800</pubDate>
				<link>/04%20web%20development/2016/10/23/Redux-Part-IV_Debugging.html</link>
				<guid isPermaLink="true">/04%20web%20development/2016/10/23/Redux-Part-IV_Debugging.html</guid>
			</item>
		
	</channel>
</rss>

<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-05-02T09:00:57+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">SHUNMIAN</title><subtitle>Stylish Jekyll Theme</subtitle><author><name>Shunmian</name><email>shunmian@gmail.com</email></author><entry><title type="html">CircleCI</title><link href="http://localhost:4000/-24%20continous%20integration/2018/05/16/CircleCI.html" rel="alternate" type="text/html" title="CircleCI" /><published>2018-05-16T00:00:00+08:00</published><updated>2018-05-16T00:00:00+08:00</updated><id>http://localhost:4000/-24%20continous%20integration/2018/05/16/CircleCI</id><content type="html" xml:base="http://localhost:4000/-24%20continous%20integration/2018/05/16/CircleCI.html">&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-circle-ci&quot; id=&quot;markdown-toc-1-circle-ci&quot;&gt;1. Circle CI&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11-what-is-circle-ci&quot; id=&quot;markdown-toc-11-what-is-circle-ci&quot;&gt;1.1 What is Circle CI&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#12-how-to-integrate-circle-ci-to-your-repository&quot; id=&quot;markdown-toc-12-how-to-integrate-circle-ci-to-your-repository&quot;&gt;1.2 How to integrate Circle CI to your repository&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-参考资料&quot; id=&quot;markdown-toc-2-参考资料&quot;&gt;2 参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-circle-ci&quot;&gt;1. Circle CI&lt;/h2&gt;

&lt;h3 id=&quot;11-what-is-circle-ci&quot;&gt;1.1 What is Circle CI&lt;/h3&gt;

&lt;p class=&quot;img_middle_lg&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/-24 Continous Integartion/2018-05-16-CircleCI/What is CircleCI.png&quot; alt=&quot;Vim summary&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;12-how-to-integrate-circle-ci-to-your-repository&quot;&gt;1.2 How to integrate Circle CI to your repository&lt;/h3&gt;

&lt;p&gt;TBC.&lt;/p&gt;

&lt;h2 id=&quot;2-参考资料&quot;&gt;2 参考资料&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://circleci.com/docs/2.0/&quot;&gt;《CircleCI Documentation》&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Shunmian</name><email>shunmian@gmail.com</email></author><category term="Vim" /><summary type="html">目录</summary></entry><entry><title type="html">Kubernetes介绍</title><link href="http://localhost:4000/-26%20container/2018/05/10/Kubernetes.html" rel="alternate" type="text/html" title="Kubernetes介绍" /><published>2018-05-10T00:00:00+08:00</published><updated>2018-05-10T00:00:00+08:00</updated><id>http://localhost:4000/-26%20container/2018/05/10/Kubernetes</id><content type="html" xml:base="http://localhost:4000/-26%20container/2018/05/10/Kubernetes.html">&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-docker-介绍&quot; id=&quot;markdown-toc-1-docker-介绍&quot;&gt;1. Docker 介绍&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-docker-介绍&quot;&gt;1. Docker 介绍&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://time.geekbang.org/column/103&quot;&gt;《软件测试52讲》&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/jest/docs/en/getting-started.html&quot;&gt;《Jest Documentation》&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Shunmian</name><email>shunmian@gmail.com</email></author><category term="Docker" /><category term="Kubernetes" /><summary type="html">目录</summary></entry><entry><title type="html">Docker介绍</title><link href="http://localhost:4000/-26%20container/2018/05/01/Docker.html" rel="alternate" type="text/html" title="Docker介绍" /><published>2018-05-01T00:00:00+08:00</published><updated>2018-05-01T00:00:00+08:00</updated><id>http://localhost:4000/-26%20container/2018/05/01/Docker</id><content type="html" xml:base="http://localhost:4000/-26%20container/2018/05/01/Docker.html">&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-docker-基础&quot; id=&quot;markdown-toc-1-docker-基础&quot;&gt;1. Docker 基础&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11-白话容器技术基础&quot; id=&quot;markdown-toc-11-白话容器技术基础&quot;&gt;1.1 白话容器技术基础&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#110-docker和kubernetes的前世今生&quot; id=&quot;markdown-toc-110-docker和kubernetes的前世今生&quot;&gt;1.1.0 Docker和Kubernetes的前世今生&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#11-container&quot; id=&quot;markdown-toc-11-container&quot;&gt;1.1 Container&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#12-kubernetes集群的搭建与实践&quot; id=&quot;markdown-toc-12-kubernetes集群的搭建与实践&quot;&gt;1.2 Kubernetes集群的搭建与实践&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#13-容器编排与kubernetes核心特性剖析&quot; id=&quot;markdown-toc-13-容器编排与kubernetes核心特性剖析&quot;&gt;1.3 容器编排与Kubernetes核心特性剖析&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#14-kubernates开源社区与生态&quot; id=&quot;markdown-toc-14-kubernates开源社区与生态&quot;&gt;1.4 Kubernates开源社区与生态&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-summary&quot; id=&quot;markdown-toc-2-summary&quot;&gt;2 Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-docker-基础&quot;&gt;1. Docker 基础&lt;/h2&gt;

&lt;p&gt;从过去以物理机和虚拟机为主体的开发运维环境，向以容器为核心的基础设施的转变过程，并不是一次温和的改革，而是涵盖了对网络，存储，调度，操作系统，分布式原理等各个方面的容器化理解和改造。&lt;/p&gt;

&lt;p&gt;这就导致了很多初学者，对于容器技术栈表现出来的这些难题，要么知识储备不足，要么杂乱无章，无法形成体系。&lt;/p&gt;

&lt;p&gt;对于Linux内核，分布式系统，网络，存储等方方面面的积累，并不会在Docker或者Kubernetes的文档中交代清楚。可偏偏就是它们，才是真正掌握容器技术体系的精髓所在，是每一位技术从业者需要细心修炼的”内功”。&lt;/p&gt;

&lt;h3 id=&quot;11-白话容器技术基础&quot;&gt;1.1 白话容器技术基础&lt;/h3&gt;

&lt;h4 id=&quot;110-docker和kubernetes的前世今生&quot;&gt;1.1.0 Docker和Kubernetes的前世今生&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Paas: 应用托管，即在虚拟机上部署1个Cloud Foundry项目，然后在本地输入&lt;code&gt;cf push &quot;我的应用&quot;&lt;/code&gt;, 就能把本地应用部署到云上。Cloud Foundry，就是这样一种Paas(其他相近的还包括Heroku, Pivotal)。Paas的核心组件就是一套应用的打包和分发机制。Cloud Foundry 为每种主流编程语言都定义了一种打包格式，而&lt;code&gt;cf push&lt;/code&gt;的作用，基本上等同于用户把应用的可执行文件和启动脚本打进一个压缩包内，上传到云上Cloud Foundry的存储中。接着，Cloud Foundry会通过调度器选择一个可以运行这个应用的虚拟机，然后通知这个酒气上的Agent把应用压缩包下载下来启动。由于需要在一个虚拟机上启动很多个来自不同用户的应用，Cloud Foundry会调用操作系统的Cgroups和Namespace机制为每一个应用单独创建一个称作”沙盒”的隔离环境，然后在”沙盒”中启动这些应用进程。这样，就实现了把多个用户的应用互不干涉地在虚拟机里批量自动运行起来的目的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Docker项目，其实就是一个这样的沙盒，和Cloud Foundry并没有不同，除了&lt;strong&gt;镜像&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;CloudFoundry的打包配置，需要不断是错。它导致虽然 &lt;code&gt;cf push&lt;/code&gt;确实能一键部署，但是为了实现这个一键部署，用户为每个应用打包的工作可谓一波三折，费尽心机。&lt;strong&gt;而Docker镜像解决的，恰恰就是打包这个根本性的问题。&lt;/strong&gt;假设你的应用在本地运行，环境是CentOS 7.2 操作系统的所有文件和目录，那么只要用CentOS 7.2的ISO做一个2压缩包，再把你的应用可执行文件也压缩进去，那么无论在哪里解压这个压缩包，都可以得到与你本地测试时一样的环境。当然，你的应用也在里面！这就是Docker镜像最厉害的地方: 只要有这个压缩包在手，你就可以使用某种技术创建一个沙盒，在沙盒中解压这个压缩包，然后就可以运行你的程序了。&lt;/p&gt;

&lt;p&gt;有了Docker镜像这个利器，Paas里最核心的打包系统一下子就没了用武之地，最让用户抓狂的大包裹成页随之消失了。&lt;/p&gt;

&lt;p&gt;所以你只需要提供一个下载好的操作系统文件与目录，然后使用它制作一个压缩包即可，这个命令就是&lt;code&gt;$docker build 我的镜像&lt;/code&gt;; 一旦镜像制作完成，用户就可以让Docker创建一个沙盒来解压这个镜像，然后在沙盒中运行自己的应用，这个命令就是&lt;code&gt;$docker run 我的镜像&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;所以，Docker项目给PaaS世界带来的”降维打击”，其实是提供了一种非常便利的打包机制。这种机制直接打爆了应用运行所需要的整个操作系统，从而保证了本地环境和云端环境的高度一致，避免了用户通过“试错”来匹配两种不同运行环境之间差异的痛苦过程。&lt;/p&gt;

&lt;p&gt;但是Docker还缺一项Paas的功能，即大规模部署应用的职责。2014年Docker雄心勃勃的推出了原生容器集群管理项目Swarm, 不仅将这波”Caas(Container as a service)”推向了一个前所未有的高潮，更是寄托了整个Docker公司重新定义PaaS的宏伟愿望。&lt;/p&gt;

&lt;p&gt;无开源不生态，无生态不商业。&lt;/p&gt;

&lt;p&gt;Swarm项目完全使用Docker项目原本的容器管理API来完成&lt;strong&gt;集群管理&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;单机Docker项目: &lt;code&gt;docker run 我的项目&lt;/code&gt;；
多机Docker项目: &lt;code&gt;docker run -H 我的Swarm集群API地址 我的容器&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;所以在部署了Swarm的多机环境下，用户只需要使用原先的Docker指令创建一个容器，这个请求就会被Swarm拦截下来处理，然后通过具体的调度算法找到一个合适的Docker Daemon运行起来。而此时大红大紫到不差钱的Docker公司，开始及时得借助这波浪潮通过并购来完善自己的平台层能力。其中一个最成功的案例，莫过于对Fig项目的收购。要知道，Fig项目基本上只是靠两个人全职开发和维护的，可它却是当时Github上热度堪比Docker项目的明星。&lt;/p&gt;

&lt;p&gt;Fig项目之所以受欢迎，在于它在开发者面前第一次提出了&lt;strong&gt;容器编排(Container Orchestration)&lt;/strong&gt;的概念，即假如现在用户需要部署的是应用容器A,数据库容器B,负载均衡容器C,那么Fig就允许用户把A,B,C三个容器定义在一个配置文件中，并且可以指定它们之间的关联关系，比如容器A需要访问数据库容器B(参考&lt;a href=&quot;https://circleci.com/docs/2.0/workflows/&quot;&gt;CircleCI config.yml&lt;/a&gt;)。接下来，你只需要执行&lt;code&gt;fig up&lt;/code&gt;，Fig就会把这些容器的定义和配置交给Docker API按照访问逻辑一次创建，你的一系列容器就都启动了；而容器A与B之间的关联关系，也会交给Docker的Link功能通过写入hosts文件的方式进行配置。更重要的是，你还可以在Fig的配置文件里定义各种容器的副本个数等编排参数，再加上Swarm的集群管理能力，一个活脱脱的PaaS呼之欲出。Fig项目被收购后改名为&lt;strong&gt;Compose&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;Docker的&lt;strong&gt;Compose&lt;/strong&gt;, &lt;strong&gt;Swarm&lt;/strong&gt;和&lt;strong&gt;Machine&lt;/strong&gt;三件套，在重新定义PaaS的方向上走出了最关键的一步。&lt;/p&gt;

&lt;p&gt;Docker公司最后选择对抗来自整个云计算产业的压力，是将开源项目与商业产品精密绑定，打造了一个极端封闭的技术生态。而这，违背了Docker项目与开发者保持亲密关系的初衷。相比之下，Kubernetes社区，正是以一种更加温和的方式，承接了Docker项目的未尽事业，即: 以开发者为核心，构建一个相对民主和开放的容器生态。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;容器技术的兴起源于PaaS技术的普及；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Docker公司发布的Docker项目具有里程碑式的意义；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Docker项目通过“容器镜像”，解决了应用打包这个根本性难题；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;容器本身没有价值，有价值的是“容器编排”。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;11-container&quot;&gt;1.1 Container&lt;/h3&gt;

&lt;p class=&quot;img_middle_hg&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/-26_Container/2018-05-01-Docker/virtual-machine-vs-docker.png&quot; alt=&quot;Virtual Machine vs Docker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;B比A更准确。用户运行在容器里的应用进程，跟宿主机上的其他进程一样，都由宿主机操作系统统一管理，只不过这些被隔离的进程拥有额外设置过的Namespace参数。而Docker项目在这里扮演的角色，更多的是旁路式的辅助和管理工作。在后续分享CRI和容器运行时的时候还会介绍到，像Docker这样的角色甚至可以去。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;宿主机和容器之间的兼容性。既然容器只是运行在宿主机上的一种特殊的进程，那么多个容器之间使用的就还是同一个宿主机的操作系统内核。尽管可以在容器里通过Mount Namesapce 单独挂载其他不同版本的操作系统文件，但这并不能改变共享宿主机内核的事实。这意味着Windoes宿主机不能运行Linux容器；低版本的Linux宿主机不能运行高版本的Linux容器。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在Linux内核中，有很多资源和对象是不能被Namespace化的，最典型的例子就是时间。如果你的容器中的程序使用&lt;code&gt;settimeofday(2)&lt;/code&gt;系统调用修改了时间，整个宿主机的时间都会被随之修改。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;容器技术的核心功能，就是通过约束和修改进程的动态表现，从而为其创造出一个“边界”:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Cgroups(Linux Control Group)&lt;/strong&gt;，制造约束。限制一个进程组能够使用资源的上限，包括CPU，内存，磁盘，网络带宽等。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Namespace&lt;/strong&gt;，修改进程视图。将进程划分为一个独立空间，使其觉得自己是各自PID Namespace里的第1号进程，只能看到各自Mount Namespace里挂载的目录和文件，只能访问到各自Network Namespace里的网络设备，就仿佛运行在一个个”容器”里面，与世隔绝。容器是个&lt;strong&gt;单进程&lt;/strong&gt;模型，用户的应用进程实际上就是容器里PID=1的进程，也是其他后续创建的所有进程的父进程。这就意味着，在一个容器中，你没办法同时运行两个不同的应用，除非你能事先找到一个公共的PID=1的程序来充当两个不同应用的父进程，这也是为什么很多人都会用systemd或者supervisord这样的软件来代替应用本身作为容器的启动进程。在后面分享&lt;strong&gt;容器设计模式&lt;/strong&gt;时，还会推荐其他更好的解决办法。这是因为容器本身的设计，就是希望&lt;strong&gt;容器和应用能够同生命周期&lt;/strong&gt;，这个概念对后续的容器编排非常重要。否则，一旦出现类似于&lt;strong&gt;容器是正常运行的，但是里面的应用早已经挂了&lt;/strong&gt;的情况，编排系统处理起来就非常麻烦了。关于单进程举个例子，比如一个镜像里集成了jdk，netstate,ping等，虽然容器启动时里面是一个java进程，但是我可以进到容器里面执行各种命令，比如netstate等，那这些命令在容器的运行过程中是在运行吗？实在运行，但它们不受docker的控制，就像野孩子。所以单进程意思不是只能运行一个进程，而是只有一个进程是可控的。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;12-kubernetes集群的搭建与实践&quot;&gt;1.2 Kubernetes集群的搭建与实践&lt;/h3&gt;

&lt;h3 id=&quot;13-容器编排与kubernetes核心特性剖析&quot;&gt;1.3 容器编排与Kubernetes核心特性剖析&lt;/h3&gt;

&lt;h3 id=&quot;14-kubernates开源社区与生态&quot;&gt;1.4 Kubernates开源社区与生态&lt;/h3&gt;

&lt;h2 id=&quot;2-summary&quot;&gt;2 Summary&lt;/h2&gt;

&lt;p class=&quot;img_middle_hg&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/-26_Container/2018-05-01-Docker/kubernetes-skill-map.jpg&quot; alt=&quot;kubernetes Skill Map&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://time.geekbang.org/column/103&quot;&gt;《软件测试52讲》&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/jest/docs/en/getting-started.html&quot;&gt;《Jest Documentation》&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Shunmian</name><email>shunmian@gmail.com</email></author><category term="Docker" /><summary type="html">目录</summary></entry><entry><title type="html">Jest</title><link href="http://localhost:4000/-23%20test/2018/04/16/Jest.html" rel="alternate" type="text/html" title="Jest" /><published>2018-04-16T00:00:00+08:00</published><updated>2018-04-16T00:00:00+08:00</updated><id>http://localhost:4000/-23%20test/2018/04/16/Jest</id><content type="html" xml:base="http://localhost:4000/-23%20test/2018/04/16/Jest.html">&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-test-框架原型&quot; id=&quot;markdown-toc-1-test-框架原型&quot;&gt;1. Test 框架原型&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11-基本数据结构测试&quot; id=&quot;markdown-toc-11-基本数据结构测试&quot;&gt;1.1 基本数据结构测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#12-异步测试&quot; id=&quot;markdown-toc-12-异步测试&quot;&gt;1.2 异步测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#13-group测试&quot; id=&quot;markdown-toc-13-group测试&quot;&gt;1.3 Group测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#14-mock测试&quot; id=&quot;markdown-toc-14-mock测试&quot;&gt;1.4 Mock测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#15-test-coveraage-report-intepration&quot; id=&quot;markdown-toc-15-test-coveraage-report-intepration&quot;&gt;1.5 Test Coveraage Report Intepration&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-参考资料&quot; id=&quot;markdown-toc-2-参考资料&quot;&gt;2 参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-test-框架原型&quot;&gt;1. Test 框架原型&lt;/h2&gt;

&lt;h3 id=&quot;11-基本数据结构测试&quot;&gt;1.1 基本数据结构测试&lt;/h3&gt;

&lt;h3 id=&quot;12-异步测试&quot;&gt;1.2 异步测试&lt;/h3&gt;

&lt;h3 id=&quot;13-group测试&quot;&gt;1.3 Group测试&lt;/h3&gt;

&lt;h3 id=&quot;14-mock测试&quot;&gt;1.4 Mock测试&lt;/h3&gt;

&lt;p&gt;TBC.&lt;/p&gt;

&lt;h3 id=&quot;15-test-coveraage-report-intepration&quot;&gt;1.5 Test Coveraage Report Intepration&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Statements:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Branches:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Functions:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Lines:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;2-参考资料&quot;&gt;2 参考资料&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/jest/docs/en/getting-started.html&quot;&gt;《Jest Documentation》&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Shunmian</name><email>shunmian@gmail.com</email></author><category term="Test" /><summary type="html">目录</summary></entry><entry><title type="html">Test Foundation</title><link href="http://localhost:4000/-23%20test/2018/04/01/Test-Foundation.html" rel="alternate" type="text/html" title="Test Foundation" /><published>2018-04-01T00:00:00+08:00</published><updated>2018-04-01T00:00:00+08:00</updated><id>http://localhost:4000/-23%20test/2018/04/01/Test%20Foundation</id><content type="html" xml:base="http://localhost:4000/-23%20test/2018/04/01/Test-Foundation.html">&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-test-基础&quot; id=&quot;markdown-toc-1-test-基础&quot;&gt;1. Test 基础&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11-自动化测试&quot; id=&quot;markdown-toc-11-自动化测试&quot;&gt;1.1 自动化测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#12-test-coverage&quot; id=&quot;markdown-toc-12-test-coverage&quot;&gt;1.2 Test Coverage&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#13-software-defect-report软件缺陷报告&quot; id=&quot;markdown-toc-13-software-defect-report软件缺陷报告&quot;&gt;1.3 Software Defect Report(软件缺陷报告)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#14-tdd&quot; id=&quot;markdown-toc-14-tdd&quot;&gt;1.4 TDD&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-gui自动化测试&quot; id=&quot;markdown-toc-2-gui自动化测试&quot;&gt;2. GUI自动化测试&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-web&quot; id=&quot;markdown-toc-21-web&quot;&gt;2.1 Web&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#211-脚本与数据的解耦--page-object模型&quot; id=&quot;markdown-toc-211-脚本与数据的解耦--page-object模型&quot;&gt;2.1.1 脚本与数据的解耦 + Page Object模型&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#212-gui自动化过程中的测试数据&quot; id=&quot;markdown-toc-212-gui自动化过程中的测试数据&quot;&gt;2.1.2 GUI自动化过程中的测试数据&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#213-page-code-gen--data-gen--headless&quot; id=&quot;markdown-toc-213-page-code-gen--data-gen--headless&quot;&gt;2.1.3 Page Code Gen + Data Gen + Headless&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#214-gui测试稳定性&quot; id=&quot;markdown-toc-214-gui测试稳定性&quot;&gt;2.1.4 GUI测试稳定性&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#215-gui测试报告&quot; id=&quot;markdown-toc-215-gui测试报告&quot;&gt;2.1.5 GUI测试报告&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#216-gui自动化测试策略&quot; id=&quot;markdown-toc-216-gui自动化测试策略&quot;&gt;2.1.6 GUI自动化测试策略&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-移动端&quot; id=&quot;markdown-toc-22-移动端&quot;&gt;2.2 移动端&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#221-移动应用测试方法与思路&quot; id=&quot;markdown-toc-221-移动应用测试方法与思路&quot;&gt;2.2.1 移动应用测试方法与思路&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#222-appium&quot; id=&quot;markdown-toc-222-appium&quot;&gt;2.2.2 Appium&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-api自动化测试&quot; id=&quot;markdown-toc-3-api自动化测试&quot;&gt;3. API自动化测试&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-常用api测试工具简介&quot; id=&quot;markdown-toc-31-常用api测试工具简介&quot;&gt;3.1 常用API测试工具简介&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-微服务模式下api测试&quot; id=&quot;markdown-toc-32-微服务模式下api测试&quot;&gt;3.2 微服务模式下API测试&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-代码级测试&quot; id=&quot;markdown-toc-4-代码级测试&quot;&gt;4. 代码级测试&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#41-代码级测试的基本理念与方法&quot; id=&quot;markdown-toc-41-代码级测试的基本理念与方法&quot;&gt;4.1 代码级测试的基本理念与方法&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#42-静态方法&quot; id=&quot;markdown-toc-42-静态方法&quot;&gt;4.2 静态方法&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#43-动态方法&quot; id=&quot;markdown-toc-43-动态方法&quot;&gt;4.3 动态方法&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#431-unit-test&quot; id=&quot;markdown-toc-431-unit-test&quot;&gt;4.3.1 Unit Test&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#432-integrated-test&quot; id=&quot;markdown-toc-432-integrated-test&quot;&gt;4.3.2 Integrated Test&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-性能测试&quot; id=&quot;markdown-toc-5-性能测试&quot;&gt;5. 性能测试&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#51-测试的基本方法与应用领域&quot; id=&quot;markdown-toc-51-测试的基本方法与应用领域&quot;&gt;5.1 测试的基本方法与应用领域&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#52-前端性能测试工具原理与行业常用工具简介&quot; id=&quot;markdown-toc-52-前端性能测试工具原理与行业常用工具简介&quot;&gt;5.2 前端性能测试工具原理与行业常用工具简介&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#53-后端性能测试工具原理与行业常用工具简介&quot; id=&quot;markdown-toc-53-后端性能测试工具原理与行业常用工具简介&quot;&gt;5.3 后端性能测试工具原理与行业常用工具简介&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6-测试数据准备&quot; id=&quot;markdown-toc-6-测试数据准备&quot;&gt;6. 测试数据准备&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#61-build-pattern&quot; id=&quot;markdown-toc-61-build-pattern&quot;&gt;6.1 Build Pattern&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#62-统一测试数据平台&quot; id=&quot;markdown-toc-62-统一测试数据平台&quot;&gt;6.2 统一测试数据平台&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-测试基础架构&quot; id=&quot;markdown-toc-7-测试基础架构&quot;&gt;7. 测试基础架构&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#71-selenium-grid-for-gui&quot; id=&quot;markdown-toc-71-selenium-grid-for-gui&quot;&gt;7.1 Selenium Grid for GUI&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#72-测试执行环境的架构设计&quot; id=&quot;markdown-toc-72-测试执行环境的架构设计&quot;&gt;7.2 测试执行环境的架构设计&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#73-大型全球化电商的测试基础架构设计&quot; id=&quot;markdown-toc-73-大型全球化电商的测试基础架构设计&quot;&gt;7.3 大型全球化电商的测试基础架构设计&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#8-测试新技术&quot; id=&quot;markdown-toc-8-测试新技术&quot;&gt;8. 测试新技术&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#81-探索式测试&quot; id=&quot;markdown-toc-81-探索式测试&quot;&gt;8.1 探索式测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#82-精准测试&quot; id=&quot;markdown-toc-82-精准测试&quot;&gt;8.2 精准测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#83-渗透测试&quot; id=&quot;markdown-toc-83-渗透测试&quot;&gt;8.3 渗透测试&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#84-基于模型的测试&quot; id=&quot;markdown-toc-84-基于模型的测试&quot;&gt;8.4 基于模型的测试&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#9-深入浅出大型网站的架构设计&quot; id=&quot;markdown-toc-9-深入浅出大型网站的架构设计&quot;&gt;9. 深入浅出大型网站的架构设计&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#91-高性能架构设计&quot; id=&quot;markdown-toc-91-高性能架构设计&quot;&gt;9.1 高性能架构设计&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#92-高可用架构设计&quot; id=&quot;markdown-toc-92-高可用架构设计&quot;&gt;9.2 高可用架构设计&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#93-伸缩性架构设计&quot; id=&quot;markdown-toc-93-伸缩性架构设计&quot;&gt;9.3 伸缩性架构设计&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#10-参考资料&quot; id=&quot;markdown-toc-10-参考资料&quot;&gt;10 参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-test-基础&quot;&gt;1. Test 基础&lt;/h2&gt;

&lt;p&gt;“测试不受重视”到”测试和开发同等重要”。
Googele等一线互联网巨头主导”去QE(Quality Engineer)， 开发自己测试”的全新模式。&lt;/p&gt;

&lt;p&gt;趋势:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;“自动化测试为辅”到”自动化测试为主”;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;产品发布从”月”为单位到现在”天”甚至”小时”， 留给测试的时间不多。因此要掌握设计开发测试基础架构的关键技术，特别是&lt;strong&gt;高并发测试执行基础架构&lt;/strong&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;系统性思考如何将数据的准备工具化，服务化，最终实现平台化。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;测试方式(用户登录为例):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;等价类划分(已注册用户，用户名密码对； 已注册用户，用户名对，密码错； 已注册用户，用户名错，密码对)；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;边界值分析；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;显示功能性测试(已注册用户, 用户名密码对是否可正确登录)；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;隐式功能性测试(用户名密码是否在后台加密， 登录网络请求是否加密)；&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;什么是好的测试用例？ ”好的“测试用例是一个玩呗的几何，它能够覆盖所有等价类以及各种边界值，而更能否发现缺陷无关。如果把测试软件看做一个池塘，软件缺陷就是池塘中的鱼，建立测试用例集的过程就是在编织一张渔网。”好的“测试用例集就是一张能够覆盖整个池塘的大渔网，只要池塘里有鱼，就一定能捞上来。如果渔网本身是完整且合格的，那么捞不到鱼，就证明池塘中没有鱼，而渔网的好坏与池塘中是否有鱼无关。所以好的测试用例必须是完备的等价类的集合(可通过&lt;strong&gt;等价类划分&lt;/strong&gt;，&lt;strong&gt;边界值分析&lt;/strong&gt;和&lt;strong&gt;错误推测&lt;/strong&gt;三种方法实现)。&lt;/p&gt;

&lt;p&gt;以考试成绩(0 - 100 int)输入项为例(60分及格)&lt;/p&gt;

&lt;p&gt;等价类：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;有效等价类 1: 0~59之间的任意整数;&lt;/li&gt;
  &lt;li&gt;有效等价类 2: 60~100之间的任意整数;&lt;/li&gt;
  &lt;li&gt;无效等价类 1: 小于0的负数;&lt;/li&gt;
  &lt;li&gt;无效等价类 2: 大于100的整数;&lt;/li&gt;
  &lt;li&gt;无效等价类 3: 0~100之间的任何浮点数;&lt;/li&gt;
  &lt;li&gt;无效等价类 4: 其他任意非数字字符。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;边界值: -1, 0, 1, 59, 60, 61, 99, 100, 101&lt;/p&gt;

&lt;h3 id=&quot;11-自动化测试&quot;&gt;1.1 自动化测试&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;自动化测试： 把人堆软件的测试工作，转化为由代码执行测试。其本质是写一段代码去测试另一段代码，所以实现自动化测试用例本身不属于开发工作，需要投入大量的时间和精力，并且已经开发完成的用例还必须随着被测对象的改变而不断更新，你还需要为此付出维护测试用例的成本。当你发现自动化测试用例的维护成本高于其节省的测试成本时，自动化测试就失去了价值与意义，你也就需要在是否使用自动化测试上权衡取舍了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;优势&lt;/p&gt;

&lt;p&gt;劣势
1 自动化测试远比手动测试脆弱，无法应对被测系统的变化，业界一直有句玩笑话”开发手一抖，自动化测试忙一宿”，这也从侧面反映了自动化测试用例的维护成本居高不下的事实。其根本原因在于自动化测试用例是hard coded，不具备任何”智能”应对变化。&lt;/p&gt;

&lt;p&gt;2 自动化测试用例的开发工作量远大于单次的手工测试。&lt;/p&gt;

&lt;h3 id=&quot;12-test-coverage&quot;&gt;1.2 Test Coverage&lt;/h3&gt;

&lt;p&gt;统计代码覆盖率的根本目的是找出潜在的遗漏测试用例，并有针对性的进行补充，同时还可以识别出代码中那些由于需求变更等原因造成的不可达的废弃代码。&lt;/p&gt;

&lt;p&gt;高的代码覆盖率不一定能保证软件的质量，但是低的代码覆盖率一定不能保证软件的质量。&lt;/p&gt;

&lt;p&gt;实现代码覆盖率的统计，最基本的方法就是注入(Instrumentation)。简单地说，注入就是在被测代码中自动插入用于覆盖率统计的探针(Probe)代码，并保证插入的探针代码不会给原代码带来任何影响。&lt;/p&gt;

&lt;h3 id=&quot;13-software-defect-report软件缺陷报告&quot;&gt;1.3 Software Defect Report(软件缺陷报告)&lt;/h3&gt;

&lt;h3 id=&quot;14-tdd&quot;&gt;1.4 TDD&lt;/h3&gt;

&lt;p&gt;TDD：先根据需求写测试用例，然后开发。TDD优点:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;保证开发功能一定是符合实际需求的；&lt;/li&gt;
  &lt;li&gt;测试用例即文档, 可以将测试用例直接输出为文档，例如JavaDoc.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;2-gui自动化测试&quot;&gt;2. GUI自动化测试&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;传统Web浏览器的GUI测试，业内主流的开源方案采用Selenium, 商业方案采用Micro Focus的UFT(前身是HP的QTP); 前端网站性能测试WebPagetes；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对于移动端的原生应用，通常采用主流的Appium, 它对iOS环境集成了XCUITest, 对Android环境集成了UIAutomator和Espresso.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;21-web&quot;&gt;2.1 Web&lt;/h3&gt;

&lt;h4 id=&quot;211-脚本与数据的解耦--page-object模型&quot;&gt;2.1.1 脚本与数据的解耦 + Page Object模型&lt;/h4&gt;

&lt;h4 id=&quot;212-gui自动化过程中的测试数据&quot;&gt;2.1.2 GUI自动化过程中的测试数据&lt;/h4&gt;

&lt;h4 id=&quot;213-page-code-gen--data-gen--headless&quot;&gt;2.1.3 Page Code Gen + Data Gen + Headless&lt;/h4&gt;

&lt;h4 id=&quot;214-gui测试稳定性&quot;&gt;2.1.4 GUI测试稳定性&lt;/h4&gt;

&lt;h4 id=&quot;215-gui测试报告&quot;&gt;2.1.5 GUI测试报告&lt;/h4&gt;

&lt;h4 id=&quot;216-gui自动化测试策略&quot;&gt;2.1.6 GUI自动化测试策略&lt;/h4&gt;

&lt;h3 id=&quot;22-移动端&quot;&gt;2.2 移动端&lt;/h3&gt;

&lt;h4 id=&quot;221-移动应用测试方法与思路&quot;&gt;2.2.1 移动应用测试方法与思路&lt;/h4&gt;

&lt;h4 id=&quot;222-appium&quot;&gt;2.2.2 Appium&lt;/h4&gt;

&lt;h2 id=&quot;3-api自动化测试&quot;&gt;3. API自动化测试&lt;/h2&gt;

&lt;h3 id=&quot;31-常用api测试工具简介&quot;&gt;3.1 常用API测试工具简介&lt;/h3&gt;

&lt;p&gt;cURL 和 Postman&lt;/p&gt;

&lt;h3 id=&quot;32-微服务模式下api测试&quot;&gt;3.2 微服务模式下API测试&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;测试脚手架代码的自动化生成；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;部分测试输入数据的自动生成；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Response 验证的自动化;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;基于SoapUI或者Postman的自动化脚本生成&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;4-代码级测试&quot;&gt;4. 代码级测试&lt;/h2&gt;

&lt;h3 id=&quot;41-代码级测试的基本理念与方法&quot;&gt;4.1 代码级测试的基本理念与方法&lt;/h3&gt;

&lt;p&gt;静态方法指不运行代码(通常是linter)，动态方法指运行代码。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;人工静态方法，本质上通过开发人员代码走查(Code Review)、结对编程(Pair Programming)、同行评审(Peer Review)来完成的，理论上可以发现所有的代码错误，但也因为其对“测试人员”的过渡依赖，局限性非常大；&lt;/li&gt;
  &lt;li&gt;自动静态方法(linter)，主要的手段是代码静态扫描，可以发现语法特征错误、边界行为特征错误和经验特征错误这三类“有特征”的错误；&lt;/li&gt;
  &lt;li&gt;人工动态方法，就是传统意义上的单元测试，是发现算法错误和部分算法错误的最佳方式；&lt;/li&gt;
  &lt;li&gt;自动动态方法，其实就是自动化的边界测试，主要覆盖边界行为特征错误。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;42-静态方法&quot;&gt;4.2 静态方法&lt;/h3&gt;
&lt;p&gt;linter&lt;/p&gt;

&lt;h3 id=&quot;43-动态方法&quot;&gt;4.3 动态方法&lt;/h3&gt;
&lt;h4 id=&quot;431-unit-test&quot;&gt;4.3.1 Unit Test&lt;/h4&gt;

&lt;p&gt;驱动代码 -&amp;gt; 被测试函数 –&amp;gt; 桩代码/Mock代码(两者区别请见&lt;a href=&quot;https://martinfowler.com/articles/mocksArentStubs.html&quot;&gt;《Mock 代码不是桩代码》（Mocks Aren’t Stubs)&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;脚手架代码生成的自动化;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;部分测试输入数据的自动化生成;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;自动桩代码的生成;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;被测代码的自动化静态分析;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;测试覆盖率的自动统计与分析。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;432-integrated-test&quot;&gt;4.3.2 Integrated Test&lt;/h4&gt;

&lt;p&gt;从测试用例设计和测试代码结构来看，代码级集成测试和单元测试非常相似，它们都是对被测试函数以不同的输入参数组合进行调用并验证结果，只不过代码级集成测试的关注点，更多的是软件模块之间的接口调用和数据传递。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;集成测试与单元测试的最大区别只是，集成测试中被测试函数的内部调用的其他函数必须是真实的，不允许使用桩代码代替，而单元测试中允许使用桩代码来模拟内部调用的其他函数&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&quot;5-性能测试&quot;&gt;5. 性能测试&lt;/h2&gt;

&lt;h3 id=&quot;51-测试的基本方法与应用领域&quot;&gt;5.1 测试的基本方法与应用领域&lt;/h3&gt;

&lt;p&gt;根据在实际项目中的实践经验，我把常用的性能测试方法分为七大类：后端性能测试（Back-end Performance Test）、前端性能测试（Front-end Performance Test）、代码级性能测试（Code-level Performance Test）、压力测试（Load/Stress Test）、配置测试（Configuration Test）、并发测试（Concurrence Test），以及可靠性测试（Reliability Test）。接下来，我将详细为你介绍每一种测试方法。&lt;/p&gt;

&lt;h3 id=&quot;52-前端性能测试工具原理与行业常用工具简介&quot;&gt;5.2 前端性能测试工具原理与行业常用工具简介&lt;/h3&gt;

&lt;p&gt;WebPagetest&lt;/p&gt;

&lt;p&gt;极客时间版权所有: https://time.geekbang.org/column/article/17935&lt;/p&gt;

&lt;h3 id=&quot;53-后端性能测试工具原理与行业常用工具简介&quot;&gt;5.3 后端性能测试工具原理与行业常用工具简介&lt;/h3&gt;

&lt;p&gt;api性能测试(LoadRunner JMeter).&lt;/p&gt;

&lt;p class=&quot;img_middle_hg&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/-23_Test/2018-04-01-Test Foundation/性能测试.png&quot; alt=&quot;regular expression&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-测试数据准备&quot;&gt;6. 测试数据准备&lt;/h2&gt;

&lt;h3 id=&quot;61-build-pattern&quot;&gt;6.1 Build Pattern&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;// old way of prepare settings as test data&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shouldReceiveNotification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shouldDisplayTransactionAmount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Settings&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shouldReceiveNotification&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shouldDisplayTransactionAmount&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;withShouldReceiveNotification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shoudlReceive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shouldReceiveNotification&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shoudlReceive&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;withShouldDisplayTransactionAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shouldDisplay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shouldDisplayTransactionAmount&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shouldDisplay&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// use default value&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;withShouldReceiveNotification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// just customized this field, all the rest are using default values.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;62-统一测试数据平台&quot;&gt;6.2 统一测试数据平台&lt;/h3&gt;

&lt;h2 id=&quot;7-测试基础架构&quot;&gt;7. 测试基础架构&lt;/h2&gt;

&lt;h3 id=&quot;71-selenium-grid-for-gui&quot;&gt;7.1 Selenium Grid for GUI&lt;/h3&gt;
&lt;p&gt;GUI测试架构(Selenium Grid): 从本质上讲，Selenium Grid 是一种可以并发执行 GUI 测试用例的测试执行机的集群环境，采用的是 HUB 和 Node 模式。目前 Selenium Grid 已经有 Docker 的版本了，你有没有考虑过可以在云端，比如 PCF、GCP、AWS 上搭建 Selenium Grid 呢？在我看来，这将是未来的主流方案。&lt;/p&gt;

&lt;h3 id=&quot;72-测试执行环境的架构设计&quot;&gt;7.2 测试执行环境的架构设计&lt;/h3&gt;
&lt;p&gt;从广义上讲，测试执行环境除了包括测试执行机以外，还包括测试执行机的维护、集群的容量规划、测试发起的控制、测试用例的组织以及测试用例的版本控制等等。这也就是我要和你的测试基础架构的定义。&lt;/p&gt;

&lt;h3 id=&quot;73-大型全球化电商的测试基础架构设计&quot;&gt;7.3 大型全球化电商的测试基础架构设计&lt;/h3&gt;

&lt;p class=&quot;img_middle_hg&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/-23_Test/2018-04-01-Test Foundation/完整的测试架构.png&quot; alt=&quot;regular expression&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;8-测试新技术&quot;&gt;8. 测试新技术&lt;/h2&gt;

&lt;h3 id=&quot;81-探索式测试&quot;&gt;8.1 探索式测试&lt;/h3&gt;

&lt;h3 id=&quot;82-精准测试&quot;&gt;8.2 精准测试&lt;/h3&gt;

&lt;h3 id=&quot;83-渗透测试&quot;&gt;8.3 渗透测试&lt;/h3&gt;

&lt;h3 id=&quot;84-基于模型的测试&quot;&gt;8.4 基于模型的测试&lt;/h3&gt;

&lt;h2 id=&quot;9-深入浅出大型网站的架构设计&quot;&gt;9. 深入浅出大型网站的架构设计&lt;/h2&gt;

&lt;h3 id=&quot;91-高性能架构设计&quot;&gt;9.1 高性能架构设计&lt;/h3&gt;

&lt;h3 id=&quot;92-高可用架构设计&quot;&gt;9.2 高可用架构设计&lt;/h3&gt;

&lt;h3 id=&quot;93-伸缩性架构设计&quot;&gt;9.3 伸缩性架构设计&lt;/h3&gt;

&lt;h2 id=&quot;10-参考资料&quot;&gt;10 参考资料&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://time.geekbang.org/column/103&quot;&gt;《软件测试52讲》&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://facebook.github.io/jest/docs/en/getting-started.html&quot;&gt;《Jest Documentation》&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Shunmian</name><email>shunmian@gmail.com</email></author><category term="Vim" /><summary type="html">目录</summary></entry><entry><title type="html">Vim</title><link href="http://localhost:4000/-20%20text%20editor/2017/10/01/Vim.html" rel="alternate" type="text/html" title="Vim" /><published>2017-10-01T00:00:00+08:00</published><updated>2017-10-01T00:00:00+08:00</updated><id>http://localhost:4000/-20%20text%20editor/2017/10/01/Vim</id><content type="html" xml:base="http://localhost:4000/-20%20text%20editor/2017/10/01/Vim.html">&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-vim-总结&quot; id=&quot;markdown-toc-1-vim-总结&quot;&gt;1. Vim 总结&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-参考资料&quot; id=&quot;markdown-toc-2-参考资料&quot;&gt;2 参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-vim-总结&quot;&gt;1. Vim 总结&lt;/h2&gt;

&lt;p class=&quot;img_middle_lg&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/20_TextEditor/2017-10-01-Vim/vim-cheat-sheet-advanced.png&quot; alt=&quot;Vim summary&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-参考资料&quot;&gt;2 参考资料&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/vim-commands-cheat-sheet/&quot;&gt;《Vim Masterclass》&lt;/a&gt;;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Shunmian</name><email>shunmian@gmail.com</email></author><category term="Vim" /><summary type="html">目录</summary></entry><entry><title type="html">AWS Associate Architect</title><link href="http://localhost:4000/-21%20aws/2017/10/01/AWS-Associate-Architect.html" rel="alternate" type="text/html" title="AWS Associate Architect" /><published>2017-10-01T00:00:00+08:00</published><updated>2017-10-01T00:00:00+08:00</updated><id>http://localhost:4000/-21%20aws/2017/10/01/AWS%20Associate%20Architect</id><content type="html" xml:base="http://localhost:4000/-21%20aws/2017/10/01/AWS-Associate-Architect.html">&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#-1-aws-cli&quot; id=&quot;markdown-toc--1-aws-cli&quot;&gt;-1 AWS CLI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#0-iam&quot; id=&quot;markdown-toc-0-iam&quot;&gt;0 IAM&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#013-role&quot; id=&quot;markdown-toc-013-role&quot;&gt;0.1.3 Role&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#0e-exam-questions&quot; id=&quot;markdown-toc-0e-exam-questions&quot;&gt;0.E Exam Questions&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#1-storage&quot; id=&quot;markdown-toc-1-storage&quot;&gt;1. Storage&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#12-s3&quot; id=&quot;markdown-toc-12-s3&quot;&gt;1.2 S3&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#120-what&quot; id=&quot;markdown-toc-120-what&quot;&gt;1.2.0 What&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#121-versioning&quot; id=&quot;markdown-toc-121-versioning&quot;&gt;1.2.1 Versioning&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#122-cross-region-replication&quot; id=&quot;markdown-toc-122-cross-region-replication&quot;&gt;1.2.2 Cross region replication&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#123-lifecyle-management-s3-ia--glacier-lab&quot; id=&quot;markdown-toc-123-lifecyle-management-s3-ia--glacier-lab&quot;&gt;1.2.3 Lifecyle Management, S3-IA &amp;amp; Glacier lab&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#124-securing-buckets&quot; id=&quot;markdown-toc-124-securing-buckets&quot;&gt;1.2.4 Securing buckets&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#125-s3-transfer-acceleration&quot; id=&quot;markdown-toc-125-s3-transfer-acceleration&quot;&gt;1.2.5 S3 Transfer Acceleration&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#126-host-static-website-in-s3&quot; id=&quot;markdown-toc-126-host-static-website-in-s3&quot;&gt;1.2.6 Host Static Website in S3&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#13-cloudfront&quot; id=&quot;markdown-toc-13-cloudfront&quot;&gt;1.3 CloudFront&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#131-what-is-cdn&quot; id=&quot;markdown-toc-131-what-is-cdn&quot;&gt;1.3.1 What is CDN&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#14-storage-gateway&quot; id=&quot;markdown-toc-14-storage-gateway&quot;&gt;1.4 Storage Gateway&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#141-what&quot; id=&quot;markdown-toc-141-what&quot;&gt;1.4.1 What&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#15-snowball&quot; id=&quot;markdown-toc-15-snowball&quot;&gt;1.5 Snowball&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#151-what&quot; id=&quot;markdown-toc-151-what&quot;&gt;1.5.1 What&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#16-elastic-block-storgage-ebs&quot; id=&quot;markdown-toc-16-elastic-block-storgage-ebs&quot;&gt;1.6 Elastic Block Storgage (EBS)&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#161-ebs-volume&quot; id=&quot;markdown-toc-161-ebs-volume&quot;&gt;1.6.1 EBS Volume&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#17-summary&quot; id=&quot;markdown-toc-17-summary&quot;&gt;1.7 Summary&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#1e-exam-questions&quot; id=&quot;markdown-toc-1e-exam-questions&quot;&gt;1.E Exam Questions&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-computing&quot; id=&quot;markdown-toc-2-computing&quot;&gt;2 Computing&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-ec2&quot; id=&quot;markdown-toc-21-ec2&quot;&gt;2.1 EC2&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#211-what&quot; id=&quot;markdown-toc-211-what&quot;&gt;2.1.1 What&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#212-launch-ec2-instance--ssh-to-it&quot; id=&quot;markdown-toc-212-launch-ec2-instance--ssh-to-it&quot;&gt;2.1.2 Launch EC2 instance &amp;amp; SSH to it&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#213-security-group-basics&quot; id=&quot;markdown-toc-213-security-group-basics&quot;&gt;2.1.3 Security Group Basics&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#215-elastic-load-balancer&quot; id=&quot;markdown-toc-215-elastic-load-balancer&quot;&gt;2.1.5 Elastic Load Balancer&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#216-using-bash-script-to-pre-launch-the-ec2-instance&quot; id=&quot;markdown-toc-216-using-bash-script-to-pre-launch-the-ec2-instance&quot;&gt;2.1.6 Using bash script to pre-launch the ec2 instance&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#217-autoscaling&quot; id=&quot;markdown-toc-217-autoscaling&quot;&gt;2.1.7 Autoscaling&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#217-ec2-placment-groups&quot; id=&quot;markdown-toc-217-ec2-placment-groups&quot;&gt;2.1.7 EC2 Placment Groups&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#218-efs&quot; id=&quot;markdown-toc-218-efs&quot;&gt;2.1.8 EFS&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-lambda&quot; id=&quot;markdown-toc-22-lambda&quot;&gt;2.2 Lambda&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2e-exam-questions&quot; id=&quot;markdown-toc-2e-exam-questions&quot;&gt;2.E Exam Questions&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-monitoring&quot; id=&quot;markdown-toc-3-monitoring&quot;&gt;3 Monitoring&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-cloudwatch&quot; id=&quot;markdown-toc-31-cloudwatch&quot;&gt;3.1 CloudWatch&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-network&quot; id=&quot;markdown-toc-4-network&quot;&gt;4 Network&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#41-route53&quot; id=&quot;markdown-toc-41-route53&quot;&gt;4.1 Route53&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#411-theory&quot; id=&quot;markdown-toc-411-theory&quot;&gt;4.1.1 Theory&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#412-different-routing&quot; id=&quot;markdown-toc-412-different-routing&quot;&gt;4.1.2 Different Routing&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#413-exam-tips&quot; id=&quot;markdown-toc-413-exam-tips&quot;&gt;4.1.3 Exam tips&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#42-vpc&quot; id=&quot;markdown-toc-42-vpc&quot;&gt;4.2 VPC&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#42-subnet&quot; id=&quot;markdown-toc-42-subnet&quot;&gt;4.2 Subnet&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#43-nat-instance--nat-gateway&quot; id=&quot;markdown-toc-43-nat-instance--nat-gateway&quot;&gt;4.3 NAT instance &amp;amp; NAT Gateway&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#44-network-access-control-list&quot; id=&quot;markdown-toc-44-network-access-control-list&quot;&gt;4.4 Network Access Control List&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#45-security-group&quot; id=&quot;markdown-toc-45-security-group&quot;&gt;4.5 Security Group&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#48-vpc-flow-logs&quot; id=&quot;markdown-toc-48-vpc-flow-logs&quot;&gt;4.8 VPC Flow Logs&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#48-vpc-endpoint&quot; id=&quot;markdown-toc-48-vpc-endpoint&quot;&gt;4.8 VPC Endpoint&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#49-summary&quot; id=&quot;markdown-toc-49-summary&quot;&gt;4.9 Summary&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4e-example-questions&quot; id=&quot;markdown-toc-4e-example-questions&quot;&gt;4.E Example Questions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4e-exam-questions&quot; id=&quot;markdown-toc-4e-exam-questions&quot;&gt;4.E Exam Questions&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-database&quot; id=&quot;markdown-toc-5-database&quot;&gt;5 Database&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#51-disk&quot; id=&quot;markdown-toc-51-disk&quot;&gt;5.1 Disk&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#511-sql---oltp&quot; id=&quot;markdown-toc-511-sql---oltp&quot;&gt;5.1.1 Sql - OLTP&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#5115-aurora&quot; id=&quot;markdown-toc-5115-aurora&quot;&gt;5.1.1.5 Aurora&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#512-nosql&quot; id=&quot;markdown-toc-512-nosql&quot;&gt;5.1.2 NoSql&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#5121-dynamodb&quot; id=&quot;markdown-toc-5121-dynamodb&quot;&gt;5.1.2.1 DynamoDB&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#52-redshift---olap&quot; id=&quot;markdown-toc-52-redshift---olap&quot;&gt;5.2 RedShift - OLAP&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#53-in-memory-elasticache&quot; id=&quot;markdown-toc-53-in-memory-elasticache&quot;&gt;5.3 In memory Elasticache&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#531-memcached&quot; id=&quot;markdown-toc-531-memcached&quot;&gt;5.3.1 Memcached&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#532-redis&quot; id=&quot;markdown-toc-532-redis&quot;&gt;5.3.2 Redis&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#54-launch-rds-instance-and-connect-to-it-via-ec2-server&quot; id=&quot;markdown-toc-54-launch-rds-instance-and-connect-to-it-via-ec2-server&quot;&gt;5.4 Launch RDS instance and connect to it via EC2 server&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#55-back-ups-multi-az--read-replicas&quot; id=&quot;markdown-toc-55-back-ups-multi-az--read-replicas&quot;&gt;5.5 Back Ups, Multi-AZ &amp;amp; Read Replicas&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5e-example-questions&quot; id=&quot;markdown-toc-5e-example-questions&quot;&gt;5.E Example Questions&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6-application-service&quot; id=&quot;markdown-toc-6-application-service&quot;&gt;6 Application Service&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#61-sqs&quot; id=&quot;markdown-toc-61-sqs&quot;&gt;6.1 SQS&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#62-swf&quot; id=&quot;markdown-toc-62-swf&quot;&gt;6.2 SWF&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#63-sns&quot; id=&quot;markdown-toc-63-sns&quot;&gt;6.3 SNS&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#64-elastic-transcoder&quot; id=&quot;markdown-toc-64-elastic-transcoder&quot;&gt;6.4 Elastic Transcoder&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#65-api-gateway&quot; id=&quot;markdown-toc-65-api-gateway&quot;&gt;6.5 API Gateway&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#66-kinesis&quot; id=&quot;markdown-toc-66-kinesis&quot;&gt;6.6 Kinesis&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#6e-exam-questions&quot; id=&quot;markdown-toc-6e-exam-questions&quot;&gt;6.E Exam Questions&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-the-well-architected-framework&quot; id=&quot;markdown-toc-7-the-well-architected-framework&quot;&gt;7 The Well Architected Framework&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#71-resources&quot; id=&quot;markdown-toc-71-resources&quot;&gt;7.1 Resources&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#72-5-pillars&quot; id=&quot;markdown-toc-72-5-pillars&quot;&gt;7.2 5 Pillars&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#720-general&quot; id=&quot;markdown-toc-720-general&quot;&gt;7.2.0 General&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#721-security&quot; id=&quot;markdown-toc-721-security&quot;&gt;7.2.1 Security&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#722-reliability&quot; id=&quot;markdown-toc-722-reliability&quot;&gt;7.2.2 Reliability&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#723-performance-efficiency&quot; id=&quot;markdown-toc-723-performance-efficiency&quot;&gt;7.2.3 Performance Efficiency&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#724-cost-optimization&quot; id=&quot;markdown-toc-724-cost-optimization&quot;&gt;7.2.4 Cost Optimization&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#725-operational-excellence&quot; id=&quot;markdown-toc-725-operational-excellence&quot;&gt;7.2.5 Operational Excellence&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-cloud-formation&quot; id=&quot;markdown-toc-7-cloud-formation&quot;&gt;7 Cloud Formation&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#70-infrastructure-as-code&quot; id=&quot;markdown-toc-70-infrastructure-as-code&quot;&gt;7.0 Infrastructure as Code&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#701-template&quot; id=&quot;markdown-toc-701-template&quot;&gt;7.0.1 Template&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#702-stack&quot; id=&quot;markdown-toc-702-stack&quot;&gt;7.0.2 Stack&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#703-change-set&quot; id=&quot;markdown-toc-703-change-set&quot;&gt;7.03 Change Set&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#71-intrinsic-functions&quot; id=&quot;markdown-toc-71-intrinsic-functions&quot;&gt;7.1 Intrinsic Functions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#72-multiple-resources&quot; id=&quot;markdown-toc-72-multiple-resources&quot;&gt;7.2 Multiple Resources&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#73-pseudo-parameters&quot; id=&quot;markdown-toc-73-pseudo-parameters&quot;&gt;7.3 Pseudo Parameters&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#74-mappings&quot; id=&quot;markdown-toc-74-mappings&quot;&gt;7.4 Mappings&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#75-input-parameters&quot; id=&quot;markdown-toc-75-input-parameters&quot;&gt;7.5 Input Parameters&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#76-outputs&quot; id=&quot;markdown-toc-76-outputs&quot;&gt;7.6 Outputs&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#77-change-sets&quot; id=&quot;markdown-toc-77-change-sets&quot;&gt;7.7 Change sets&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#78-whats-next&quot; id=&quot;markdown-toc-78-whats-next&quot;&gt;7.8 What’s next&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#8-additional-exam-tips-2018&quot; id=&quot;markdown-toc-8-additional-exam-tips-2018&quot;&gt;8 Additional Exam Tips 2018&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#81-consolidate-billing&quot; id=&quot;markdown-toc-81-consolidate-billing&quot;&gt;8.1 Consolidate Billing&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#82-aws-organizations&quot; id=&quot;markdown-toc-82-aws-organizations&quot;&gt;8.2 AWS Organizations&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#83-cross-account-access&quot; id=&quot;markdown-toc-83-cross-account-access&quot;&gt;8.3 Cross Account Access&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#84-resource-groups--tagging&quot; id=&quot;markdown-toc-84-resource-groups--tagging&quot;&gt;8.4 Resource Groups &amp;amp; Tagging&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#85-vpc-peering&quot; id=&quot;markdown-toc-85-vpc-peering&quot;&gt;8.5 VPC Peering&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#86-direct-connect&quot; id=&quot;markdown-toc-86-direct-connect&quot;&gt;8.6 Direct Connect&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#87-security-token-service-sts&quot; id=&quot;markdown-toc-87-security-token-service-sts&quot;&gt;8.7 Security Token Service (STS)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#88-active-directory-integration&quot; id=&quot;markdown-toc-88-active-directory-integration&quot;&gt;8.8 Active Directory Integration&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#89-aws-workspaces&quot; id=&quot;markdown-toc-89-aws-workspaces&quot;&gt;8.9 AWS Workspaces&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#810-elastic-container-service-ecs&quot; id=&quot;markdown-toc-810-elastic-container-service-ecs&quot;&gt;8.10 Elastic Container Service (ECS)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#e&quot; id=&quot;markdown-toc-e&quot;&gt;E&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#udemy-exam-set&quot; id=&quot;markdown-toc-udemy-exam-set&quot;&gt;udemy exam set&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#s1-26&quot; id=&quot;markdown-toc-s1-26&quot;&gt;S1 (26)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#s2-36&quot; id=&quot;markdown-toc-s2-36&quot;&gt;S2 (36)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#s6&quot; id=&quot;markdown-toc-s6&quot;&gt;S6&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-参考资料&quot; id=&quot;markdown-toc-2-参考资料&quot;&gt;2 参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;-1-aws-cli&quot;&gt;-1 AWS CLI&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;aws configure&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;aws s3 help&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;aws s3 ls&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;0-iam&quot;&gt;0 IAM&lt;/h2&gt;

&lt;h3 id=&quot;013-role&quot;&gt;0.1.3 Role&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Role is used to avoid using user credential in resources such as EC2, which is not secure if it is shared across multiple EC2 and one EC2 leakage will needs you to invalidate that user and create a new user credential. By assign role to EC2, you can use &lt;code&gt;aws s3 ls&lt;/code&gt; without &lt;code&gt;aws config&lt;/code&gt; to enter the user credentials.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Role is global: you cannot create a role for a specific region.&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;One can attach a role to a RUNNING EC2 instance&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;0e-exam-questions&quot;&gt;0.E Exam Questions&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Power User Access: Provides full access to AWS services and resources, but does not allow management of Users and groups.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Root User Access: Power user access + management of users and groups, which is called administrator access&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Users, Policy, Roles all are global&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;By default, when you create a new user in the IAM console, it has no access to all AWS services.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-storage&quot;&gt;1. Storage&lt;/h2&gt;

&lt;h3 id=&quot;12-s3&quot;&gt;1.2 S3&lt;/h3&gt;

&lt;h4 id=&quot;120-what&quot;&gt;1.2.0 What&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;object based, not for install an operation system (which should uses block storage).&lt;/li&gt;
  &lt;li&gt;from 0 Bytest to 5TB.&lt;/li&gt;
  &lt;li&gt;unlimited storage.&lt;/li&gt;
  &lt;li&gt;stored in Buckets.&lt;/li&gt;
  &lt;li&gt;S3 is a universal namespace, that is, names must be unique globally.&lt;/li&gt;
  &lt;li&gt;bucket url formats: &lt;code&gt;https://s3-eu-west-1.amazongaws.com/acloudguru&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;read after Write consistency for PUTS of new objects.&lt;/li&gt;
  &lt;li&gt;eventual consistency for overwrite PUTS and DELETES (can take some time to propagate).&lt;/li&gt;
  &lt;li&gt;S3 storgae tiers
    &lt;ul&gt;
      &lt;li&gt;S3 standard: 99.99% availability, 99.999999999% durability&lt;/li&gt;
      &lt;li&gt;S3 RRS (Reduced Redundancy Storage) for noncritical  reproducible data that can be stored with less redundancy that the S3 standard.&lt;/li&gt;
      &lt;li&gt;S3-IA: (Infrequently Accessed), lower fee than S3, but you are charged a retrieval fee.&lt;/li&gt;
      &lt;li&gt;S3 One Zone - IA: the same as S3-IA except exist only in one availabbility zone.&lt;/li&gt;
      &lt;li&gt;Glacier: very cheap, but used for archival only. Expedidited, Standard or Build. A standard retrival time takes 3 - 5 hours.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;key value store
    &lt;ul&gt;
      &lt;li&gt;Key&lt;/li&gt;
      &lt;li&gt;Value&lt;/li&gt;
      &lt;li&gt;Version ID&lt;/li&gt;
      &lt;li&gt;Metadata&lt;/li&gt;
      &lt;li&gt;Access Control List&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;121-versioning&quot;&gt;1.2.1 Versioning&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;stores all versions of an object (including all writes and even if you delete an object)&lt;/li&gt;
  &lt;li&gt;great backup tool.&lt;/li&gt;
  &lt;li&gt;once enabled, version cannot be disabled, only suspended.&lt;/li&gt;
  &lt;li&gt;Integrates with Lifecycle rules&lt;/li&gt;
  &lt;li&gt;Versioning’s MFA Delete capability, which use multi-factor authentication, can be used to provide an additional layer of secrurity.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;122-cross-region-replication&quot;&gt;1.2.2 Cross region replication&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;versioning must be enabled on both the source and estination buckets.&lt;/li&gt;
  &lt;li&gt;Regions must be unique.&lt;/li&gt;
  &lt;li&gt;Files in an existing bucket are not replicated automatically. All subsequent updated files will be replicated automatically.&lt;/li&gt;
  &lt;li&gt;You cannot replicate to multiple buckets or use daisy chaining(??).&lt;/li&gt;
  &lt;li&gt;Delete markers are NOT replicated.&lt;/li&gt;
  &lt;li&gt;Deleting individual versions or delete markers will not be replicated.&lt;/li&gt;
  &lt;li&gt;Understand what Crosss Region Replication is at a high level.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;123-lifecyle-management-s3-ia--glacier-lab&quot;&gt;1.2.3 Lifecyle Management, S3-IA &amp;amp; Glacier lab&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;can be used in conjunction with versioning&lt;/li&gt;
  &lt;li&gt;can be applied to current versions and previous versions&lt;/li&gt;
  &lt;li&gt;Following actions can now be done:
    &lt;ul&gt;
      &lt;li&gt;transaction to the Standard-Infrequent Access Storage Class (30 days after the creation date)&lt;/li&gt;
      &lt;li&gt;archive to the Glacier Storage Class(30 days after IA, if relevant)&lt;/li&gt;
      &lt;li&gt;permanent delete&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;124-securing-buckets&quot;&gt;1.2.4 Securing buckets&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;By default, all newly created buckets are PRIVATE;&lt;/li&gt;
  &lt;li&gt;You can setup access control to your buckets using;
    &lt;ul&gt;
      &lt;li&gt;Bucket Polocies (apply to whole Bucket);&lt;/li&gt;
      &lt;li&gt;Access Control List (apply to specific file within the bucket)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;S3 Buckets can be configured to create access logs which log all requests made to the S3 bucket. This can be done to another bucket.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Encryption
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;In Transit: SSL/TLS&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;At Rest&lt;/p&gt;
        &lt;ul&gt;
          &lt;li&gt;Server Side Encryption
            &lt;ul&gt;
              &lt;li&gt;S3 Managed Keys - SSE-S3&lt;/li&gt;
              &lt;li&gt;AWS Key Management Service, Managed Keys - SSE-KMS&lt;/li&gt;
              &lt;li&gt;Server Side Encryption With Customer Provided Keys - SSE-C&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Client Side Encryption&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;125-s3-transfer-acceleration&quot;&gt;1.2.5 S3 Transfer Acceleration&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;S3 Transfer Acceleration utilises the CloudFront Edge Network to accelerate your uploads to S3. Instead of uploading directly to your S3 buckets, you can use a distinct URL to upload directly to an edge location which will then transfer that file to S3.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;126-host-static-website-in-s3&quot;&gt;1.2.6 Host Static Website in S3&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;You can host static website in S3. Websites that require database connections such as Wordpress etc cannot be hosted on S3.&lt;/li&gt;
  &lt;li&gt;S3 Scales automatically to meet your demand. Many enterprises will put static websites on S3 when they think there is going to be a large number of requests.&lt;/li&gt;
  &lt;li&gt;You should use bucket policies to make entire S3 buckets public for static website access.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;13-cloudfront&quot;&gt;1.3 CloudFront&lt;/h3&gt;

&lt;h4 id=&quot;131-what-is-cdn&quot;&gt;1.3.1 What is CDN&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A content delivery network (CDN) is a system of distributed servers (network) that deliver webpages and other web content to a user based on the geographic locations of the user, the origin of the webpage and a content delivery server.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Edge Location - This is the location where content will be cached. This is separate to an AWS Region/AZ.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Origin - This is the origin of the files that the CDN will distribute to Edge Location. This can be either an S3 Bucket, an EC2 instance, an Elastic Load Balancer or Route53.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Distribution, consists of a collection of Edge Location.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CloudFront can be used to deliver your entire website using a global network of edge locations. Requests for your content will be routed to the nearest edge location.CloudFront is optimized with S3, EC2, Route53, and Elastic Load Balancer.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Web Distribution - Typlically used for websites&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;RTMP - Used for Media Streaming&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Edge locations are not just READ only, you can write to them too (ie put an object on to them).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Objects are cacehd for the life of the TTL (Time To Live).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can clear cached objects, but you will be charged.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;14-storage-gateway&quot;&gt;1.4 Storage Gateway&lt;/h3&gt;

&lt;h4 id=&quot;141-what&quot;&gt;1.4.1 What&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;AWS Storage Gateway is a service that connects an on-premises software appliance with cloud-based storage to provide seamless and secure integration between an organization’s on-premises IT environment and AWS’s storage infrastructure. The service enables you to securely store data to the AWS cloud for scalable and cost-effective storage.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;AWS Storage Gateway’s software appliance is available for download as a virtual machine (VM) image that you install on a host in your datacenter. Storage Gateway supports either VMware ESXi or Microsoft Hyper-V. Once you’ve installed your gateway and associated it with your AWS account through the activation process, you can use the AWS Management Console to create the storage gateway option that is right for you.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Four Types of Storage Gateways&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;File Gateway (NFS): such as pdf, word, picture, video. Files are stored as objects is &lt;strong&gt;S3&lt;/strong&gt; buckets, accessed through a Network File System (NFS) mount point.&lt;/li&gt;
      &lt;li&gt;Volumes Gateway (iSCSI): block storage, virtual hard disk from on-premies to Volume Gateway via iSCSI block protocol.
        &lt;ul&gt;
          &lt;li&gt;Stored Volumes: store your primary data locally, while asynchronously backing up that data to AWS.&lt;/li&gt;
          &lt;li&gt;Cached Volumes: only the most recently used file.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Tape Gateway (VTL): for archive in the AWS Cloud via popular backup applications like NetBackup, Backup Exec, Veeam etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;15-snowball&quot;&gt;1.5 Snowball&lt;/h3&gt;

&lt;h4 id=&quot;151-what&quot;&gt;1.5.1 What&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;AWS Import/Export Disk accelerates moving large amounts of data into and out of the AWS cloud using portable storage devices for transport, can import to or export from S3.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Types&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Snowball: 80TB.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Snowball Edge: 100TB with compute capability.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Snowmobile.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;16-elastic-block-storgage-ebs&quot;&gt;1.6 Elastic Block Storgage (EBS)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Amazon EBS allows you to create storage volumes and attach them to amazon EC2 instances. Once attached, you can create a file system on top of these volumes, run a database, or use them in any other way you would use a block device. Amazon EBS volums are placed in a specific Availability Zone, where they are automatically replicated to protect you from the failure of a single component.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;161-ebs-volume&quot;&gt;1.6.1 EBS Volume&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;types
    &lt;ul&gt;
      &lt;li&gt;SSB
        &lt;ul&gt;
          &lt;li&gt;General Purpose SSD (GP2)
            &lt;ul&gt;
              &lt;li&gt;General purpose, balances both price and performance.&lt;/li&gt;
              &lt;li&gt;Ratio of 3 IOPS per GB with up to 10,000 IOPS and the ability to burst up to 3000 IOPS for extended periods of time for volumes at 3334 Gib and above.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Provisioned IOPS SSD (IO1)
            &lt;ul&gt;
              &lt;li&gt;Designed for I/O intensive applications such as large relational or NoSQL databases.&lt;/li&gt;
              &lt;li&gt;Use if you need more than 10,000 IOPS&lt;/li&gt;
              &lt;li&gt;can provision up to 20,000 IOPS per volume.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Magnetic
        &lt;ul&gt;
          &lt;li&gt;Throughput Optimized HDD (ST1)
            &lt;ul&gt;
              &lt;li&gt;Big data&lt;/li&gt;
              &lt;li&gt;Data warehouses&lt;/li&gt;
              &lt;li&gt;Log processing&lt;/li&gt;
              &lt;li&gt;Cannot be a boot volume&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Cold HDD (SC1)
            &lt;ul&gt;
              &lt;li&gt;Lowest Cost Storage for infrequently accessed workloads&lt;/li&gt;
              &lt;li&gt;File server&lt;/li&gt;
              &lt;li&gt;Cannot be a boot volume&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Notes
    &lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/-21_AWS/2017-10-01-AWS Associate Architect/EBS AMI class vs instance.png&quot; alt=&quot;EBS AMI&quot; /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Volumes exist on EBS
        &lt;ul&gt;
          &lt;li&gt;volumes is just virtual hard disk&lt;/li&gt;
          &lt;li&gt;you can change volume size on the fly, including changing the size and storage type.&lt;/li&gt;
          &lt;li&gt;volumes always be in the same Availability Zone as the EC2 instance&lt;/li&gt;
          &lt;li&gt;to move an EC2 volume from one AZ/Region to another, take a snap or an image of it, then copy it to the new AZ/Region&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Snapshot exist on S3
        &lt;ul&gt;
          &lt;li&gt;snapshot are just time copies of volumes&lt;/li&gt;
          &lt;li&gt;snapshot record the incremental diffierence&lt;/li&gt;
          &lt;li&gt;the first snaphost takes more time to create since the first difference is almost the whole volume.&lt;/li&gt;
          &lt;li&gt;to create a snapshot for EBS volumes that serve as root devices, you should stop the instance before taking the snapshot.&lt;/li&gt;
          &lt;li&gt;However, you can take a snap while the instance is running&lt;/li&gt;
          &lt;li&gt;Snapshot of encrypted volumes are encrypted automatically&lt;/li&gt;
          &lt;li&gt;Volumes restored from encrypted snapshots are enecyrpted automatically&lt;/li&gt;
          &lt;li&gt;You can share snapshots, but only if they are unencrypted
            &lt;ul&gt;
              &lt;li&gt;These snapshots can be shared with other AwWS accounts or made public&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;duplicate EBS to other AZ/region
        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;to different AZ
  volum -&amp;gt; snapshot -&amp;gt; create new volume from the snapshot in different AZ -&amp;gt; attach to a new instance&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;to different region
  volume -&amp;gt; snapshot -&amp;gt; copy snapshot to a new region -&amp;gt; create image from the copied snapshot&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;EBS vs instance Store&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;EBS default delted when EC2 terminate. One can change behavior that EC2 termiantion doesn’t affect EBS.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;17-summary&quot;&gt;1.7 Summary&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Read the above notes&lt;/li&gt;
  &lt;li&gt;In addition
    &lt;ul&gt;
      &lt;li&gt;Write to S3 - HTTP 200 code for a successiveful write&lt;/li&gt;
      &lt;li&gt;You can load files to S3 much faster by enabling multipart upload&lt;/li&gt;
      &lt;li&gt;Read the S3 FAQ obefore taking the exam. It comes up A LOT!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;1e-exam-questions&quot;&gt;1.E Exam Questions&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Durability: the probability that you will eventually be able to get your object back from the storage system from one of the stores and archives.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Availability: the probability that you will be able to get it back the moment that you ask for it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;S3 has READ after WRITE consistency for PUTS of new objects. Durability 99.999999999%, availability 99.99%&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;S3 has eventual consistency for over-writting PUTS and DELETES. New object or Create Puts is a new object for which that is no replicated object anywhere else. As soon as it is create the metadata is replicated but as no object exists anywhere else until the object is replicated, you can not get an inconsistent Read if it is not there. With an overwrite or Delete, the object is already out there in the replicas, so until the change/delete is fully replicated, you could still read the old version. The replication will happen and the environment will ‘eventually’ become consistent.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;AWS Storage Gateway: on-premise virtual appliance that can be used to cache S3 locally at a customer site.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;upload 7.5 GB file to S3 however getting error “Your proposed upload exceeds the maximum allowed object size”. So you need to design your application to use the multi-part upload API for all objects.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;RRS: Reduced Redundancy Storage. Availability 99.99%, durability 99.99%&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;s3 bucket with name &lt;code&gt;acloudguru1234&lt;/code&gt; in EU west region, the url is: &lt;code&gt;https://s3-eu-west-1.amazonaws.com/acloudguru1234&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;bucket name is global.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-computing&quot;&gt;2 Computing&lt;/h2&gt;

&lt;h3 id=&quot;21-ec2&quot;&gt;2.1 EC2&lt;/h3&gt;

&lt;h4 id=&quot;211-what&quot;&gt;2.1.1 What&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides resizable compute capacity in the cloud. Amazon EC2 reduces the time required to obtain and boot new server instances to minutes, allowing you to quickly scale capacity, both up and down, as your computing requirements change.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Purchasing model&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;On Demand - allows you to pay a &lt;strong&gt;fixed&lt;/strong&gt; rate by the hour with no commitment. perfect for users that want the low cost and flexibility of Amazon EC2 without any up-front payment or long-term commitment. Applicatoins with short term, spiky or unpredictable workloads that cannot be interrupted. Applications being developed or tested on Amazon EC2 for the first time.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Reserved - provides you with a capacity reservation, and offer a significant discount on the hourly charge for an instacnce. 1 year or 3 year terms. Applications with steady state or predictable usage. Applications that require reserved capacity. Users can make up-front payments to reduce their total computing costs even further (standard RIs (Reserved Instances), up to 75% off on-demand; Convertible RIs, up to 54% off on demand; scheduled RIs are available to launch within the time window you reserve.)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Spot - enables you to bid whatever price you want for instance capacity, providing for even greater savings if your application shave flexible start and end times. Applications that have flexible start and end times. Applications that are only feasible at very low compute prices. Can be purchased on-Demand (hourly). Can be purchased as a Reservation for up to 70% off the on-demand price. If a spot instance is terminated by Amazon EC2, you will not be charged for a partial hour of usage; However, if you terminate the instance your self, you will be charged for the complete hour in which the instance ran.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Dedicated Hosts - Physical EC2 server dedicated for your use. Dedicated hosts can help you reduce costs by allowing you to use your existing server-bound software licenses&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;HARDWARE&lt;/strong&gt; - EC2 Instance Types:&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;F&lt;/strong&gt; for FPGA&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;I&lt;/strong&gt; for IOPS&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;G&lt;/strong&gt; for Graphics&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;H&lt;/strong&gt; for High Disk Throughput&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;T&lt;/strong&gt; for cheap general purpose (think T2 Micro)&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;D&lt;/strong&gt; for density&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;R&lt;/strong&gt; for RAM&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;M&lt;/strong&gt; for main choice for general purpose apps&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;C&lt;/strong&gt; for Compute&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;P&lt;/strong&gt; for Graphics (think Pics)&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;X&lt;/strong&gt; for extrame Memory&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;img_middle_hg&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/-21_AWS/2017-10-01-AWS Associate Architect/EC2 instance type.png&quot; alt=&quot;EC2 instance type&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;SOFTWARE&lt;/strong&gt; - AMI
    &lt;ul&gt;
      &lt;li&gt;linux&lt;/li&gt;
      &lt;li&gt;red-hat&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Termination Protection is turned off by default, you must turn it on&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On an EBS-backed instance, the default action is for the root EBS volume to be deleted when the instance is terminated.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;EBS Root Volumes of your DEFAULT AMI’s cannot be encrypted. You can also use a thrid party tool (such as bit locker etc) to encrypt the root volume, or this can be done when creating AMI’s in the AWS console or uusing the API.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Additional volumes can be encrypted.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Root volume type
    &lt;ul&gt;
      &lt;li&gt;EBS
        &lt;ul&gt;
          &lt;li&gt;The root device for an instance launched from the AMI is an Amazon EBS volume created from an Amazon EBS snapshot&lt;/li&gt;
          &lt;li&gt;EBS backed instances can be stopped. You will not lose the data on this instance if it is stopped.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;instance store (Ephemeral storage)
        &lt;ul&gt;
          &lt;li&gt;For root device for an instance launched for from the AMI is an isntance store volume created from a template stored in Amazon S3&lt;/li&gt;
          &lt;li&gt;Ephemeral storage, the instance cannot be stopped, if the underlying host fails, you will lose your data.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;in common:
        &lt;ul&gt;
          &lt;li&gt;you can reboot both without losing your data.&lt;/li&gt;
          &lt;li&gt;by default, both ROOT volumes will be deleted on termination, however with EBS volumes, you can tell AWS to keep the device volume.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GET EC2 instance meta data inside EC2
  &lt;code&gt;curl http://169.254.169.254/latest/meta-data/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;212-launch-ec2-instance--ssh-to-it&quot;&gt;2.1.2 Launch EC2 instance &amp;amp; SSH to it&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;download new key pair &lt;code&gt;myKeyPair.pem&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;CHMOD 400 myKeyPair.pem&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ssh ec2-user@3.0.99.6 -i myKeyPair.pem&lt;/code&gt; where &lt;code&gt;3.0.99.6&lt;/code&gt; is the ec2 instance public ip.&lt;/li&gt;
  &lt;li&gt;try to install apache and start the service then type &lt;code&gt;3.0.99.6&lt;/code&gt; in browser. (&lt;code&gt;yum install httpd&lt;/code&gt;, &lt;code&gt;cd /var/www/&lt;/code&gt;, &lt;code&gt;vim index.html&lt;/code&gt;, write html to &lt;code&gt;index.html&lt;/code&gt;, save and &lt;code&gt;service httpd start&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;213-security-group-basics&quot;&gt;2.1.3 Security Group Basics&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;All Inbound Traffic is Blocked By Default&lt;/li&gt;
  &lt;li&gt;All Outbound Traffic is Allowed&lt;/li&gt;
  &lt;li&gt;Changes to Security Groups take effective immediately. If your instance attached to Security Group A. Change to A take effective imeediately to this instance.&lt;/li&gt;
  &lt;li&gt;An instance can have multiple security groups&lt;/li&gt;
  &lt;li&gt;A secruity group can be attached to multiple instances&lt;/li&gt;
  &lt;li&gt;Security Groups are stateful, which means inbound rule http would enable outbound rule http implicitly, though outbound rule doesn’t show there is rule http.&lt;/li&gt;
  &lt;li&gt;You cannot block specific IP addresses using Security Groups, instead use Network Access Control Lists.&lt;/li&gt;
  &lt;li&gt;You can assign up to five security groups to the instance.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;215-elastic-load-balancer&quot;&gt;2.1.5 Elastic Load Balancer&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;3 types
    &lt;ul&gt;
      &lt;li&gt;Application Load Balancer
        &lt;ul&gt;
          &lt;li&gt;for HTTP and HTTPs traffic (OSI 7, the application layer): can create advanced request routing, sending specified requests to specific web servers.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Network Load Balancer
        &lt;ul&gt;
          &lt;li&gt;for TCP traffic (OSI 4, the transport layer): capable of handling millions of requests per second while maintaining ultra-low latencies, for extreame performance.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Classic Load Balancer
        &lt;ul&gt;
          &lt;li&gt;the legacy Elastic Load Balancers(for both OSI 7 and 4).&lt;/li&gt;
          &lt;li&gt;Error: 504, means server has error, either in server itself or db.&lt;/li&gt;
          &lt;li&gt;X-Forwared-For header: client(src 124.12.3.231) -&amp;gt; classic load balancer (src 10.0.0.23) -&amp;gt; EC2(src 10.0.0.23 (X-Forwared-For 123.12.3.231))&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;instaces monitored by ELB are reported as: InService or OutofService&lt;/li&gt;
  &lt;li&gt;Health Checks do the instance check by talking to it&lt;/li&gt;
  &lt;li&gt;ELB have their own DNS name. You are never given an IP address.&lt;/li&gt;
  &lt;li&gt;Read the ELB FAQ for Classic Load Balancers.&lt;/li&gt;
  &lt;li&gt;aCloudGuru has deep dive course on application load balancers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;216-using-bash-script-to-pre-launch-the-ec2-instance&quot;&gt;2.1.6 Using bash script to pre-launch the ec2 instance&lt;/h4&gt;

&lt;p&gt;in launch instance -&amp;gt; Configure Instance Details -&amp;gt; Advanced Details, one can add bash scripts&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;#!bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;su
yum update &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;httpd &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /var/www/html
aws s3 &lt;span class=&quot;nb&quot;&gt;cp &lt;/span&gt;s3://udemy-ec2-httpd-server-html &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;--recursive&lt;/span&gt;
service httpd start&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;217-autoscaling&quot;&gt;2.1.7 Autoscaling&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Autoscaling Launch Configuration (define each instance)&lt;/li&gt;
  &lt;li&gt;AutoScaling Groups (define how to scale(repeat) across AZ using Autoscaling Launch Configuration as primitive instance data)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;217-ec2-placment-groups&quot;&gt;2.1.7 EC2 Placment Groups&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;2 Types
    &lt;ul&gt;
      &lt;li&gt;Clustered Placement Group
        &lt;ul&gt;
          &lt;li&gt;it is a group of instances within a &lt;strong&gt;single&lt;/strong&gt; AZ. Placement groups are recommended for applications that need low network latency, high network throughput, or both. 通常用于big data，你不希望数据有高延时(被放在不同AZ)，你希望数据低延时(同一个AZ)&lt;/li&gt;
          &lt;li&gt;Only certain instances can be launched in to a Clustered Placement Group.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Spread Placement Group
        &lt;ul&gt;
          &lt;li&gt;distribute critical data among multiple AZ/region&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Examp tips
    &lt;ul&gt;
      &lt;li&gt;A clustered placement group can’t span multiple AZ while a spread placement group can.&lt;/li&gt;
      &lt;li&gt;The name you specify for a placement group must be unique within your aws account.&lt;/li&gt;
      &lt;li&gt;Only certain types of instances can be launched in a placement group (Compute Optimized, GPU, Memory Optimized, Storage Optimized)&lt;/li&gt;
      &lt;li&gt;AWS recommend homogenous instances within placement groups&lt;/li&gt;
      &lt;li&gt;You can’t merget placement groups&lt;/li&gt;
      &lt;li&gt;You can’t move an existing instance into a placement group. You can create an AMI from your existing instance, and then launch a new instance from the AMI into a placement group.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;218-efs&quot;&gt;2.1.8 EFS&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;What:
    &lt;ul&gt;
      &lt;li&gt;Previous, when you need block storage for EC2, normally you need pre-provisioning EC2 with EBS and no single EBS can be used by multiple EC2. EFS comes to solve this problen. It’s block storage like EBS, but not pre-provisioning is needed and it can be accessed by multiple EC2 instances.&lt;/li&gt;
      &lt;li&gt;Suports Network File System verion 4 (NFSv4) protocal&lt;/li&gt;
      &lt;li&gt;can scale up to petabytes&lt;/li&gt;
      &lt;li&gt;can support thousands of concurrent NFS connections&lt;/li&gt;
      &lt;li&gt;data is stored across multiple AZ’s within a region&lt;/li&gt;
      &lt;li&gt;Read After Write Consistency&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;22-lambda&quot;&gt;2.2 Lambda&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What:
  AWS Lambda is a compute service where you can upload your code and create a lambda function. AWS Lambda takes care of provisioning and managing the servers that you use to run the code. You don’t have to worry about operating systems, patching, scaling, etc. You ca use Lambda in the following ways:
    &lt;ul&gt;
      &lt;li&gt;As an event-drivent copute service where aws lambda runs your code in response to events. These events could be changes to data in an Amazon S3 bucekt or an Amazon DynamoDB table.&lt;/li&gt;
      &lt;li&gt;As a compute service to run your code in response to HTTP requests using Amazion API Gateway or API calls made using AWS SDKs.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;scale out
    &lt;ul&gt;
      &lt;li&gt;Lambda does scale out automatically. Note, scale out(more EC2) vs scale up(each EC2 upgrade resouces such as RAM)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Price
    &lt;ul&gt;
      &lt;li&gt;number of requests
        &lt;ul&gt;
          &lt;li&gt;first 1 million requests are free, $0.2 per 1 million requests thereafter.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;duration
        &lt;ul&gt;
          &lt;li&gt;RAM + time&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Exam tips
    &lt;ul&gt;
      &lt;li&gt;Lambda scales out (not up) automatically&lt;/li&gt;
      &lt;li&gt;Lambda functions are independent, 1 event = 1 function&lt;/li&gt;
      &lt;li&gt;Lambda is serverless&lt;/li&gt;
      &lt;li&gt;Know what services are serverless&lt;/li&gt;
      &lt;li&gt;Lambda functions can trigger other lambda functions, 1 event can = x functions if functions trigger other fucntiosn&lt;/li&gt;
      &lt;li&gt;Architectures can get extremely complicated, AWS X-ray allows you to debug what is happening&lt;/li&gt;
      &lt;li&gt;Lambda can do things globally, you can use it to back up S3 buckets to other S3 butckets.&lt;/li&gt;
      &lt;li&gt;Know your triggers: api gateway, alexa kits.&lt;/li&gt;
      &lt;li&gt;Lambda maximum executing time is 5 min.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2e-exam-questions&quot;&gt;2.E Exam Questions&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;EBS snapshot are stored in S3 incrementally.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;EBS volumes persist independently from the life of an Amazon EC2 instance. If I terminated and EC2 instance, would that EBS volume remain? Yes only if instructed to when created (by default EBS volumes are set to &lt;code&gt;Delete on Termination&lt;/code&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You cannot delete a snapshot of EBS volum that is used as the root device of a registred AMI. In able to do that, you need to deregister the AMI first.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;While creating the snapshots using the command line tools, you should use command &lt;code&gt;ec2-create-snapshot&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You cannot attach an EBS volume to more than one EC2 instance at the same time.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-monitoring&quot;&gt;3 Monitoring&lt;/h2&gt;

&lt;h3 id=&quot;31-cloudwatch&quot;&gt;3.1 CloudWatch&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;2 types
    &lt;ul&gt;
      &lt;li&gt;Standard Monitoring = 5 minutes&lt;/li&gt;
      &lt;li&gt;Detailed Monitoring = 1 minute&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Dashboards: creates awesome dashboards to see what is happening with your AWS environment.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Alarms: allows you to set alarms that notify you, such as via email when particular thresholds are hit.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Events: helps you to respond to state changes in your AWS resources.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Logs: helps you to aggregate, monitor, and store logs.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CloudWatch vs CloudTrial: CloudWatch for performance monitoring aws existing resources (EC2 cpu utilization), CloudTrial for auditing what you do to aws (such as create new user, new role, S3 bucket)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;CloudWatch metrics: memory utilization, disk space utilization is not readily available, you need use CloudWatch Monitoring Scripts which is written in Perl or CloudWatch Agent.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-network&quot;&gt;4 Network&lt;/h2&gt;

&lt;h3 id=&quot;41-route53&quot;&gt;4.1 Route53&lt;/h3&gt;

&lt;h4 id=&quot;411-theory&quot;&gt;4.1.1 Theory&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;SOA Records&lt;/li&gt;
  &lt;li&gt;NS Records&lt;/li&gt;
  &lt;li&gt;A name&lt;/li&gt;
  &lt;li&gt;C name&lt;/li&gt;
  &lt;li&gt;alias name&lt;/li&gt;
  &lt;li&gt;mx records: mail exchange records.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;412-different-routing&quot;&gt;4.1.2 Different Routing&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Simple Routing
    &lt;ul&gt;
      &lt;li&gt;you can only have &lt;strong&gt;one record&lt;/strong&gt; with multiple IP addresses. Route53 will return ip address in a random order&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Weighted Routing
    &lt;ul&gt;
      &lt;li&gt;the same as simple routing except return ip address in a weighted probability (implemented with &lt;strong&gt;multiple records&lt;/strong&gt;, each recortd www.example -&amp;gt; 25%, 30.0.0.1, the ec2 public ip) instead of random.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Latency-based Routing:
    &lt;ul&gt;
      &lt;li&gt;the same as weighted routing, except return ip address that has the lowest latency&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Failover Routing:
    &lt;ul&gt;
      &lt;li&gt;a active (primary) record for major routing; a passive (backup) record when the primary record’s ip address is not available (detected by Route53’s health check).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Geolocation Routing:
    &lt;ul&gt;
      &lt;li&gt;route to ip address based on the origin of client’s request. For example, you want ip address from china to be all routed to EC2 in singpore.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Multivalue Answer Routing
    &lt;ul&gt;
      &lt;li&gt;the same as simple routing execept has multiple records. The difference is Multivalue Answer Routing enable health check while simple routing not.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;413-exam-tips&quot;&gt;4.1.3 Exam tips&lt;/h4&gt;

&lt;h3 id=&quot;42-vpc&quot;&gt;4.2 VPC&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;what
    &lt;ul&gt;
      &lt;li&gt;AWS VPC lets you provision a logically isolated section of the AWS Cloud where you can launch AWS resource in a virtual network you define. You have complete control over your virtual networking environment, including selection of your own IP address range, creation of subnets, and configuration of route tables and network gateways&lt;/li&gt;
      &lt;li&gt;Elements
        &lt;ul&gt;
          &lt;li&gt;Internet gateway (Virtual private gatway): each IGW can attach to one VPC&lt;/li&gt;
          &lt;li&gt;Route Table&lt;/li&gt;
          &lt;li&gt;Network Access Control List (Stateless)&lt;/li&gt;
          &lt;li&gt;Subnet (1 subnet = 1 AZ), each Subnet can associate one Network Access Control List&lt;/li&gt;
          &lt;li&gt;Security Group (stateful, inbound rule apply to outbound automatically, for example, you add inbound rule  port 80, outbound 80 is enabled automatically, for Network Access Control List, you need to add outbound rule port 80 as well). Security Group can only be reused within the same VPC&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;No Transitive Peering: VPC A talk to Both VPC B and VPC C; VPC cannot talk to VPC B since no transitive peering for VPC. In order to let VPC C talk to VPC B, you need to enable the rule between VPC B and VPC directly.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;internet gateway
    &lt;ul&gt;
      &lt;li&gt;per internet gateway per VPC&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;route table
    &lt;ul&gt;
      &lt;li&gt;map to subnets&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;subnet
    &lt;ul&gt;
      &lt;li&gt;access control list&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;security group&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;each EC2 has a public and private ip address&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;VPC Peering
    &lt;ul&gt;
      &lt;li&gt;Allows you to connect one VPC with another via a direct network route using private IP address&lt;/li&gt;
      &lt;li&gt;one vpc can connect to another vpc&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;42-subnet&quot;&gt;4.2 Subnet&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;One subnet equals one availability zone&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;43-nat-instance--nat-gateway&quot;&gt;4.3 NAT instance &amp;amp; NAT Gateway&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;NAT instance
    &lt;ul&gt;
      &lt;li&gt;When creating a NAT instance, Disable Source/Destination Check on the instance.&lt;/li&gt;
      &lt;li&gt;NAT instances must be in a public subnet&lt;/li&gt;
      &lt;li&gt;There must be a route out of the private subnet to the NAT instance, in order for this to work&lt;/li&gt;
      &lt;li&gt;The amount of traffic that NAT instances can support depends on the instance size. If you are bottlenecking, increase the instance size.&lt;/li&gt;
      &lt;li&gt;You can create high availability using Autoscaling Groups, multiple subnets in different AZs, and a script to automate failover.&lt;/li&gt;
      &lt;li&gt;Behind a secrity group&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;NAT Gateway
    &lt;ul&gt;
      &lt;li&gt;Preferred by the enterprise&lt;/li&gt;
      &lt;li&gt;Scale automatically up to 10 Gbps&lt;/li&gt;
      &lt;li&gt;No need to patch&lt;/li&gt;
      &lt;li&gt;Not associated with security groups&lt;/li&gt;
      &lt;li&gt;Automatically assigned a public ip address&lt;/li&gt;
      &lt;li&gt;Remember to update your route tables&lt;/li&gt;
      &lt;li&gt;No need to disable source/destination checks.&lt;/li&gt;
      &lt;li&gt;More secure than a NAT instance&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;NAT vs Bastion
    &lt;ul&gt;
      &lt;li&gt;A NAT is used to provide internet traffic to EC2 instance in private subnets&lt;/li&gt;
      &lt;li&gt;A bastion is used to securely administer EC2 instance (using SSH or RDP) in private subnets. In Australia we call them jump box.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;44-network-access-control-list&quot;&gt;4.4 Network Access Control List&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Your VPC automatically comes a default network ALC, and by default it allows all outbound and inbound traffic.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When creating new Network ACL, the inbound and outbound default to all deny.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Each subnet in your VPC must be associated with a network ACL. If you don’t explicitly associate a subnet with a network ACL, the subnet is automatically associated with the default network ACL.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can associate a network ACL with multiple subnets; however, a subnet can be associated with only one network ACL at a time. When you associate a network ACL with a subnet, the previous association is removed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Network ACLs contain a numbered list of rules that is evaluated in order, starting with the lowest numbered rule.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Block IP addresses using network ACLs not Security Groups&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;45-security-group&quot;&gt;4.5 Security Group&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Security groups act like a firewall at the instance level whereas Network Access Control List are an additional layer of security that act at the subnet level&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;48-vpc-flow-logs&quot;&gt;4.8 VPC Flow Logs&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;what
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. Flow log data is stored using Amazon CloudWatch Logs. After youo’ve created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;3 levels&lt;/li&gt;
      &lt;li&gt;VPC&lt;/li&gt;
      &lt;li&gt;Subnet&lt;/li&gt;
      &lt;li&gt;Network Interface Level&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Exam tips
    &lt;ul&gt;
      &lt;li&gt;You cannot enable flow logs for VPCs that are peered with your VPC unless the peer VPC is in your account&lt;/li&gt;
      &lt;li&gt;You cannot tag a flow log&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;After you’ve created a flow log, you cannot change its configuration; for exampke, you can’t associate a different IAM role with the flow log.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;Not all ip traffic is monitored:
        &lt;ul&gt;
          &lt;li&gt;Traffic generated by instances when they contact the Amazon DNS server. If you use your own DNS server, then all traffic to that DNS server is logged.&lt;/li&gt;
          &lt;li&gt;Traffic generated by a Windows instance for Amazon Windows license activation&lt;/li&gt;
          &lt;li&gt;Traffic to and from 169.254.169.254 for instance metadata&lt;/li&gt;
          &lt;li&gt;DHCP traffic&lt;/li&gt;
          &lt;li&gt;Traffic to the reserved IP address for the default VPC router.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;48-vpc-endpoint&quot;&gt;4.8 VPC Endpoint&lt;/h3&gt;

&lt;h3 id=&quot;49-summary&quot;&gt;4.9 Summary&lt;/h3&gt;

&lt;h3 id=&quot;4e-example-questions&quot;&gt;4.E Example Questions&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;How many VPC’s am I allowed in each AWS Region by default ? 5.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How many internet gateways can I attach to my custom VPC? 1.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4e-exam-questions&quot;&gt;4.E Exam Questions&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Route53 is so named because DNS port is 53 and Route53 is a DNS service.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;5-database&quot;&gt;5 Database&lt;/h2&gt;

&lt;h3 id=&quot;51-disk&quot;&gt;5.1 Disk&lt;/h3&gt;

&lt;h4 id=&quot;511-sql---oltp&quot;&gt;5.1.1 Sql - OLTP&lt;/h4&gt;

&lt;p&gt;SQL
MySQL
PostgreSQL
Oracle
Aurora
MariaDB&lt;/p&gt;

&lt;h5 id=&quot;5115-aurora&quot;&gt;5.1.1.5 Aurora&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;What
    &lt;ul&gt;
      &lt;li&gt;MYSQL-compatible, RDS engine that combines the speed and availability of heigh-end commerical databases. Aurora provides up to 5 times better formance than MysSQL at a price point one tenth that of a commercial database while delivering similar performance and availability.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Scaling
    &lt;ul&gt;
      &lt;li&gt;start with 10 GB, salces in 10GB increments to 64 TB&lt;/li&gt;
      &lt;li&gt;Compute resources can scale up to 32vCPUs and 224GB of Memory.&lt;/li&gt;
      &lt;li&gt;2 copies of your data is contained in each AZ, with minimum of 3 AZ. In total 6 copies of your data.&lt;/li&gt;
      &lt;li&gt;Self-healing. Data blocks and disks are continuously scanned for errors and repaired automatically.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Replicas
    &lt;ul&gt;
      &lt;li&gt;2 types
        &lt;ul&gt;
          &lt;li&gt;Aurora Replicas (current 15)&lt;/li&gt;
          &lt;li&gt;MySQL Read Replicas (current 15)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;512-nosql&quot;&gt;5.1.2 NoSql&lt;/h4&gt;

&lt;h5 id=&quot;5121-dynamodb&quot;&gt;5.1.2.1 DynamoDB&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;What
    &lt;ul&gt;
      &lt;li&gt;Stored on SSD storage&lt;/li&gt;
      &lt;li&gt;Spread Across 3 geographically distinct data center (AZ)&lt;/li&gt;
      &lt;li&gt;Eventual Consistent Reads (default): from space pespective, multiple copies reach eventual consistent&lt;/li&gt;
      &lt;li&gt;Strongly Consistent Reads: from time pespective, all writes that is successful will be reflected for read after thoes writes.&lt;/li&gt;
      &lt;li&gt;pricce
        &lt;ul&gt;
          &lt;li&gt;Write throughtput $0.0065 per hour for every 10 units&lt;/li&gt;
          &lt;li&gt;Read throught $0.0065 per hour for every 50 units.&lt;/li&gt;
          &lt;li&gt;storage charge $0.25/(Gb * month)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;scaling
    &lt;ul&gt;
      &lt;li&gt;push button scaling, meaning you can scale your database in fly, without any down time.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;52-redshift---olap&quot;&gt;5.2 RedShift - OLAP&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;what
    &lt;ul&gt;
      &lt;li&gt;data warehousing service&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Configration
    &lt;ul&gt;
      &lt;li&gt;Single Node (160GB)&lt;/li&gt;
      &lt;li&gt;Multi - Node
        &lt;ul&gt;
          &lt;li&gt;Leader Node (manages client connections and receives queries)&lt;/li&gt;
          &lt;li&gt;Compute Node (store data and perform queries and computations). Up to 128 compute nodes.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Storage type
    &lt;ul&gt;
      &lt;li&gt;Column storage, which is unlike normal row storage since OLAP often needs column aggregation computation and Column storage is more efficient for that.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;price
    &lt;ul&gt;
      &lt;li&gt;commpute node hours&lt;/li&gt;
      &lt;li&gt;backup&lt;/li&gt;
      &lt;li&gt;data transfer (only within a VPC, not outside it)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Security
    &lt;ul&gt;
      &lt;li&gt;Encrypted in transit using SSL&lt;/li&gt;
      &lt;li&gt;Enctryped at rest using AES-256 encryption&lt;/li&gt;
      &lt;li&gt;By default, RedShift takes care of key management
        &lt;ul&gt;
          &lt;li&gt;manage your own keys through HSM&lt;/li&gt;
          &lt;li&gt;AWS Key Management Service&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Availability
    &lt;ul&gt;
      &lt;li&gt;Currently only available in 1 AZ&lt;/li&gt;
      &lt;li&gt;Can restore snapshots to new AZ’s in the event of an outage&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;53-in-memory-elasticache&quot;&gt;5.3 In memory Elasticache&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Exam tip:
    &lt;ul&gt;
      &lt;li&gt;Q: a scenario where a particular database is under a lof of stress/load, how to alleviate this
        &lt;ul&gt;
          &lt;li&gt;A: Elasticache if read heavy, not prone to frequent change&lt;/li&gt;
          &lt;li&gt;A: Redshitf if OLAP transactions is running on database.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;531-memcached&quot;&gt;5.3.1 Memcached&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;No Multi AZ&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;532-redis&quot;&gt;5.3.2 Redis&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Multi AZ&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;54-launch-rds-instance-and-connect-to-it-via-ec2-server&quot;&gt;5.4 Launch RDS instance and connect to it via EC2 server&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;RDS instance has a separate security group from EC2 Serverinstance. If you want to let your EC2 server instance talk to RDS instance, make sure RDS instance’s security group has inbound rule for mysql from the security group of EC2 server instance.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;55-back-ups-multi-az--read-replicas&quot;&gt;5.5 Back Ups, Multi-AZ &amp;amp; Read Replicas&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;2 types for RDS back up
    &lt;ul&gt;
      &lt;li&gt;Automatic Backup, enabled by default&lt;/li&gt;
      &lt;li&gt;Snaphot, done manually. They are stored even after you delete the original RDS instance, unlike automatic backup.&lt;/li&gt;
      &lt;li&gt;Whenver you retore either automatic backup or snapshot backup database, the restored version of the database will be a new RDS instance with a new DNS endpoint.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Encryption
    &lt;ul&gt;
      &lt;li&gt;Encryption is done via AWS Key Management&lt;/li&gt;
      &lt;li&gt;Once your RDS instance is encrypted, the data stored at rest in the underlying storage is encrypted, as are its automated backups, read replicas, and snapshot&lt;/li&gt;
      &lt;li&gt;At the present time, encrypting an existing DB instance is not supoorted. To use Amazon RDS encryption for an existing database, you must first create a snapshot, make a copy of the snapshot and encrypt the copy.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Multi AZ
    &lt;ul&gt;
      &lt;li&gt;allow you to have an exact copy of your production database in another AZ.&lt;/li&gt;
      &lt;li&gt;AWS handles the replication for you, any write to primary database will be automatically synchronized to the replicate one.&lt;/li&gt;
      &lt;li&gt;If primary database fail (such as, db maintenance, az failure), the database instance endpoint url will be resolved to the ip address of the replicate database for you by aws. That’s the reason you only know the endpoint url for database and shouldn’t be exposed to the ip of the database.&lt;/li&gt;
      &lt;li&gt;RDS multi AZ is for disaster recovery only, not for performance improvement. For performance improvement, you need read replicas.&lt;/li&gt;
      &lt;li&gt;available for
        &lt;ul&gt;
          &lt;li&gt;MySQL&lt;/li&gt;
          &lt;li&gt;PostgreSQL&lt;/li&gt;
          &lt;li&gt;Aurora&lt;/li&gt;
          &lt;li&gt;MariaDB&lt;/li&gt;
          &lt;li&gt;Oracle&lt;/li&gt;
          &lt;li&gt;SQL&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Read replica
    &lt;ul&gt;
      &lt;li&gt;scaling out&lt;/li&gt;
      &lt;li&gt;allow you to have read-only copy of your production database. This is achieved by using asynchronous replication from the primary RDS instance to the read replica. You use read replicas primary for very read-heavy database workloads&lt;/li&gt;
      &lt;li&gt;Must have automatic backups turned on in order to deploy a read replica.&lt;/li&gt;
      &lt;li&gt;You can have up to 5 read replica copies of any database.&lt;/li&gt;
      &lt;li&gt;You can have read replicas of read replicas&lt;/li&gt;
      &lt;li&gt;Reach read replica will have its own DNS end point&lt;/li&gt;
      &lt;li&gt;You can have read replicas that have multi AZ.&lt;/li&gt;
      &lt;li&gt;Read replicas can be promoted to be their own databases. This breaks the replication and is very useful for one to refactor the production database.&lt;/li&gt;
      &lt;li&gt;you can have read replica in a second region.&lt;/li&gt;
      &lt;li&gt;available for
        &lt;ul&gt;
          &lt;li&gt;MySQL&lt;/li&gt;
          &lt;li&gt;PostgreSQL&lt;/li&gt;
          &lt;li&gt;Aurora&lt;/li&gt;
          &lt;li&gt;MariaDB&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5e-example-questions&quot;&gt;5.E Example Questions&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;When transfer RDS from primary instance to secondary instance, the date transfer charge is free.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What happens to the I/O operations while you take a database snapshot? The I/O operation are suspended.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In RDS when using multiple availability zones, can you use the secondary database as an independent read node ?  No. Because the secondary database is to be thought of as a DR(Disaster Recover) site, it will be active only when the primary fails&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;6-application-service&quot;&gt;6 Application Service&lt;/h2&gt;

&lt;h3 id=&quot;61-sqs&quot;&gt;6.1 SQS&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What
    &lt;ul&gt;
      &lt;li&gt;Simple Queue Service&lt;/li&gt;
      &lt;li&gt;Consumer constantly pull the message&lt;/li&gt;
      &lt;li&gt;Message
        &lt;ul&gt;
          &lt;li&gt;size: 256 KB in any format&lt;/li&gt;
          &lt;li&gt;keeping time: 1 minute to 14 days, default to 4 days&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;visibility timeout (30s(default) to 12 hours): a consumer pull the message, the visibility timeout start counting, if the consumer finish proccessing the message before timeout, consumer will delete the message in the queue to avoid others see the message; if the consumer cannot finish processing the message before timeout, other consumer is supposed to see the message and pull it. Visibility timeout’s aim is to avoid the same message being consumed more than once.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;long polling vs short polling: for shor polling, the consumer poll from the queue, if no message, return immediately,; for long polling, the consumer will be blocked until there is an available message, which can save your money.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;2 types
        &lt;ul&gt;
          &lt;li&gt;Standard queue (default): message delivered at least once; however, more than one queue may be delivered out of order&lt;/li&gt;
          &lt;li&gt;FIFA queue: messages are guaranteed to be delivered once and in order, limited to 300 transactions per second.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;62-swf&quot;&gt;6.2 SWF&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What:
    &lt;ul&gt;
      &lt;li&gt;Simpel Workflow service&lt;/li&gt;
      &lt;li&gt;Actors
        &lt;ul&gt;
          &lt;li&gt;Starter:
  the program that can initiate a workflow.&lt;/li&gt;
          &lt;li&gt;Workes:
  the program that interact with Amazon SWF to get tasks, process received taksks, and return the results&lt;/li&gt;
          &lt;li&gt;Decider:
  the program that controls the coordination of taks, i.e. their ordering, concurrency, and scheduling according to the application logic.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;SWF vs SQS:
        &lt;ul&gt;
          &lt;li&gt;SWF ensures a task is assigned only once and is never duplicated. For SQS, after visibility timeout, if the consumer didn’t delete it, the message is visible to other consumers.&lt;/li&gt;
          &lt;li&gt;SWF is task oriented while SQS is message oriented&lt;/li&gt;
          &lt;li&gt;SWF up to 1 year retention while SQS up to 14 days&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;63-sns&quot;&gt;6.3 SNS&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What
    &lt;ul&gt;
      &lt;li&gt;Simple Notification Service&lt;/li&gt;
      &lt;li&gt;Consumer being pushed the message&lt;/li&gt;
      &lt;li&gt;can trigger subscriber via
        &lt;ul&gt;
          &lt;li&gt;HTTP&lt;/li&gt;
          &lt;li&gt;HTTPS&lt;/li&gt;
          &lt;li&gt;Email&lt;/li&gt;
          &lt;li&gt;Email-JSON&lt;/li&gt;
          &lt;li&gt;SQS&lt;/li&gt;
          &lt;li&gt;Applicatoin&lt;/li&gt;
          &lt;li&gt;Lambda&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;allow you to group multiple recipients using topics.&lt;/li&gt;
      &lt;li&gt;SNS vs SQS:
  both messaging service in AWS
        &lt;ul&gt;
          &lt;li&gt;SQS Polls&lt;/li&gt;
          &lt;li&gt;SNS Push&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;64-elastic-transcoder&quot;&gt;6.4 Elastic Transcoder&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What
    &lt;ul&gt;
      &lt;li&gt;Media Transcorder: convert media files from their original source format in to different formats that will play on smartphones, tablets, PC’s etc.&lt;/li&gt;
      &lt;li&gt;Pay based on minutes that you transcode and the resolution at which you transcode.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;65-api-gateway&quot;&gt;6.5 API Gateway&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What
    &lt;ul&gt;
      &lt;li&gt;The Network front door for client to access server, such as EC2, Lambda.&lt;/li&gt;
      &lt;li&gt;Enable response cache&lt;/li&gt;
      &lt;li&gt;Enable throttling requests to prevent requests&lt;/li&gt;
      &lt;li&gt;Connected to cloudWatch to log all requests&lt;/li&gt;
      &lt;li&gt;Low cost &amp;amp; Efficient &amp;amp; scales automatically.&lt;/li&gt;
      &lt;li&gt;Cross-Origin Resource Sharing (CORS)
        &lt;ul&gt;
          &lt;li&gt;CORS is a mechanism that allows restricted resources (e.g. fonts) on  a web page to be requested from another domain outside the domain from which the first resource was served&lt;/li&gt;
          &lt;li&gt;Error: “Origin policy cannot be read at the remote resource?”. You need to enable CORS on API Gateway&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;66-kinesis&quot;&gt;6.6 Kinesis&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What
    &lt;ul&gt;
      &lt;li&gt;What is streaming data: the data that is generated continously by thousands of data sources, which typically send in the data records simultaneously, and in small sizes (order of kb), such as stock prices, game data, social network data, geospatial data&lt;/li&gt;
      &lt;li&gt;kinesis makes it easy to load and analyze streaming data, also providing the ability for you to build your own custom applications for you business needs.&lt;/li&gt;
      &lt;li&gt;3 types:
        &lt;ul&gt;
          &lt;li&gt;Kinesis Streams: producers -&amp;gt; kinesis stream -&amp;gt; consumer (EC2). consists of shards.&lt;/li&gt;
          &lt;li&gt;Kinesis Firehose: can handle data directly using lambda and then upload results to S3 or ElasticSearch. No concern about shard.&lt;/li&gt;
          &lt;li&gt;Kinesis Analytics: using sql language to analysis data in Kinesis streams or Firhose&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;6e-exam-questions&quot;&gt;6.E Exam Questions&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;SES: Simple Email Service.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What does a “domain” refer to in Amazon SWF? A collection of related workflows.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;By default, EC2 instances pull SQS messages from an SQS queue on a FIFO (First In First out) basis. FALSE! SQS standard queue doesn’t support FIFO.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Amazon SWF ensures that a task is assigned only once and is never duplicated.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;7-the-well-architected-framework&quot;&gt;7 The Well Architected Framework&lt;/h2&gt;

&lt;h3 id=&quot;71-resources&quot;&gt;7.1 Resources&lt;/h3&gt;

&lt;p&gt;videos and white papers:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=CeceqWuZ0Cg&quot;&gt;AWS An Introduction to the Well Architected Framework&lt;/a&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://d1.awsstatic.com/whitepapers/AWS_Cloud_Best_Practices.pdf&quot;&gt;Architecting for the Cloud: AWS Best Practice&lt;/a&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/architecture/well-architected/&quot;&gt;AWS Well-Architected web page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;72-5-pillars&quot;&gt;7.2 5 Pillars&lt;/h3&gt;

&lt;h4 id=&quot;720-general&quot;&gt;7.2.0 General&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Design Principles
    &lt;ul&gt;
      &lt;li&gt;Stop guessing your capacity needs;&lt;/li&gt;
      &lt;li&gt;Test systems at production scale;&lt;/li&gt;
      &lt;li&gt;Automate to make architectural experimentation easier;&lt;/li&gt;
      &lt;li&gt;Allow for evolutionary architectures;&lt;/li&gt;
      &lt;li&gt;Data-Driven architectures&lt;/li&gt;
      &lt;li&gt;Improve through game days (such as 11.11 or black Friday)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Definition&lt;/li&gt;
  &lt;li&gt;Best Practices&lt;/li&gt;
  &lt;li&gt;Key AWS Services&lt;/li&gt;
  &lt;li&gt;Resource&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;721-security&quot;&gt;7.2.1 Security&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Design Principles
    &lt;ul&gt;
      &lt;li&gt;Apply security at all layers&lt;/li&gt;
      &lt;li&gt;Enable traceability&lt;/li&gt;
      &lt;li&gt;Automate response to security events&lt;/li&gt;
      &lt;li&gt;Focus on securing your system&lt;/li&gt;
      &lt;li&gt;Automate security best practices&lt;/li&gt;
      &lt;li&gt;Shared responsibility&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Data protection:
    &lt;ul&gt;
      &lt;li&gt;Definition: before you begin to architect security practices across your environment, basic data classification should be in place. You should organise and classify your data into segments such as publicly avaiable, available to only members of your organisation, available to only certain members of your organisation, available only to the board. You should also implement a least privilege access system so that people are only able to access what they need. However, most importantly, you should encrypt everything where possible, whether it be at rest or in transit. Best practice:
        &lt;ul&gt;
          &lt;li&gt;key encryption&lt;/li&gt;
          &lt;li&gt;versioning&lt;/li&gt;
          &lt;li&gt;AWS never initiates the movement of data between regions unless client explicitly apply that.
            &lt;ul&gt;
              &lt;li&gt;Questions:
                &lt;ul&gt;
                  &lt;li&gt;How are you encrypting and protecting your data at rest?&lt;/li&gt;
                  &lt;li&gt;How are you encrypting and protecting your data in transit? (SSL)&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: You can encrypt your data both in transit and at rest using; ELB, EBS, S3 &amp;amp; RDS&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Privilege management:
    &lt;ul&gt;
      &lt;li&gt;Definition: Privilege Management ensures that only authorized and authenticated users are able to access your resources, and only in a manner that is intended. It can include
        &lt;ul&gt;
          &lt;li&gt;Access Control Lists (ACLs)&lt;/li&gt;
          &lt;li&gt;Role Based Access Controls&lt;/li&gt;
          &lt;li&gt;Password Management (pw rotation policies)&lt;/li&gt;
          &lt;li&gt;Questions:
            &lt;ul&gt;
              &lt;li&gt;How are you protecting access to and use of the AWS root account credentials&lt;/li&gt;
              &lt;li&gt;How are you defining roles and responsibilities of system users to control human access tthe AWS Management Console and APIs? (Using groups)&lt;/li&gt;
              &lt;li&gt;How are you limiting automated access (such as from applications, scripts, or third-party tools or services) to AWS resources? (Using Roles)&lt;/li&gt;
              &lt;li&gt;How are you managing keys and credentials?&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: IAM, MFA&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Infrastructure protection:
    &lt;ul&gt;
      &lt;li&gt;Definition: Definition: Outside of Cloud, this is how you protect your data center. RFID controls, security, lockable cabinets, CCTV etc. Within AWS they handle this, so really infrastructure protection exists at a VPC level.
        &lt;ul&gt;
          &lt;li&gt;Questions:
            &lt;ul&gt;
              &lt;li&gt;How are you enforcing network and host-level boundary protection?&lt;/li&gt;
              &lt;li&gt;How are you enforcing AWS service level protection?&lt;/li&gt;
              &lt;li&gt;How are you protecting the integrity of the operating systems on your EC2 instances.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: VPC&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Detective controls:
    &lt;ul&gt;
      &lt;li&gt;Definition: You can use detective controls to detect or identify a security breach. AWS Services to achieve this include;
        &lt;ul&gt;
          &lt;li&gt;AWS CloudTrail&lt;/li&gt;
          &lt;li&gt;Amazon CloudWatch&lt;/li&gt;
          &lt;li&gt;AWS Config&lt;/li&gt;
          &lt;li&gt;Amazon S3&lt;/li&gt;
          &lt;li&gt;Amazon Glacier&lt;/li&gt;
          &lt;li&gt;Questions:
            &lt;ul&gt;
              &lt;li&gt;How are you capturing and analyzing AWS logs?&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: AWS CloudTrail, Amazon CloudWatch, AWS Config, Amazon S3, Amazon Glacier.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Resource&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;722-reliability&quot;&gt;7.2.2 Reliability&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Definition: covers the ability of a system to recover from service or infrastructure outages/disruptions as well as the ability to dynamically acquire computing resources to meet demand.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Design Principles:&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Test recovery procedures. &lt;a href=&quot;https://github.com/Netflix/SimianArmy&quot;&gt;Netflix SimianArmy (chaos monkey)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Automatically recover from failure&lt;/li&gt;
      &lt;li&gt;Scale horizontally to increase aggregate system availability&lt;/li&gt;
      &lt;li&gt;stop guessing capacity&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3 Areas&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Foundations
    &lt;ul&gt;
      &lt;li&gt;Best practice:
        &lt;ul&gt;
          &lt;li&gt;AWS will handles most of the foundations for you. The cloud is desinged to be essentially limitless meaning that AWS handle the networking and compute requirements themselves. However they do set service limits to stop customers from accidentally over-provisioning resources.&lt;/li&gt;
          &lt;li&gt;Questions:
            &lt;ul&gt;
              &lt;li&gt;How are you managing AWS service limits for your account?&lt;/li&gt;
              &lt;li&gt;How are you planning your network topology on AWS?&lt;/li&gt;
              &lt;li&gt;Do you have an escalation path to deal with technical issue?&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: IAM, VPC&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Change management
    &lt;ul&gt;
      &lt;li&gt;Best practices:
        &lt;ul&gt;
          &lt;li&gt;Questions:
            &lt;ul&gt;
              &lt;li&gt;How does your system adapt to changes in demand?&lt;/li&gt;
              &lt;li&gt;How are you monitoring AWS resources?&lt;/li&gt;
              &lt;li&gt;How are you executing change management?&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: AWS CloudTrail&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Failure management
    &lt;ul&gt;
      &lt;li&gt;Best practices:
        &lt;ul&gt;
          &lt;li&gt;With Cloud, you should always architect your systems with the assumptions that failure will occur. YOu should become aware of these failures, how they occured, how to repond to them and then plan on how to prevent these from happening again.&lt;/li&gt;
          &lt;li&gt;Questions:
            &lt;ul&gt;
              &lt;li&gt;How are you backing up your data?&lt;/li&gt;
              &lt;li&gt;How does your system withstand component failures?&lt;/li&gt;
              &lt;li&gt;How are you planning for recovery?&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: AWS CloudFormation&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Best Practices&lt;/li&gt;
  &lt;li&gt;Key AWS Services&lt;/li&gt;
  &lt;li&gt;Resource&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;723-performance-efficiency&quot;&gt;7.2.3 Performance Efficiency&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Design Principles
    &lt;ul&gt;
      &lt;li&gt;Democratize advanced technologies: you don’t need to become an export on no-sql in order to use dynamo db. AWS handles the complexity for you and you at the begnning just need to learn how to use it.&lt;/li&gt;
      &lt;li&gt;Go global in minutes.&lt;/li&gt;
      &lt;li&gt;Use server-less architecture&lt;/li&gt;
      &lt;li&gt;Expriment more often&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Compute
    &lt;ul&gt;
      &lt;li&gt;Definition&lt;/li&gt;
      &lt;li&gt;Best Practices:
        &lt;ul&gt;
          &lt;li&gt;serverless&lt;/li&gt;
          &lt;li&gt;Questions
            &lt;ul&gt;
              &lt;li&gt;How do you select the appropriate instance type for your system?&lt;/li&gt;
              &lt;li&gt;How do you ensure that you continue to have the most appropriate instance type as new instance types and features are introduced?&lt;/li&gt;
              &lt;li&gt;How do you monitor your instances post launch to ensure they are performing as expected?&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: Autoscaling&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Storage
    &lt;ul&gt;
      &lt;li&gt;Best practices, consider your storage solution based on the following factors
        &lt;ul&gt;
          &lt;li&gt;Access Method - Block, File or Object&lt;/li&gt;
          &lt;li&gt;Patterns of Access - Random or Sequential&lt;/li&gt;
          &lt;li&gt;Throughput Required&lt;/li&gt;
          &lt;li&gt;Frequency of Access - Online, Offline or Archival&lt;/li&gt;
          &lt;li&gt;Frequency of Update - Worm, Dynamic&lt;/li&gt;
          &lt;li&gt;Availability Constants&lt;/li&gt;
          &lt;li&gt;Durability Constraints&lt;/li&gt;
          &lt;li&gt;At AWS, storage is virtualized. With S3 you can have 11*9’s durability, cross Region Replication etc. With EBS you can choose between different storage mediums (such as SSD, Magnetic, PIOPS etc). You can also easily move volumes between the different types of storage mediums.&lt;/li&gt;
          &lt;li&gt;Questions
            &lt;ul&gt;
              &lt;li&gt;How do you select the appropriate storage solution for your system?&lt;/li&gt;
              &lt;li&gt;How do you ensure that you continue to have the most appropriate storage solution as new storage solutions and features are launched?&lt;/li&gt;
              &lt;li&gt;How do you monitor your storage solution to ensure it is performing as expected?&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: EBS, S3, Glacier&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Database
    &lt;ul&gt;
      &lt;li&gt;Best practice: do you need database consistency, do you need high availability, do you need No-SQL, do you need DR etc?
        &lt;ul&gt;
          &lt;li&gt;questions
            &lt;ul&gt;
              &lt;li&gt;How do you select the appropriate database solution for your system?&lt;/li&gt;
              &lt;li&gt;How do you ensure that you continue to have the most appropriate database solution and features as new database solution and features are launched?&lt;/li&gt;
              &lt;li&gt;How do you monitor your databases to ensure peformance is as expected?&lt;/li&gt;
              &lt;li&gt;How do you ensure the capacity and throughput of your datbases matches demand?&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: RDS DynamoDB, Redshift&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Space-time trade-off
    &lt;ul&gt;
      &lt;li&gt;Best practices: you can use services such as RDS to add read replicas, reduing the load on your database and creating multiple copies of the database. This helps to lower latency. You can use Direct Connect to provide predictable latency between your HQ and AWS. You can use the global infrastructure to have multiple copies of your environment, in regions that is closest to your customer base. You can also use caching services such as ElasticCache or CloudFront to reduce latency.
        &lt;ul&gt;
          &lt;li&gt;Questions
            &lt;ul&gt;
              &lt;li&gt;How do you select the appropriate proximity and caching solutions for your system?&lt;/li&gt;
              &lt;li&gt;How do you ensure that you continue to have the most appropriate proximity and caching solutions as new solutions are launched?&lt;/li&gt;
              &lt;li&gt;How do you monitor your proximity and caching solutions to ensure performance is as expected?&lt;/li&gt;
              &lt;li&gt;How do you ensure that the proximity and caching solutions you have matches demand?&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: CloudFront, ElasticCache, Direct Connect, RDS Read Replicas etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;724-cost-optimization&quot;&gt;7.2.4 Cost Optimization&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Design Principles&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Matched supply and demand
    &lt;ul&gt;
      &lt;li&gt;Best practices: Don’t over provision or udner provision, instead as demand grows, so shoud your supply of compute resources. Think of things like Autoscaling which scale with demand. Similarly in a server-less context, use services such as Lambda that only execute (or respond) when a request (demand) comes in. Services such as CloudWatch can also help you keep track as to what your demand is.&lt;/li&gt;
      &lt;li&gt;Questions:
        &lt;ul&gt;
          &lt;li&gt;How do you make sure your capacity matches but does not substantially exceed what you need?&lt;/li&gt;
          &lt;li&gt;How are you optimizing your usage of AWS services?&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: Autoscaling.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cost-effective resources
    &lt;ul&gt;
      &lt;li&gt;Best practices: Using the correct instance type can be key to cost savings. For example you might have a reporting process that is running on a t2-Micro and it takes 7 hours to complete. That same process could be run on an m4.2xlarge in a manner of minutes. The result remains the same but the t2.micro is more expensive because it ran for longer. A well architected system will use the most cost efficient resources to reach the end business goal.
        &lt;ul&gt;
          &lt;li&gt;Questions:
            &lt;ul&gt;
              &lt;li&gt;Have you selected the appropriate resource types to meet your cost targets?&lt;/li&gt;
              &lt;li&gt;Have you selected the appropriate pricing model to meet your cost targets?&lt;/li&gt;
              &lt;li&gt;Are there managed services (higher-level services than Amazon EC2, Amazon EBS, and Amazon S3) that you can use to improve your ROI?&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: ECS (reserved instances), AWS Trusted Advisor&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Expenditure awareness
    &lt;ul&gt;
      &lt;li&gt;Best practices: With cloud you no loger have to go out and get quotes on physical servers, choose a supplier, have those resources delivered, installed, made available etc. You can provision things within seconds, however this comes with its own issues. Many organisatoins have different teams, each with their own AWS accounts. Being awware of what each team is spending and where is crucial to any well architected system. You can use cost allocation tags to track this, billing alerts as well as consolidated billing.
        &lt;ul&gt;
          &lt;li&gt;Questions
            &lt;ul&gt;
              &lt;li&gt;What access controls and procedures do you have in place to govern AWS costs&lt;/li&gt;
              &lt;li&gt;How are you monitoring usage and spending&lt;/li&gt;
              &lt;li&gt;How do you decommission resources that you no longer need, or stop resources that are temporarily not needed.&lt;/li&gt;
              &lt;li&gt;How do you  consider data-transfer charges when designing your architecture.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: cloudWatch Alarms, SNS&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Optimizing over time
    &lt;ul&gt;
      &lt;li&gt;Best practices: AWS moves FAST. There are hundreds of new services (and potentially 1000 new sercies this year). A service that you chose yesterday may not be the best service to be using today. For exmaple consider MYSQL RDS, Aurora was launched at re:invent 2014 and is now out of preview. Aurora may be a better option now for your business because of its performance and redundancy. YOu should keep track of the changes made to AWS and constantly re-evalutate your existing architecture. You can do this by subscribing to the AWS blog and using services such as Trustred Advisor.
        &lt;ul&gt;
          &lt;li&gt;Questions
            &lt;ul&gt;
              &lt;li&gt;How do you manage and/or reconsider the adoption of new services?&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: AWS Blog, AWS Trusted Advisor.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;725-operational-excellence&quot;&gt;7.2.5 Operational Excellence&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Design Principles
    &lt;ul&gt;
      &lt;li&gt;Peform operatoins with code&lt;/li&gt;
      &lt;li&gt;Align operations processes to business objectives&lt;/li&gt;
      &lt;li&gt;Make regular, small, incremental changes&lt;/li&gt;
      &lt;li&gt;Test for responses to unexpected events&lt;/li&gt;
      &lt;li&gt;Learn from operational events and failures&lt;/li&gt;
      &lt;li&gt;Keep operations procedures current&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Preparation
    &lt;ul&gt;
      &lt;li&gt;Best practices: Effective preparation is required to drive operational execellence. Operatons checklists will ensure that workloads are ready for production operation, and prevent unintentional production promotion without effective preparation. Workdloads should have:
        &lt;ul&gt;
          &lt;li&gt;Runbooks - operatoins guidance that operations teams can refer to so they  can perform normal daily tasks&lt;/li&gt;
          &lt;li&gt;Playbooks - guidance for responding to unexpected operational events. Playbooks should include response plans, as well as escalation paths and stakholder notifications.&lt;/li&gt;
          &lt;li&gt;Several methods can be used
            &lt;ul&gt;
              &lt;li&gt;CloudFormation, is used to ensure that environments contain all required resources when deployed in production, and that the configuration of the environment is based on tested best practices, which reduces the opportunity for human error.&lt;/li&gt;
              &lt;li&gt;Auto Sclaing, will allow workloads to automatically respond when business-related events affect operational needs&lt;/li&gt;
              &lt;li&gt;AWS config, have the mechanism to automatically track and respond to changes in your AWS worklads and environments&lt;/li&gt;
              &lt;li&gt;Tagging, to make sure all resources in a workload can be easily identified when needed during operations and response.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Questions:
            &lt;ul&gt;
              &lt;li&gt;What best practices for cloud operations are you using&lt;/li&gt;
              &lt;li&gt;How are you doing configuration management for your workload.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: AWS Config, AWS Service Catalog, Auto Scaling, SQS.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Operation
    &lt;ul&gt;
      &lt;li&gt;Best practices: Operations should be standardized and manageable on a routine basis. The focus should be on automation, small frequent changes, regular quality assuarance testing, and defined mechanisms to track, autdit, roll back, and review changes. Changes should not be large and infrequent, they should not require scheduled downtime, and they shoould not require manual execution. A wide range of logs and metrics that are based on key operational indicators for a workload should be collected and reviewed to ensure continuoues operations. In AWS you can setup a continuous integration / continuous deployment (CI/CD) pipeline (e.g., source code repository, build systems, deployment and testing automation). Release management processes, whether manual or automated, should be tested and be based on small incremental changes, and tracked versions. You should be able to revert changes that introduce operational issues without causing operational impact.
        &lt;ul&gt;
          &lt;li&gt;Questions:
            &lt;ul&gt;
              &lt;li&gt;How are you evolving your workload while minimizing the impact of change?&lt;/li&gt;
              &lt;li&gt;How do you monitor your workload to ensure it is operating as expected?&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: CodeCommit, CodeDeploy, CodePipeline, AWS SDK, AWS CloudTrail.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Response
    &lt;ul&gt;
      &lt;li&gt;Responses to unexpected operational events should be automated. This is not just for alerting, but also for mitigation, remediation, rollback, and recovery. Alerts should timely, and should invoke escalations when responses are not adequate to mitiage the impage of opeational events. Quality assurance mechanisms should be in place to automatically roll back failed deployments. Responses should follow a apre-defined playbook that includes stakeholders, the escalation process, and procedures. Escalation paths should be defined and include both functional and hierarchical escalation capabilities. Hierarchical escalation should be automated, and escalated priority should result in stakeholder notifications. In AWS, there are several mechanisms to ensure both appropriate alerting and notification in response to unplanned operational events, as well as automated responses.
        &lt;ul&gt;
          &lt;li&gt;Questions:
            &lt;ul&gt;
              &lt;li&gt;How do you respond to unplanned operational events&lt;/li&gt;
              &lt;li&gt;How is escalation managed when responding to unplanned operational events&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Key AWS Services: CloudWatch&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;img_middle_hg&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/-21_AWS/2017-10-01-AWS Associate Architect/kinesis.png&quot; alt=&quot;kinesis&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;7-cloud-formation&quot;&gt;7 Cloud Formation&lt;/h2&gt;

&lt;p&gt;There is cloud Formation guru course 10-12 hour&lt;/p&gt;

&lt;h3 id=&quot;70-infrastructure-as-code&quot;&gt;7.0 Infrastructure as Code&lt;/h3&gt;

&lt;p&gt;Infrastructure process&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Configuration&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Provisioning&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Deployments&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Infrastructure software tools&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Version Control&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Testing&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CI/CD&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cloud Formation: is an Infrastructure of Code tool for AWS, which can be used for the life cycle of resources, such as creating, updating and deleting.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;701-template&quot;&gt;7.0.1 Template&lt;/h4&gt;

&lt;p&gt;Infrastructure code&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;na&quot;&gt;AWSTemplateFormatVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;date&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# 2010-09-09&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;String,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;... template metadata ...,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Parameters&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;... set of parameters ...,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Mappings&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;   
    &lt;span class=&quot;s&quot;&gt;... set of mappings ...,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Conditions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;... set of conditions ...,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Transform&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;... set of transforms ...,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;// the only required part&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;Ec2Instance&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;AWS::EC2::Instance'&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;InstanceType&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;t2.micro&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ImageId&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ami-0b419c3a4b01d1859&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Name&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;A simple example&lt;/span&gt;     
&lt;span class=&quot;na&quot;&gt;Outputs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;... set of outputs ...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;702-stack&quot;&gt;7.0.2 Stack&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Stack: an instance of template, a collection of AWS resources that you can mange as a single unit. Executing a template, it creates a stack, updating template, it update a stack.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;703-change-set&quot;&gt;7.03 Change Set&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Change set, allows you to &lt;strong&gt;Preview&lt;/strong&gt; the change the updated stack will perform to verify if the change is in line with their expectations and if yes then procceed with the update. For example, rename a RDS will have the change sets of &lt;code&gt;Create a new one&lt;/code&gt; and &lt;code&gt;Delete the old one&lt;/code&gt;, this gives the info of poential data loss.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;CloudFormation cost: no additional charge for AWS CloudFormation, you only pay for the AWS resources that are created.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;71-intrinsic-functions&quot;&gt;7.1 Intrinsic Functions&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Intrinsic Functions: built-in functions that help you manage your stacks.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;s&quot;&gt;Fn::Join [&quot;:&quot;, [a,b,c]]&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# &quot;a:b:c&quot;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;!Join&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]]&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# !是简写&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;na&quot;&gt;Resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;Ec2Instance&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;AWS::EC2::Instance'&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;InstanceType&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;t2.micro&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ImageId&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ami-0b419c3a4b01d1859&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Name&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;!Join&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;EC2&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Instance&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Fn&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Join&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# EC2 Instance with Fn Join   &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;72-multiple-resources&quot;&gt;7.2 Multiple Resources&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;na&quot;&gt;Resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;Ec2Instance&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;AWS::EC2::Instance'&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;InstanceType&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;t2.micro&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ImageId&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ami-0b419c3a4b01d1859&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Name&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;!Join&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;EC2&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Instance&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Fn&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Join&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# EC2 Instance with Fn Join&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;SecurityGroups&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;!Ref&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MySecurityGroup&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;MySecurityGroups&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;AWS::EC2::SecurityGroup'&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;GroupDescription&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Enable SSH access via port 22&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;SecurityGroupIngress&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;IpProtocol&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tcp&lt;/span&gt;
                  &lt;span class=&quot;na&quot;&gt;FromPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;22'&lt;/span&gt;
                  &lt;span class=&quot;na&quot;&gt;ToPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;22'&lt;/span&gt;
                  &lt;span class=&quot;na&quot;&gt;CidrIp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0.0.0.0/0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;73-pseudo-parameters&quot;&gt;7.3 Pseudo Parameters&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Pesudo Paramters are predefined by CloudFormation, similar to Environment Variables. Reference the parameters with the &lt;code&gt;Ref&lt;/code&gt; intrinsic Function.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;s&quot;&gt;AWS::AccountId&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;# Returns the AWS account ID of the account&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;AWS::NotificationARNs&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# Returns the list of notification ARNs for the current stack&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;AWS::StackId&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;# Returns the ID of the stack&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;AWS::StackName&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;# Returns the name of the stack&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;AWS::Region&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;# returns a string representing the AWS Region in which the resource is being created&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;na&quot;&gt;Resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Ec2Instance&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;AWS::EC2::Instance'&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;InstanceType&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;t2.micro&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ImageId&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ami-0b419c3a4b01d1859&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;Tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Name&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;!Join&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;EC2&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Instance&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
              &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;!Ref&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;AWS::Region&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# EC2 Instance with Fn Join&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;SecurityGroups&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;!Ref&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MySecurityGroup&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;MySecurityGroup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;AWS::EC2::SecurityGroup'&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;GroupDescription&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Enable SSH access via port 22&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;SecurityGroupIngress&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;IpProtocol&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tcp&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;FromPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;22'&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;ToPort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;22'&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;CidrIp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0.0.0.0/0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;74-mappings&quot;&gt;7.4 Mappings&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Mapping: enable you to use an input value to determine another value. Use intrinsic functions &lt;code&gt;FindInMap&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;na&quot;&gt;Mappings&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;RegionMap&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;us-east-1&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;AMI&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ami-76f0061f&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;us-west-1&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;AMI&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ami-655a0a20&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;Resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;Ec2Instance&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;AWS::EC2::Instance&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;ImageId&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;!FindInMap&lt;/span&gt;
                &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;RegionMap&lt;/span&gt;
                &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;!Ref&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;AWS::Region&quot;&lt;/span&gt;
                &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;AMI&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;75-input-parameters&quot;&gt;7.5 Input Parameters&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Input Parameters: enable us to input custom values to our template. They are defined within the top level Parameters section. Supported Parameter Types: String, Number, List&lt;Number&gt;, CommaDelimitedList, WS-specific types (AWS::EC2::Image::Id), Systems Manager Parameter types.&lt;/Number&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;na&quot;&gt;Parameters&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;InstTypeParam&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;String&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Default&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;t2.micro&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;AllowedValues&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;t2.micro&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;m1.small&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;m1.large&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;EC2 Instance Type&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;Ec2Instance&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;AWS::EC2::Instance&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;InstanceType&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;!Ref&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;InstTypeParam&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;ImageId&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ami-2f726546&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;76-outputs&quot;&gt;7.6 Outputs&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Outputs enable us to get access to information about resources within a stack. For example create an EC2 instance, and output the Public IP or DNS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;na&quot;&gt;Outputs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;InstanceDns&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;The Instance Dns&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;!GetAtt&lt;/span&gt;
                &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Ec2Instance&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# The logic name (also called logic ID) of the resource that contains the attribute that you want&lt;/span&gt;
                &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PublicDnsName&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# The name of the resource-specific attribute whose value you want.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;77-change-sets&quot;&gt;7.7 Change sets&lt;/h3&gt;

&lt;h3 id=&quot;78-whats-next&quot;&gt;7.8 What’s next&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Nested Stacks;&lt;/li&gt;
  &lt;li&gt;Stack Sets;&lt;/li&gt;
  &lt;li&gt;Creation, Update, Deletion Policies&lt;/li&gt;
  &lt;li&gt;and more…&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;8-additional-exam-tips-2018&quot;&gt;8 Additional Exam Tips 2018&lt;/h2&gt;

&lt;p&gt;For big data: Elastic Map Reduce for Big Data processing, Redshift for business intelligence.&lt;/p&gt;

&lt;p&gt;Orchestration service that uses chef, chef consists of recipes to maintain a consistent state. Look for the term “chef” or “recipes” or “cook books” and think OpsWorks.&lt;/p&gt;

&lt;h3 id=&quot;81-consolidate-billing&quot;&gt;8.1 Consolidate Billing&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;CloudTrail:
    &lt;ul&gt;
      &lt;li&gt;Per AWS Account and is enabled per region&lt;/li&gt;
      &lt;li&gt;Can consolidate logs using an S3 bucket&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Exam tips
    &lt;ul&gt;
      &lt;li&gt;Consolidated billing allows you to get volume discounts on all your accounts&lt;/li&gt;
      &lt;li&gt;Unused reserved instances for EC2 are applied across the group&lt;/li&gt;
      &lt;li&gt;CloudTrail is on a per account and per region basis but can be aggregated in to a single bucket in the paying account.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;82-aws-organizations&quot;&gt;8.2 AWS Organizations&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What: is an account management service that enables you to consolidate multipe AWS accounts into an organization that you create and centrally manage. It is aviable in two feature sets: consolidated billing and All Features. It allosw you to
    &lt;ul&gt;
      &lt;li&gt;Centrally Manage Policies Across Multiple AWS Accounts, which means you can create groups for accounts and apply policies to them.&lt;/li&gt;
      &lt;li&gt;Control Access to AWS Services&lt;/li&gt;
      &lt;li&gt;Automate AWS Account Creation and Management&lt;/li&gt;
      &lt;li&gt;Consolidate Billing Across Multiple AWS Accounts&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;83-cross-account-access&quot;&gt;8.3 Cross Account Access&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What: Allow to separate AWS accounts for develop env and production env. Cross account access makes it easier for you to work productively within a multi-account (or multi-role) AWS environment by making it easy for you to switch roles within the AWS Management Console. You can now sign in the console using your IAM user name then switch the console to manage another manage another account without having to enter (or remember) another user name and password.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;84-resource-groups--tagging&quot;&gt;8.4 Resource Groups &amp;amp; Tagging&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What:
    &lt;ul&gt;
      &lt;li&gt;Tagging: key value pairs attached to AWS resources; metadata; tags can sometimes be inherited (such as Auoscaling, CloudFormation, and Elastic Beanstalk can creat other resources).&lt;/li&gt;
      &lt;li&gt;Resource Group: group your resources using the tags that are assigned to them. You can group resources that share one or more tags. Resource group contain info such as Region, Name, Health Checks; specific info suchas EC2 public &amp;amp; private IP address, ELB Port configuration and RDS database engine.
        &lt;ul&gt;
          &lt;li&gt;Classic Resource Groups&lt;/li&gt;
          &lt;li&gt;AWS Systems Manager&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;85-vpc-peering&quot;&gt;8.5 VPC Peering&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What: VPC Peering is simmple a connection between two VPCs that enables you to route traffic between them using private IP addresses. Instances in either VPC can communicate with each other as if they are within the same network. You can create a VPC peering conneciton between your own VPCs, or with a VPC in another AWS account within a &lt;strong&gt;Single Region&lt;/strong&gt;.
    &lt;ul&gt;
      &lt;li&gt;You cannot create a VPC peering connection between VPCs that have matching or overlapping CIDR blocks&lt;/li&gt;
      &lt;li&gt;You cannot create a VPC peering conneciton between VPCs in different regions.&lt;/li&gt;
      &lt;li&gt;NO Transitive Peering Supported.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;86-direct-connect&quot;&gt;8.6 Direct Connect&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What: network connection from your premises to AWS. It can estabilsh private connectivity between AWS and your datacenter, officer, or colocation environment, which in many cases can reduce your network costs, increase bandwitdth throughput, and provide a more consistent network experience than Internet-based connections.
    &lt;ul&gt;
      &lt;li&gt;Direct connect vs VPN: VPN connections can be configured in minutes and are a good solution if you have an immediate need, have low to modest bandiwdth requirements, and can tolerate the inherent variability in internet-based connectivity. While Direct Connect does not involve the internet; instead, it used dedicated, private network connections between your intranet and Amazon VPC.&lt;/li&gt;
      &lt;li&gt;Availble in
        &lt;ul&gt;
          &lt;li&gt;10 Gbps&lt;/li&gt;
          &lt;li&gt;1 Gbps&lt;/li&gt;
          &lt;li&gt;Sub 1Gbps can be purchased throught AWS Direct Connect Partners&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;87-security-token-service-sts&quot;&gt;8.7 Security Token Service (STS)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;what: grants users limited and temporary access to AWS resources. Users can come from three sources:
    &lt;ul&gt;
      &lt;li&gt;Federation (typically Active Directory): combining or joining a list of users in one domain (such as IAM) with a list of users in another domain (such as Active Directory, Facebook etc)&lt;/li&gt;
      &lt;li&gt;Identity Broker: A service that allows you to take an identity from point A and join it (federate it) to point B&lt;/li&gt;
      &lt;li&gt;Identity Store: services like Active Directory, Facebook, Google etc.&lt;/li&gt;
      &lt;li&gt;Identities: A user of service like Facebook etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;88-active-directory-integration&quot;&gt;8.8 Active Directory Integration&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;what:&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;89-aws-workspaces&quot;&gt;8.9 AWS Workspaces&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;what: a cloud-based replacement for a traditional desktop. A workspace is available as a bundle of compute resources, storage space, and software application access that allow a user to perform day-to-day tasks just like using a traditional desktop. A user can connect to a WorkSpace from any supported device (PC, Mac, Chromebook, iPad, Kindle Fire, or Android tablets) using a free Amazon WorkSpaces client application and credentials set up by an administrator, or their existing Active Directory credentials if Amazon WorkSpacees is intergrated with an existing Active Directory domain.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;810-elastic-container-service-ecs&quot;&gt;8.10 Elastic Container Service (ECS)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What: a highly scalable, fast, container management service that makes it easy to run, stop, and manage Docker containers on a cluster of EC2 instances. ECS lets you launch and stop container-based applications with simple API calls, allow you to get the state of your cluster from a centralized service, and gives you access to many familar Amazon EC2 features.
    &lt;ul&gt;
      &lt;li&gt;ECS Task: a cloud formation template for docker&lt;/li&gt;
      &lt;li&gt;ECS Service: an auto-sclaing groups for ECS&lt;/li&gt;
      &lt;li&gt;ECS Clusters: a logical grouping of container instances that you can place tasks.
        &lt;ul&gt;
          &lt;li&gt;Clusters can contain multiple different container instance types&lt;/li&gt;
          &lt;li&gt;Clusters are region-specific&lt;/li&gt;
          &lt;li&gt;Container instances can only be part of one cluster at a time&lt;/li&gt;
          &lt;li&gt;You can create IAM policies for your clusters to allow or restrct user’s access to specific clusters.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;ECS Scheduling
        &lt;ul&gt;
          &lt;li&gt;Serice Scheduler: ensures a certain number of tasks are contantly running and reschedules tasks when a task failes.&lt;/li&gt;
          &lt;li&gt;Custom Scheduler: create your own schedulers that meet your business needs.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;ECS Container Agent: allow container instances to connect to your cluster.&lt;/li&gt;
      &lt;li&gt;ECR: AWS version of Docker Registry&lt;/li&gt;
      &lt;li&gt;ECS Limits:
        &lt;ul&gt;
          &lt;li&gt;Soft Limits:
            &lt;ul&gt;
              &lt;li&gt;Clusters per region (default = 1000)&lt;/li&gt;
              &lt;li&gt;Instances per Cluster (default = 1000)&lt;/li&gt;
              &lt;li&gt;Services per Cluster (default = 500)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Hard Limits:
            &lt;ul&gt;
              &lt;li&gt;One Load Balancer per Service&lt;/li&gt;
              &lt;li&gt;1000 Tasks per Service (the “desired count”)&lt;/li&gt;
              &lt;li&gt;Max. 10 Containers per Task Definition&lt;/li&gt;
              &lt;li&gt;Max. 10 Tasks per instance (host)&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Security groups operate at the instance level, not a task or container level.&lt;/li&gt;
      &lt;li&gt;IAM with ECS to restrict access.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;e&quot;&gt;E&lt;/h3&gt;

&lt;p&gt;Mega quiz&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Amazon SWF is designed to help users coordinate sync and async tasks.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In RDS, what is the maximum value I can set for my backup retention period? 35 days&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Automated backups are enabled by default for a new DB Instance? True. The default backup retention period is one day if you create the DB instance using the Amazon RDS API or the AWS CLI, or seven days if you create the DB instance using the AWS Console.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Amazon RDS does not currently support increasing storage on a &lt;em&gt;*SQL server&lt;/em&gt; Db instance&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In what circumstances would I choose provisioned IOPS in RDS over standard storage&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In a default VPC, all Amazon EC2 instances are assigned 2 IP addresses at launch, what are these? Private IP Address &amp;amp; Public IP Address&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can I “force” a failover for any RDS instance that has Multi-AZ configured? True.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can conduct your own vulnerability scans within your own VPC without alerting AWS first? False.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reserved instances are available for multi-AZ deployments. true.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can RDP or SSH in to an RDS instance to see what is going on with the operating system. False&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What are the four levels of AWS premium support? Basic, Developer, Business, Enterprise.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When using a custom VPC and placing an EC2 instance in to a public subnet, it will be automatically internet accessible (ie you do not need to apply an elastic IP address or ELB to the instance). False, you need to assign public ip to the EC2.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the underlying Hypervisor for EC2? Xen.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The AWS platform is certified PCI DSS 1.0 compliant. true.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How many copies of my data does RDS - Aurora store by default? Amazon Aurora is designed to offer greater than 99.99% availability, replicating 6 copies of your data across 3 Availability Zones and backing up your data continuously to Amazon S3.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the difference between Elastic Beanstalk &amp;amp; CloudFormation? They’re actually pretty different. Elastic Beanstalk is intended to make developers’ lives easier. CloudFormation is intended to make systems engineers’ lives easier.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Elastic Beanstalk is a PaaS-like layer ontop of AWS’s IaaS services which abstracts away the underlying EC2 instances, Elastic Load Balancers, auto scaling groups, etc. This makes it a lot easier for developers, who don’t want to be dealing with all the systems stuff, to get their application quickly deployed on AWS. It’s very similar to other PaaS products such as Heroku, EngineYard, Google App Engine, etc. With Elastic Beanstalk, you don’t need to understand how any of the underlying magic works.&lt;/p&gt;

&lt;p&gt;CloudFormation, on the other hand, doesn’t automatically do anything. It’s simply a way to define all the resources needed for deployment in a huge JSON file. So a CloudFormation template might actually create two ElasticBeanstalk environments (production and staging), a couple of ElasticCache clusters, a DyanmoDB table, and then the proper DNS in Route53. I then upload this template to AWS, walk away, and 45 minutes later everything is ready and waiting. Since it’s just a plain-text JSON file, I can stick it in my source control which provides a great way to version my application deployments. It also ensures that I have a repeatable, “known good” configuration that I can quickly deploy in a different region.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;What is the maximum response time for a Business Level Premium Support Case? 1 hour.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When I create a new security group, all outbound traffic is allowed by default. True.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Auditing user access/API calls etc across the entire AWS estate can be achieved by using &lt;code&gt;CloudTrail&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In RDS what is the maximum size for a Microsoft SQL Server DB Instance with SQL Server Express edition? 10GB per database.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What are the valid methodologies for encrypting data on S3. Server Side Encryption (SSE)-S3, SSE-C, SSE-KMS or a client library such as Amazon S3 Encryption Client.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What function of an AWS VPC is stateless? Security groups are stateful, which means that return traffic is automatically allowed, regardless of any outbound rules. A network ACL is applied on a subnet level, and traffic is stateless. You need to allow both inbound and outbound traffic in order for EC2 instances in a network ACL to be able to communicate over a particular protocol.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Which of the following services allows you root access (ie you can login using SSH)? Elastic Map Reduce.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When trying to grant an amazon account access to S3 using access control lists what method of identification should you use to identify that account with? The email adrres or canonical account ID&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Which of the following is not supported by AWS Import/Export? Export to Amazon Glacier&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What are the different types of virtualization available on EC2? Para-Virtual (PV) &amp;amp; Hardware Virtual Machine (HVM)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Which of the following is a valid configuration type for AWS Storage gateway? Gateway-cached volumes, Gateway-stored volumes, Gateway-Virtual Tape Library&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;AWS Import/Export allows for the importation of large data sets, using external hard disks which are sent directly to amazon, therefore bypassing the internet&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Amazon’s SNS has the following subscribers; Lambda, SQS, HTTPS, Email, SMS&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You have a high performance compute application and you need to minimize network latency between EC2 instances as much as possible. What can you do to achieve this? Place an placement group within that AZ and place EC2 instances within that placement group.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Placement Groups can be created across 2 or more Availability Zones. False&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can add multiple volumes to an EC2 instance and then create your own RAID 5/RAID 10/RAID 0 configurations using those volumes. True.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You are creating your own relational database on an EC2 instance and you need to maximise IOPS performance. What can you do to achieve this goal? add multiple additional volumes with provisioned IOPS and then create a RAID 0 stripe across those volumes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Which of the services below do you get root access to? EC2 and Elastic Map Reduce.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When you create new subnets within a custom VPC, by default they can communicate with each other, across availability zones. True.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In order to enable encryption at rest using EC2 and Elastic Block Store you need to configure the encryption when creating EBS Volume&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can select a specific Availability Zone in which to place your DynamoDB Table? False. you can modify the region but cannot specify the availability zone.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When creating an RDS instance you can select which availability zone in which to deploy your instance. True, only if you did NOT selected a Multi-AZ deployment when creating the RDS instance&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Amazon’s Redshift uses which block size for its columnar storage? 1MB.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Which of the following is the responsibility of Amazon’s under the shared responsibility model? Data center security, Hypervisor patching, OS level patching for RDS.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In regards to EC2 which of the following is a customers responsibility under the shared responsibility model? Antivirus, OS level patches, application level patches. Customer responsibility will be determined by the AWS Cloud services that a customer selects. This determines the amount of configuration work the customer must perform as part of their security responsibilities. For example, services such as Amazon Elastic Compute Cloud (Amazon EC2), Amazon Virtual Private Cloud (Amazon VPC), and Amazon S3 are categorized as Infrastructure as a Service (IaaS) and, as such, require the customer to perform all of the necessary security configuration and management tasks. If a customer deploys an Amazon EC2 instance, they are responsible for management of the guest operating system (including updates and security patches), any application software or utilities installed by the customer on the instances, and the configuration of the AWS-provided firewall (called a security group) on each instance.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You are solutions architect working for a busy ecommerce store. Due to your organisations unique security requirements, you decide to utilize EC2 running a MySQL database, rather than using RDS. You need to architect this EC2 instance to maximise your disk IO. Which of the following would give you the best disk performance? RAID0. RAID0 for spped, RAID1 for redundancy, RAID5 for redundancy and speed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You are designing an AWS solution for a new customer and they want to use their active directory credentials in order to sign in to the AWS management console. What kind of authentication response is required in order for users to authenticate with the AWS security token service (STS)? Security Addertion Markup Language 2.0 (SAML 2.0)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You are creating a new VPC with 3 subnets in 3 separate availability zones. You require instances in each subnet to be able to communicate to each other by default. What additional steps should you take in order to achieve this objective? You do not need to do anything, by default all subnets can communicate with each other using the main route table.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You are designing a web application for a new social media start up and have recommended using DynamoDB for the database due to its superior performance. You need to ensure that your database has redundancy. What additional steps should you do? Nothing, DynamoDB all data is automatically replicated across multiple AZs.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You are designing an application for a furniture retailer. A component of the application takes pictures of the furniture for sale and generates thumb nail images which then need to be stored persistently. The business can tolerate it if some images are lost as they can be regenerated. The thumbnails will need to be retrieved immediately when the application requests them. What is the cheapest option to do this? Using RRS&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;AWS help provide protection against some forms of traditional network attacks, which are they? Port Scanning, Ip Spoofing, Man in the middle Attack&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You have three AWS accounts (A, B &amp;amp; C) which share data.  In an attempt to maximize performance between the accounts, you deploy the instances owned by these three accounts in “eu-west-1b”.  During testing, you find inconsistent results in transfer latency between the instances. Transfer between accounts A and B is excellent, but transfers between accounts B and C, and C and A, are slower.  What could be the problem ? The names of the AZs are randomly applied, so &lt;code&gt;eu-west-1b&lt;/code&gt; is not necessarily the same physical location for all three accounts.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;AWS snowball has replaced the old AWS import/export service&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A client who is using EC2 believes that someone other than approved administrators is trying to gain access to her Linux web app instances, and she asks what sort of network access logging can be added to the system. Which of the following might you recommend? Make usre of OS level logging tools such as iptables and log events to CloudWatch or S3.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You have a MySQl database running on an EC2 instance in a private subnet. You can connect via SSH, but you are unable to apply updates to the database server via the NAT instance. What might you do to remedy this problem? Ensure that “Source/Destination Checks” is disabled on the NAT instance.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Amazon SQS keeps track of all tasks and events in an application. False. with SQS, you must implment your own application-level tracking, especially if your application uses multiple queues.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When editing permissions (policies and ACLs), to whom does the concept of the “Owner” refer? The “Owner” refers to the identity and email address used to create the account AWS account.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Your company provides an online image recognition service and uses SQS to decouple system components. Your EC2 instances poll the image queue as often as possible to keep end-to-end throughput as high as possible, but you realize that all this polling is resulting in both a large number of CPU cycles and skyrocketing costs. How can you reduce cost without compromising service? Enable long polling by setting the ReceiveMessageWaitTimeSeconds to a number &amp;gt; 0.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You work for a popular media outlet about to release a story that is expected to go viral. During load testing on the website, you discover that there is read contention on the database tier of your application. Your RDS instance consists of a MySQL database on an extra large instance. Which two of the following approaches would be best to further scale this instance to meet the anticipated increase in traffic your viral story will generate? Use Elasticache to cache the frequently read, static data.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Following advice from your consultant, you have configured your VPC to use Dedicated hosting tenancy. A subsequent change to your application has rendered the performance gains from dedicated tenancy superfluous, and you would now like to recoup some of these greater costs. How do you revert to Default hosting tenancy?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You are developing a web application, and you are maintaining separate sets of resources for your alpha, beta, and release environments. Each version runs on Amazon EC2 with an EBS volume. You use Elastic Load Balancing to manage traffic and Amazon Route 53 to manage your domain. What’s the best way to check the health and status of all three groups of services simultaneously? Create a resource group containing each set of resources and view all threee environments from a singple, group dashboard.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You are a consultant planning to deploy DynamoDB across three AZs. Your lead DBA is concerned about data consistency. Which of the following do you advise the lead DBA to do? To ask the development team to code for strongly consistent reads. As the consultant, you will advise the CTO of the increased cost. Keep in mind DynamoDB maintan the consistency for users.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You successfully configure VPC Peering between VPC-A  and VPC-B. You then establish an IGW and a Direct-Connect connection in VPC-B. Can instances in VPC-A connect to your corporate office via the Direct-Connect service, and connect to the Internet via the IGW? VPC Peering doesn’t support edge to edge routing.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You’re building out a single-region application in us-west-2. However, disaster recovery is a strong consideration, and you need to build the application so that if us-west-2 becomes unavailable, you can fail-over to us-west-1. Your application relies exclusively on pre-built AMI’s. In order to share those AMI’s with the region you’re using as a backup, which process would you follow? TBC. Copy security group, permission manually.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The combined Value and Name for binary and large text must not excceed 400kb for DynamoDB&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;udemy-exam-set&quot;&gt;udemy exam set&lt;/h3&gt;

&lt;h3 id=&quot;s1-26&quot;&gt;S1 (26)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Autoscaling group&lt;/li&gt;
  &lt;li&gt;spot instance&lt;/li&gt;
  &lt;li&gt;Q2: One can use IAM DB authentication to access RDS instance from EC2 instance. With IAM DB authentication, you don’t need password, all you need is a authentication token.&lt;/li&gt;
  &lt;li&gt;Q3:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;AWS Budgets&lt;/strong&gt; gives you the ability to set custom budgets that alert you when your costs or usage execced your budgeted amount.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Cost Explorer&lt;/strong&gt; identifies areas that need further inquiry and see trends to understand your costs.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Cost Allocation Tags&lt;/strong&gt; makes it easier for you to categorize and track your aws costs.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q13: Route Origin AUthorization (ROA) to provision and advertise your application static ip to aws so your customer whitelist doesn’t need to change your application static ip.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Q15: You can use a uniq or pre-built AMI to a specific region only.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q16: Amazon DynamoDB Accelerator(DAX) can cache Amazon DynamoDB and increase reponse time from milliseconds to microseconds.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Q18: S3 have server-side and client-side encryption for data secuiryt.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q19: transferring data from EC2 to S3, Glacier, DynamoDB, SES, SQS, or SimgpleDB in the same AWS region has no cost at all.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Q20: when create or modify your DB instance to run as a Multi-AZ deployment, RDS automatically provision and maintains a synchronous &lt;code&gt;standby&lt;/code&gt; replicate in a different availability Zone. Updates to your DB instance are synchronously replicated across AZ to the standby in order to keep both in sync and protect your latest database updates against DB instance failure.
    &lt;ul&gt;
      &lt;li&gt;Read replica provides an asynchronous replication instead of synchronous. Read replica is only available in Aurora, MySQL, MariaDB, and PostgreSQL database engines.&lt;/li&gt;
      &lt;li&gt;Dynamo DB doesn’t have read replica feature.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q25: Enhanced Monitoring in RDS give metrics in DB for processes or threads that use DB&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q29: When an instance fails within an auto scaling group, ELB will stop sending traffic to the EC2 instace and auto scaling group will replace it with a new instance.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Q30: &lt;strong&gt;SAML&lt;/strong&gt;,
    &lt;ul&gt;
      &lt;li&gt;setup federation proxy or an identity provider&lt;/li&gt;
      &lt;li&gt;setup aws security token service to generate temp tokens&lt;/li&gt;
      &lt;li&gt;config iam role&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q32: &lt;strong&gt;Workload management(WLM)&lt;/strong&gt;, in amazon redshift, you use workload management (WLM) to define the number of query queues that are available and how queries are routed to those queues for processing.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q34: &lt;strong&gt;Amazon Redshift Enhanced VPC Routing&lt;/strong&gt;, when you use amazon regshift enhanced VPC routing, amazon redshift forces all COPY and UNLOAD traffic between your cluster and your data repositories through your Amazon VPC. By using Enhanced VPC Routing, you can use standard VPC features, such as VPC security groups, network access control lists, VPC endpoint. You can also use VPC flow logs to monitor COPY and UNLOAD traffic.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q35: EBS can be attached to one EC2 instance at a time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q38: if your spot instance is termianted or stopped by Amazon EC2 in the first instacne hour, you will not be charged for that usage. If the spot price excceeds your maxim spot price config, it will be terminated automatically by AWS.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q39: how to protect lambda from traffic spikes: enable throttling limits and result caching in API gateway.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q41: One need to install CloudWatch Agent in EC2 in order to collect memory and disk utilization data. enhanced monitoring option is for RDS not for ECs.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q42: TBC&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q44: You can still read and write to the EBS volume while you are taking snapshot of the EBS volume.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Q48: EC2 instance termination policy.
    &lt;ul&gt;
      &lt;li&gt;the subnet that has the most number of instances&lt;/li&gt;
      &lt;li&gt;oldest launch configuration&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q49: SSD for small random I/O; HDD for large random IO.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q52: using Amazon MQ when migrated a previous message service use industry standard messagping API&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q54: Aurora to direct high capacity instances to low-capacity instances. TBC.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q57: high performance key-value storage: DynamoDB and ElastiCache&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q60: reserverd instance is not a physical instance, but rather a billing discount on on-demand instance.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q64: REDIS, TBC.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Q65: AWS shield provides a high level of protection against attack targeting your applications running on EC2, ELB, CloudFront, Route53. The protection include DDOS.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;s2-36&quot;&gt;S2 (36)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Q1: AWS OpsWorks (configuration management service to automate configuration of your servers) 3 offering
    &lt;ul&gt;
      &lt;li&gt;Chef Automate&lt;/li&gt;
      &lt;li&gt;Puppet Enterprise&lt;/li&gt;
      &lt;li&gt;Stacks&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Q7: Lambda deploy strategy
    &lt;ul&gt;
      &lt;li&gt;Canary: two customized segments&lt;/li&gt;
      &lt;li&gt;Linear&lt;/li&gt;
      &lt;li&gt;All-at-once&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q8: VPC peering, direct connect VPN: VPC peering connection is not transistive&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q9: CloudWatch can send alarms that automatically stop, terminate, reboot, or recover the EC2 instance.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q12: IAM provide identity providers, with which, you can manage your user identities outside of AWS and give these external user identities permission to use AWS resources in your account.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q13: S3 Standard - Infrequent Access storage(Standard - IA): high avaialbility (99.9% vs 99.99% standard S3).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q14: TBC&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q18: EBS RAID backup TBC&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q21: encryption: AWS Storage Gateway, Amazon Glacier encrypts data at rest by default&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q23: Perfect Forward Secrecy: CloudFront and Elastic Load Balancing are using perfect forward secrecy encryption.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q25: DynamoDB scales capacity automatically.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q31: EBS volums can only be attached to EC2 in the same AZ. EBS volumes support live configuration changes while in production which means you can modify the volume type, volume size and IOPS capacity without service interruptions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q34: Application load balancer or cloudFront supports SNI(Service Name Indication) feature.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Q35: In order to host a static website in S3, you need
    &lt;ul&gt;
      &lt;li&gt;The S3 bucket name must be the same as the domain name&lt;/li&gt;
      &lt;li&gt;A registered domain name&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q36: SWF and SQS both allow one to create decoupled architecture&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Q37: ENI(elastic network interface) is a virtual network card, you can attach it to an EC2 instance in the following ways
    &lt;ul&gt;
      &lt;li&gt;When it is running (hot attach)&lt;/li&gt;
      &lt;li&gt;When it is stopped (warm attach)&lt;/li&gt;
      &lt;li&gt;When the instance is being launched (cold attach)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q40: Route53 enable failover to a static S3 website bucket or cloudfront distribution.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Q41: DynamoDB use case
    &lt;ul&gt;
      &lt;li&gt;managing web sessions. item has TTL and is deleted automatically in DynamoDB when it TTL expires.&lt;/li&gt;
      &lt;li&gt;Storing metadata for Amazon S3 Objects&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q42: AWS Snowball cannot store more than 80TB data while AWS Snowball Edge can.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q43: STS(Security Token Service) is the service that you can use to create and provide trusted users with temporary security credentials.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q44: Amazon DLM(Data Lifecycle Manager) is used to automate the creation, retention, and deletion of snapshots taken to back up your amazon EBS volumes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q45: TBC&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q47: Network ACL Rules are evaluated by rule number, from lowest to hightest and executed immediately when a matching allow/deny rule is found.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q48: there is a soft limit of 20 EC2 instances per region. Submit an Amazon EC2 instance request form in order to lift this limmit.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q49: EBS cannot tolerate an AZ failure since all EBS are stored and replicated in a single AZ only.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q50: site-to-site VPN connection require an internet-routable IP address(static) of the customer gateway’s external interface for the on-premises network.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q51: Bastion host: a special purpose computer on a network specifically designed and configured to withstand attacks. If you have a bastion host in AWS, it is basically just an EC2 instance. It should be in a public subnet with either a public or Elastic IP addrress with sufficient RDP or SSH access defined in the secrurity group. Users log on to the bastion host via SSH or RDP and then use that session to manage other hosts in the private subnets.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q52: encryption TBC&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q54: Security group, subnet, ACL, route table, internet gateway.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q56: disaster recovery: Pilot light is used to set up a minimum version of the application that is always available in case of any outages&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Q57: elasticity:
    &lt;ul&gt;
      &lt;li&gt;Using Elastic Load Balancer&lt;/li&gt;
      &lt;li&gt;create a policy in Route53, such as weighted routing policy to evenly distribute the traffic to 2 or more EC22 instances.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Q58: DNS
    &lt;ul&gt;
      &lt;li&gt;A Name: &lt;code&gt;www.example.com&lt;/code&gt; to ip&lt;/li&gt;
      &lt;li&gt;CNAME : nameB to &lt;code&gt;www.example.com&lt;/code&gt;, only subdomain&lt;/li&gt;
      &lt;li&gt;Alias record: similar to CNAME but can also apply to root domain, like &lt;code&gt;exmaple.com&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q60: Application Load Balancers support TLS termination capabilities, path-based routing, host-based routing and support for containerized applications hence&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q63: Cognito is for deliver temporary, limited-priviledge credentials to your application so that your users can access AWS resources.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Q64: TBC&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;s6&quot;&gt;S6&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Q2: scheduled reserved instance&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Q3: Connect VPC to remote network by VPN via
    &lt;ul&gt;
      &lt;li&gt;Direct Connect&lt;/li&gt;
      &lt;li&gt;IPsec VPN&lt;/li&gt;
      &lt;li&gt;AWS VPN CloudHUb&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;3rd party software VPN appliance&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;BTW, AWS Connect is not a VPN connectivity, its a self-service, cloud-based contact center service.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q4: cross-zone load balancing can distribute incoming requests evenly across the AZ&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q9: Storgae Optimized Instances is designed for workloads that require high, sequential read and write access to very large data sets on local storage.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q14: Elastic IP cost: there is no cost if the instance is running and it has only one associated EIP.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q16: You can use &lt;code&gt;User data&lt;/code&gt; configuration to setup script that will be running before instance launch to customize your instance.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q17, multicast is not supported by VPC, you can create a virtual overlay networking running on the OS level of the instance to achieve that.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q18: AWS organisation and service control policy allow certain access to services and actions are properly controlled to comply with the security policy of the compnay.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q19: &lt;code&gt;Cache-Control&lt;/code&gt; and &lt;code&gt;Expires&lt;/code&gt;, &lt;code&gt;max-age&lt;/code&gt; controls how cloudFront will cache the object.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q20: public datasets such as satellite imagery, geiospatiol is free on AWS.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Q21: enable instances in subnet to fetch software patches from internet but prevent outside network from initiating a connection:
    &lt;ul&gt;
      &lt;li&gt;IPV4: NAT gateway&lt;/li&gt;
      &lt;li&gt;IPV6: egress-only internet gateway&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q24: S3 Multipart Upload API allows you to upload data to S3 in concurrency.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q25: Web Identitfy Federation via AWS Security Token Service allow OpenID Connect-Compatible identity provider.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q26: Sticket Session allow Classic Load Balancer to bind user’s session to a specific instance.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q27: &lt;code&gt;concurrent connections from multiple EC2 instances in different AZs&lt;/code&gt; via EFS.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q28: Remote Desktop connection via port 3389&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q35: Amazon Kinesis makes it easy to collect, process, and analyze real-time, streaming data so you can get timely insights and react quickly to new information.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q37: deployment groups in Code Deploy can help automate code deployments in a consistent manner.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q42: Aurora replicas can increase Aurora RDS availability.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q48: it is recommended you launch the number of instances that you need in placement group in a single luanch request with same instance type.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Q50: advantages of Enhanced Networking
    &lt;ul&gt;
      &lt;li&gt;higher packet per second performance&lt;/li&gt;
      &lt;li&gt;lower inter-instance latencies&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q54: AWS Cloud HSM over KMS for cyour own hardware security.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q58: 0499 acount id AWS console login url: &lt;code&gt;https://0499.signin.aws.amazon.com/console&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q59: By default, data records in kinesis are only accessible for 24 hours from the time they are added to a stream.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q60: Route 53 can distribute load for latency-based routing accross different AZ.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Q62: DNSSEC(Domain Name System Security Extensions) is not supported by Route 53.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;codeDeploy vs Beanstalk vs CloudFormation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-参考资料&quot;&gt;2 参考资料&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/vim-commands-cheat-sheet/&quot;&gt;《Vim Masterclass》&lt;/a&gt;;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Shunmian</name><email>shunmian@gmail.com</email></author><category term="Vim" /><summary type="html">目录</summary></entry><entry><title type="html">iOS 2D Game - SpriteKit入门(一)</title><link href="http://localhost:4000/01%20objective-c/2016/12/30/SpriteKit.html" rel="alternate" type="text/html" title="iOS 2D Game - SpriteKit入门(一)" /><published>2016-12-30T00:00:00+08:00</published><updated>2016-12-30T00:00:00+08:00</updated><id>http://localhost:4000/01%20objective-c/2016/12/30/SpriteKit</id><content type="html" xml:base="http://localhost:4000/01%20objective-c/2016/12/30/SpriteKit.html">&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-spritekit-概览&quot; id=&quot;markdown-toc-1-spritekit-概览&quot;&gt;1. SpriteKit 概览&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-sknodeskphysicsworld--skphysicsbodyskaction理解&quot; id=&quot;markdown-toc-2-sknodeskphysicsworld--skphysicsbodyskaction理解&quot;&gt;2. SKNode，SKPhysicsWorld &amp;amp; SKPhysicsBody，SKAction理解##&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-sknode&quot; id=&quot;markdown-toc-21-sknode&quot;&gt;2.1 SKNode###&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#211-skscene&quot; id=&quot;markdown-toc-211-skscene&quot;&gt;2.1.1 SKScene####&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#212-skspritenode&quot; id=&quot;markdown-toc-212-skspritenode&quot;&gt;2.1.2 SKSpriteNode####&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#213-sklabelnode&quot; id=&quot;markdown-toc-213-sklabelnode&quot;&gt;2.1.3 SKLabelNode####&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#214-skemitternode&quot; id=&quot;markdown-toc-214-skemitternode&quot;&gt;2.1.4 SKEmitterNode&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-skphysicsworld--skphysicsbody&quot; id=&quot;markdown-toc-22-skphysicsworld--skphysicsbody&quot;&gt;2.2 SKPhysicsWorld &amp;amp; SKPhysicsBody&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#221-skphysicsworld&quot; id=&quot;markdown-toc-221-skphysicsworld&quot;&gt;2.2.1 SKPhysicsWorld&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#222-skphysicsbody&quot; id=&quot;markdown-toc-222-skphysicsbody&quot;&gt;2.2.2 SKPhysicsBody&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-skaction&quot; id=&quot;markdown-toc-23-skaction&quot;&gt;2.3. SKAction&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3其它类&quot; id=&quot;markdown-toc-3其它类&quot;&gt;3.其它类&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-总结&quot; id=&quot;markdown-toc-4-总结&quot;&gt;4 总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-spritekit-概览&quot;&gt;1. SpriteKit 概览&lt;/h2&gt;

&lt;p&gt;SpriteKit是Apple官方的2D游戏框架， 让开发者在iOS 和OS 平台上更高效的开发2D游戏。&lt;/p&gt;

&lt;p&gt;学习SpriteKit， 最权威的资料应该是苹果官方文档 -
&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/GraphicsAnimation/Conceptual/SpriteKit_PG/Introduction/Introduction.html&quot;&gt;SpriteKit Programming Guide&lt;/a&gt;。 该文档很全面但是不适合初学者。 对于初学者， 理解SpriteKit背后的设计rationale才能更好的应用它。 那么SpriteKit的设计rationale是什么呢？&lt;/p&gt;

&lt;p&gt;对于一个2D游戏来说， 设计应该分为三个部分(以超级马里奥为例):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;View: 即视图显示，用于展示各个Sprite(精灵)，例如马里奥图片和子弹图片;&lt;/li&gt;
  &lt;li&gt;Physics Model:即物理模型， 包括质量， 体积(2D游戏是面积)， 密度， 碰撞， 地球引力等， 例如超级马里奥碰到水管会弹回来， 往上跳会下落。&lt;/li&gt;
  &lt;li&gt;Action:即 物理模型受到的外部作用力。例如超级马里奥里的空中台阶自己来回移动(开发者给其施加一个永恒的来回运动的作用力)。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这三个方面分别对应SpriteKit里面的SKNode，SKPhysicsWorld &amp;amp; SKPhysicsBody，SKAction。&lt;/p&gt;

&lt;h2 id=&quot;2-sknodeskphysicsworld--skphysicsbodyskaction理解&quot;&gt;2. SKNode，SKPhysicsWorld &amp;amp; SKPhysicsBody，SKAction理解##&lt;/h2&gt;
&lt;h3 id=&quot;21-sknode&quot;&gt;2.1 SKNode###&lt;/h3&gt;

&lt;p&gt;SKNode 是 SpriteKit 显示视图的Building Block。它能提供一个游戏视图的基本属性和方法:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKNode Class

属性:
.zPosition              // 视图的z方向的距离，用于标定重叠视图的显示顺序;
.xScale                 // x方向的视图放大倍数;
.yScale                 // y方向的视图放大倍数;
.alpha                  // 视图的alpha值;
.hidden                 // 视图是否隐藏;

方法:
-addChild:              // 增加子SKNode，与UIView 的 -addSubView: 类似;
-removeFromParent:      // 从父SKNode移除，与 UIView的removeFromSuperview 类似;
-runAction:             // 运行一个SKAction;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;我们一般不直接用它，它下面有几个子类，其中最常见的是以下4个:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SKEffectNode: 用于缓存，渲染，加滤镜于图片。它的子类SKScene 用于展示所有的SKNode，是游戏场景;&lt;/li&gt;
  &lt;li&gt;SKSpriteNode: 用于展示精灵，如超级马里奥图片;&lt;/li&gt;
  &lt;li&gt;SKLabelNode: 用于展示单行文本，如游戏时间;&lt;/li&gt;
  &lt;li&gt;SKEmitterNode: 用于展示粒子，例如喷射火焰的岩浆;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面我们就这四个类做一个简单的介绍。&lt;/p&gt;

&lt;h4 id=&quot;211-skscene&quot;&gt;2.1.1 SKScene####&lt;/h4&gt;
&lt;p&gt;SKScene 是游戏关口(level)，游戏中的一个场景，例如马里奥的第一关和第二关分别是两个SKCene实例。在这个场景中，包含了所有其他SKNode(或者其子类)，比如马里奥(SKSpriteNode)，游戏时间(SKLabelNode)，喷射火焰的岩浆(SKEmitterNode)。它的主要属性和方法有:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKScene Class

属性:
.view                   // 关口的父视图，是一个SKView，用来展示各个SKScene关口;
.physicsWorld           // 世界的物理模型，是一个SKPhysicsWorld实例，这个后面会介绍;

方法:
-initWithSize:          // 初始化方法;
+SceneWithSize:         // 初始化类工厂方法;
-didMoveToView:         // 当SKScene实例被SKView展示时调用，类似UIView的-didMoveToSuperview;
-addChild:              // 增加子SKNode，如马里奥(SKSpriteNode);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;212-skspritenode&quot;&gt;2.1.2 SKSpriteNode####&lt;/h4&gt;
&lt;p&gt;SKSpriteNode是用来展示sprite，那么何为sprite呢，sprite有什么作用呢? Wiki中是这样定义的。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sprite: two-dimensional image or animation that is integrated into a larger scene.Initially including just graphical objects handled &lt;strong&gt;separately&lt;/strong&gt; from the memory bitmap of a video display，this now includes various manners of graphical overlays.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;sprite是从整个display独立出来渲染的2D图片。如何理解这句话呢，在sprite出现之前，2D游戏要渲染一帧图片(比如马里奥在一个蓝天白云的背景前)，需要把整个图片(马里奥+背景)计算完后再渲染，其中背景的渲染在每一帧中都重复。sprite的出现正是为了避免这一重复。马里奥是一个sprite，他在一个固定的背景前跳跃，只需要将马里奥的每一帧渲染出来叠在背景(背景不需要重复计算渲染)即可，这就是为什么sprite被称为从整个display独立出来渲染的2D图片。sprite的思想在几十年前就已经有了，SpriteKit只是沿袭了2D游戏设计中运用sprite这一思想，用SKSpriteNode来表示sprite类。我们来看下SKSpriteNode的属性和方法&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKSpriteNode Class

属性:
.size                       // 大小;
.physicsBody                // 物体的物理模型，是一个SKPhysicsBody实例，这个后面会介绍;

方法:
+spriteNodeWithImageNamed:  // 类工厂方法，用图片创建sprite;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;213-sklabelnode&quot;&gt;2.1.3 SKLabelNode####&lt;/h4&gt;
&lt;p&gt;SKLabelNode是SpriteKit用来展示text，它的方法和属性如下。有一点需要注意的是它只能显示单行文本。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKLabelNode Class

属性:
.fontSize               // 字体大小;
.color                  // 字体颜色;
.fontName               // 字体名字;

方法:
-initWithFontNamed:     // 通过字体名字初始化方法;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;214-skemitternode&quot;&gt;2.1.4 SKEmitterNode&lt;/h4&gt;
&lt;p&gt;SKEmitterNode是SpriteKit用来展示粒子系统的，下面介绍下它的常见使用方法。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;subclass一个SpriteKit Particles Files ( ctrl + N –&amp;gt; iOS，Resources，SpriteKit Particles Files –&amp;gt; choose 1 of the eight template –&amp;gt; save，你会得到一个.sks 和.png 文件，点击.sks文件:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2016-02-20/SKEmitterNode_1.png&quot; alt=&quot;SKEmitterNode_1&quot; /&gt;
 &lt;img src=&quot;http://localhost:4000/assets/images/posts/2016-02-20/SKEmitterNode_2.png&quot; alt=&quot;SKEmitterNode_2&quot; /&gt;
 &lt;img src=&quot;http://localhost:4000/assets/images/posts/2016-02-20/SKEmitterNode_3.png&quot; alt=&quot;SKEmitterNode_3&quot; /&gt;
 &lt;img src=&quot;http://localhost:4000/assets/images/posts/2016-02-20/SKEmitterNode_4.png&quot; alt=&quot;SKEmitterNode_4&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;在.sks文件右侧调整各参数，例如有粒子平均产生率(BirthRate) 单位是个/秒。右边的range是一个分布，在平均产生率上 ±  range/2 分布。particle texture 是粒子的纹路，你可以选择自己加入的图片文件。&lt;/li&gt;
  &lt;li&gt;调整完成后如何在code中调用.sks文件呢:&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;SKEmitterParticle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fireParticles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSKeyedUnarchiver&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;unarchiveObjectWithFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSBundle&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mainBundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pathForResource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;FireParticle&quot;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ofType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;sks&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fireParticles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;particleBirthRate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fireParticles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CGPointMake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;pre&gt;&lt;code&gt; 用NSBundle读取.sks 文件，然后可以进一步修改其属性。这样就完成了SpriteKit Particles Files 的子类化和应用。
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;22-skphysicsworld--skphysicsbody&quot;&gt;2.2 SKPhysicsWorld &amp;amp; SKPhysicsBody&lt;/h3&gt;
&lt;p&gt;SpriteKit 里表示物理模型的有两个类，SKPhysicsWorld &amp;amp; SKPhysicsBody，前者属于SKScene，后者属于SKNode其他子类。SKPhysicsWorld 和 SKPhysicsBody 都继承与NSObject。我们先来看看SKPhysicsWorld。&lt;/p&gt;

&lt;h4 id=&quot;221-skphysicsworld&quot;&gt;2.2.1 SKPhysicsWorld&lt;/h4&gt;
&lt;p&gt;对于一个物理世界来说，例如我们的地球，有一些属性决定了我们日常生活的基础，如重力加速度。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKPhysicsWorld Class

属性:
.gravity:                   // 重力加速度了， 通过CGVectorMaker(0，-9.8)获得现实生活一个重力加速度。第一个参数是x轴，向右为正，第二个参数是y轴，向上为正;
.contactDelegate            // SKPhyicsContactDelegate 实例;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;又比如物体碰撞后的处理者，可以理解为物体碰撞后有一个裁判需要对此进行处理，在SpriteKit中是SKPhyicsContactDelegate。而SKPhysicsWorld 的contactDelegate属性就指向这样一个delegate，也就是说由物理世界充当裁判的角色。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKPhysicsContactDelegate Class

方法:
-didBeginContact:       // 碰撞开始;
-didEndContact:         // 碰撞结束;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;对于SKPhysicsContactDelegate两个方法的使用我们后面介绍。&lt;/p&gt;

&lt;h4 id=&quot;222-skphysicsbody&quot;&gt;2.2.2 SKPhysicsBody&lt;/h4&gt;
&lt;p&gt;SKPhysicsBody代表物理模型里的物体，它有质量，体积(2D 游戏里是面积)，密度，线速度，角速度，自旋速度等。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKPhysicsBody Class

属性:
.mass                       // 质量，单位kg;
.area                       // 面积，单位m*m;
.density                    // 密度，单位kg/m*m;
.friction                   // 表面粗糙度，0.0-1.0;
.restitution                // 碰撞时，反射速度/入射速度，0.0-1.0;
.linearDamping              // 物体线速度受液体或者气体(空气)摩擦的影响， 0.0-1.0;
.dynamic                    // YES，动态; NO，静态，与SKPhysicsWorld相连，不受碰撞影响;
.categoryBitMask            // 自身的contact &amp;amp; collision ID;
.contactTestBitMask         // 外界contact测试的ID集合;
.collisionBitMask           // 外界collision的ID集合;

方法:
+bodyWithRectangleOfSize:   // 创建Volume-physicsBody的一种类工厂方法;
+bodyWithEdgeLoopFromRect:  // 创建Edge-physicsBody的一种类工厂方法;
-applyImpulse:              // 被施加外部瞬时力;
-applyForce:                // 被施加外部永恒力;
-runAction:                 // 运行一个SKAction实例;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;.dynamics 是一个BOOL，设置为NO时，静止(可以理解为与SKPhyisicsWorld相连)，位置不受碰撞前后影响， 例如马里奥里的乌龟壳，碰到水管后反弹，水管静止，这里水管的dynamic就是NO， 乌龟壳的dynmaics就是YES。&lt;/p&gt;

&lt;p&gt;要创建一个在框里永远碰撞而不停下的ball，应设置如下friction，restituition， linearDamping:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;ball&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;friction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ball&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;restitution&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ball&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linearDamping&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;SKPhysicsBody的创建分为两种，一种是Volume-physicsBody，就是有体积(2D里是面积)的物体，有体积意味着有质量，受牛顿定律影响;另一种是只有边缘没有体积的Edge-physicsBody，如上面那个装永动球的箱子，我们只关心箱子的边框，用 +bodyWithEdgeLoopFromRect: 创建它并设置其dynamics = NO 即可。&lt;/p&gt;

&lt;p&gt;下面重点要介绍的是接触和碰撞。
SpriteKit为每个物体在接触和碰撞时设定了一个身份证——categoryBitMask，该属性唯一标定了接触和碰撞时每个物体的身份，是一个32 bit的数，我们下面先看code再解释:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MariaCategory&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TortoiseCategory&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BulletCategory&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;我们设置了3种uint32_t的静态常量，分别代表马里奥，子弹，乌龟。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objec&quot; data-lang=&quot;objec&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;maria.categoryBitMask = MariaCategory;
tortoise.categoryBitMask = TortoiseCategory;
bullet.categoryBitMask = BulletCategory;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;然后分别给maria，tortoise以及bullte的categoryBitMask设置为相应值。同时我们需要在以下情形中判断contact发生并作出相应，如马里奥碰到乌龟，马里奥die;子弹碰到乌龟，乌龟die:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;maria&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contactTestBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TortoiseCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tortoise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contactTestBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BulletCategory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MariaCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bullet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contactTestBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TortoiseCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;上面将maria感兴趣的contact ID集设置为乌龟，乌龟设置为子弹和马里奥，子弹设置为乌龟。用32位非常便于取或操作，同时也限定了一个游戏场景里的碰撞接触的身份证只能有32个。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GameScene&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SKScene&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKPhysicsContactDelegate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moveToParent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;physicsWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contactDelegate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;didBeginContact&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKPhysicsContact&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//我们来简单举一个子弹打到乌龟，乌龟die的contact测试。&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SKPhysicsBody&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tortoise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categoryBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BulletCategory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categoryBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TortoiseCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tortoise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categoryBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BulletCategory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categoryBitMask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TortoiseCategory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tortoise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodyA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;tortoise die: %@&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tortoise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这样当子弹打到乌龟，GameScene 作为SKPhysicsContactDelegate就会响应-didBeginContact: 方法，然后判断情形，如果是，则打印出来”tortoise die:tortoise的object信息”。&lt;/p&gt;

&lt;p&gt;了解了categoryBitMask 和contactTestBitMask， 我们再来看collisionBitMask就简单了，它表示物体之间会不会intersect，也是32位数。默认是32个1，表示与任何物体碰撞都不会穿过那个物体。如果你需要将某个物体穿过另一个物体，比如子弹打到马里奥，直接穿过(当然游戏中不可能发生):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objec&quot; data-lang=&quot;objec&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;maria.collisionBitMask = ~BulletCategory;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;最后力的施加我们在SKAction里介绍。&lt;/p&gt;

&lt;h3 id=&quot;23-skaction&quot;&gt;2.3. SKAction&lt;/h3&gt;
&lt;p&gt;SKAction表示一个动作，由SKNode得 -runAction: 方法执行，它有几十个方法。下面列出几个比较典型的， 它的实例化大部分都是类工厂方法:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;SKAction Class

初始化方法:
+moveByX:y:duration:                    // 移动一个SKNode;
+rotationByAngule:duration:             // 转动一个SKNode;
+hide                                   // 隐藏一个SKNode， 对应的还有 +unhide;
+applyForce:duration:                   // 施加力;
+playSoundFileNamed:waitForCompletion:  // 播放音频文件;
+removeFromParent                       // 将SKNode从父node里移除;
+waitForDuration:                       // 等待的动作，在SKAction group和sequence里用到;

+group:                                 // 组合几个SKAction，从时间起点，这几个SKAction同时开始;
+sequence:                              // 串联几个SKAction，从时间起始点，下一个的开始在上一个结束后才执行;
+repeatActionForever:                   // 永远重复SKAction;
-reversedAction:                        // 逆向一个SKAction，如原来从左到右2秒，现在从右到左两秒;

+runBlock:queque:                       // 在队列里执行SKAction;
+customActionWithDuration:actionBlock:  // 定制SKAction;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;例如马里奥中需要一个空中台阶，“”从左到右2秒，等待0.5秒，从右到左2秒，等待0.5秒 ”的sequence永远运行下去，code如下:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moveToRight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;moveByX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moveToLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moveToRight&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;reversedAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;waitForDuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moveToRightAndLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sequence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:@[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moveToRight&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moveToLeft&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moveToRightAndLeftForever&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKAction&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;repeatActionForever&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moveToRightAndLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;platform&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;runAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moveToRightAndLeftForever&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;3其它类&quot;&gt;3.其它类&lt;/h2&gt;
&lt;p&gt;在SKView中，场景的不同切换要用到SKTransition，self指一个scene:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;SKTransition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doorOpenTransition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SKTransition&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doorsOpenHorizontalWithDuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;presentScene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;winScene&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doorOpenTransition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;4-总结&quot;&gt;4 总结&lt;/h2&gt;
&lt;p&gt;以上对于SKSpriteKit里的大部分常用类及其用法做了介绍，相信读者能够自己画出SKSpriteKit的类图关系，再回过头来跟着online的SKSpriteKit的tutorial做一遍的时候，自然就了然于心。后面还有一篇从各个小topic来看SKSpriteKit。&lt;/p&gt;</content><author><name>Shunmian</name><email>shunmian@gmail.com</email></author><category term="SpriteKit" /><summary type="html">目录</summary></entry><entry><title type="html">MIT_6824 (一)： Introduction (MapReduce)</title><link href="http://localhost:4000/-09%20distributed%20system/2016/12/11/MIT_6824-(%E4%B8%80)-Introduction.html" rel="alternate" type="text/html" title="MIT_6824 (一)： Introduction (MapReduce)" /><published>2016-12-11T00:00:00+08:00</published><updated>2016-12-11T00:00:00+08:00</updated><id>http://localhost:4000/-09%20distributed%20system/2016/12/11/MIT_6824%20(%E4%B8%80):%20Introduction</id><content type="html" xml:base="http://localhost:4000/-09%20distributed%20system/2016/12/11/MIT_6824-(%E4%B8%80)-Introduction.html">&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-introduction&quot; id=&quot;markdown-toc-1-introduction&quot;&gt;1 Introduction&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11-outline&quot; id=&quot;markdown-toc-11-outline&quot;&gt;1.1 Outline&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-参考资料&quot; id=&quot;markdown-toc-2-参考资料&quot;&gt;2 参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-introduction&quot;&gt;1 Introduction&lt;/h2&gt;

&lt;h3 id=&quot;11-outline&quot;&gt;1.1 Outline&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Reading: &lt;a href=&quot;http://nil.csail.mit.edu/6.824/2016/papers/mapreduce.pdf&quot;&gt;MapReduce(2004)&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Lab 1: &lt;a href=&quot;http://nil.csail.mit.edu/6.824/2016/labs/lab-1.html&quot;&gt;MapReduce&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Lecture:  &lt;a href=&quot;https://www.youtube.com/watch?v=hBWfjkGKRas&amp;amp;index=1&amp;amp;list=PLkcQbKbegkMqiWf7nF8apfMRL4P4sw8UL&quot;&gt;Video&lt;/a&gt;, &lt;a href=&quot;http://nil.csail.mit.edu/6.824/2016/notes/l01.txt&quot;&gt;Notes&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Other Materials: &lt;a href=&quot;https://www.douban.com/note/364922549/&quot;&gt;MapReduce related papers&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;###&lt;/p&gt;

&lt;p class=&quot;img_middle_hg&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/03 Java/2016-11-11-Spring Framework/Spring Summary.png&quot; alt=&quot;Spring Summary.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-参考资料&quot;&gt;2 参考资料&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.distributed-systems.net/index.php/books/distributed-systems-3rd-edition-2017/&quot;&gt;《Distributed System》&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://pdos.csail.mit.edu/6.824/schedule.html&quot;&gt;MIT 6.824&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/chaozh/MIT-6.824&quot;&gt;MIT 6.824 作业&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://ts25504.github.io/2016/08/16/MIT-6-824%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/&quot;&gt;MIT-6.824学习之路&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Google三剑客: &lt;a href=&quot;https://static.googleusercontent.com/media/research.google.com/en//archive/mapreduce-osdi04.pdf&quot;&gt;MapReduce&lt;/a&gt;, &lt;a href=&quot;https://static.googleusercontent.com/media/research.google.com/en//archive/bigtable-osdi06.pdf&quot;&gt;BigTable&lt;/a&gt;, &lt;a href=&quot;https://static.googleusercontent.com/media/research.google.com/en//archive/gfs-sosp2003.pdf&quot;&gt;GFS&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Shunmian</name><email>shunmian@gmail.com</email></author><category term="Distributed System" /><summary type="html">目录</summary></entry><entry><title type="html">Distributed System (八)： Security</title><link href="http://localhost:4000/-09%20distributed%20system/2016/12/09/Distributed-System-(%E5%85%AB)-Security.html" rel="alternate" type="text/html" title="Distributed System (八)： Security" /><published>2016-12-09T00:00:00+08:00</published><updated>2016-12-09T00:00:00+08:00</updated><id>http://localhost:4000/-09%20distributed%20system/2016/12/09/Distributed%20System%20(%E5%85%AB):%20Security</id><content type="html" xml:base="http://localhost:4000/-09%20distributed%20system/2016/12/09/Distributed-System-(%E5%85%AB)-Security.html">&lt;p class=&quot;article_content_title&quot;&gt;目录&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-summary&quot; id=&quot;markdown-toc-1-summary&quot;&gt;1 Summary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-参考资料&quot; id=&quot;markdown-toc-2-参考资料&quot;&gt;2 参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class=&quot;hr-short-left&quot; /&gt;

&lt;h2 id=&quot;1-summary&quot;&gt;1 Summary&lt;/h2&gt;

&lt;p class=&quot;img_middle_hg&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/03 Java/2016-12-09-Distributed System_08_Security/Security Summary.png&quot; alt=&quot;Spring Summary.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-参考资料&quot;&gt;2 参考资料&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.distributed-systems.net/index.php/books/distributed-systems-3rd-edition-2017/&quot;&gt;《Distributed System》&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://pdos.csail.mit.edu/6.824/schedule.html&quot;&gt;MIT 6.824&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/chaozh/MIT-6.824&quot;&gt;MIT 6.824 作业&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://ts25504.github.io/2016/08/16/MIT-6-824%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/&quot;&gt;MIT-6.824学习之路&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Shunmian</name><email>shunmian@gmail.com</email></author><category term="Distributed System" /><summary type="html">目录</summary></entry></feed>